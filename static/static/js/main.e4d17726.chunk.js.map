{"version":3,"sources":["utils/misc.js","utils/http_functions.js","utils/constants.js","history.js","actions/auth.js","components/sidebar/styles.js","components/ContactItem.js","actions/data.js","components/AccountPreview.js","components/sidebar/Sidebar.js","components/chatview/styles.js","components/chatview/ChatView.js","pages/dashboard/styles.js","components/messagebox/styles.js","components/messagebox/MessageBox.js","dialogs/LogOutDialog.js","dialogs/EditPhotoDialog.js","dialogs/AccountDialog.js","actions/contacts.js","components/AddChat.js","components/AddGroup.js","dialogs/AddChatDialog.js","dialogs/UserInfoDialog.js","dialogs/DeleteContactDialog.js","components/ContactList.js","components/InvitationPreview.js","components/InvitationList.js","dialogs/AddContactDialog.js","dialogs/ContactsDialog.js","components/GroupPreview.js","dialogs/DeleteChatDialog.js","components/ChatInfoBar.js","dialogs/DeleteGroupDialog.js","dialogs/LeaveGroupDialog.js","dialogs/ManageMembersDialog.js","components/ChatInfoPanel.js","pages/dashboard/Dashboard.js","actions/chats.js","components/TopBar.js","pages/login/styles.js","pages/login/Login.js","pages/register/styles.js","pages/register/Register.js","Theme.js","components/notAuthenticatedComponent.js","components/AuthenticatedComponent.js","reducers/auth.js","reducers/data.js","reducers/chats.js","reducers/contacts.js","reducers/index.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["createReducer","initialState","reducerMap","state","action","reducer","type","payload","parseJSON","response","data","api_host","tokenConfig","token","headers","validate_token","axios","post","check_user_status","login","get","createBrowserHistory","loginUserSuccess","localStorage","setItem","loginUserFailure","error","removeItem","status","statusText","loginUserRequest","logout","logoutAndRedirect","dispatch","history","push","redirectToRoute","route","loginUser","password","get_token","then","e","alert","catch","registerUserRequest","registerUserSuccess","registerUserFailure","registerUser","name","surname","create_user","styles","theme","drawer","width","flexShrink","breakpoints","down","marginLeft","marginRight","drawerPaper","sidebarTop","flexGrow","overflowY","paddingTop","sidebarDown","padding","toolbar","mixins","minifiedToolbar","height","spacing","button","float","divider","clear","addChatBtn","badge","ContactItem","checkTime","i","userIsSender","props","lastMessage","sender","date","h","getHours","m","getMinutes","this","d","Date","UTC","getFullYear","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","now","isToday","getTime","setHours","isThisWeek","getWeekNumber","months","getDay","users","classes","messageSymbols","ListItem","className","listItem","selected","onClick","ListItemAvatar","listItemAvatar","avatarContainer","profile_image","Avatar","src","avatar","charAt","toUpperCase","AvatarGroup","max","groupPhoto","groupWithPhoto","slice","map","_usr","_idx","key","length","avatarGroup","avatarGroup3","ListItemText","primary","chatTitle","secondary","Fragment","message","substr","textGroup","textGroup3","time","timestamp","getTimeFormat","parseInt","receiverHasRead","color","notification","receivers","find","React","Component","connect","isFetching","auth","getChats","fetchUserChats","getGroups","fetchUserGroups","withWidth","withStyles","position","backgroundColor","fontSize","fontFamily","right","top","palette","text","minWidth","receiveProtectedData","fetchProtectedDataRequest","fetchProtectedData","initFunction","data_about_user","receiveUpdatedData","updateDataFailure","updateUserDataRequest","updateUserDataClose","updateUserData","user","put","update_user_data","receiveUpdatedPhoto","updateUserPhotoFailure","updateUserPhotoRequest","updateUserPhoto","update_user_photo","fetchUsersDataRequest","receiveUsersData","cleanUsersData","fetchUsersData","get_users_data","fetchUnauthorizedUserDataRequest","fetchUnauthorizedUserDataFailure","receiveUnauthorizedUsersData","unauthorizedUser","cleanUnauthorizedUserData","fetchUnauthorizedUserData","get_unauthorized_user_data","checkUserStatus","setStatus","a","getItem","online","checked","StyledBadge","boxShadow","background","paper","left","borderRadius","animation","border","content","transform","opacity","Badge","AccountPreview","setState","socket","on","removeAllListeners","currentUser","handleClick","pointedListItem","overlap","anchorOrigin","vertical","horizontal","variant","last_seen","groupOwner","badgeContent","owner","cursor","borderColor","disabled","display","margin","Sidebar","Drawer","anchor","open","sidebarOpen","onClose","handleToggleSidebar","IconButton","Divider","Button","fullWidth","newChatBtnHandle","List","chatList","sort","chatA","chatB","parseFloat","lastUpdate","chat","index","title","messages","filter","_user","userLogin","selectedChatIndex","chat_id","selectChatHandle","photo","accountHandleClick","ListItemIcon","contactsHandleClick","invitations","received","logOutHandleClick","chats","loaded","contacts","bindActionCreators","actionCreators","boxSizing","userSent","wordWrap","marginTop","main","maxWidth","borderBottomRightRadius","friendSent","borderTopLeftRadius","bottom","messageContainer","dividerDate","noAvatar","messageGroupUser","alignItems","justifyContent","messageGroupFriend","btnContainer","paddingLeft","moreBtn","menu","loader","ChatView","handleOpenMessageMenu","anchorMenu","currentTarget","removeTarget","id","handleCloseMessageMenu","container","document","getElementById","scrollTo","scrollHeight","msg","result","_msg","_index","setDivider","Typography","component","setAvatar","loading","CircularProgress","Menu","Boolean","anchorEl","MenuItem","handleRemoveMessage","dashboard","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","bigIcon","fill","defaultComponent","textAlign","transition","chatViewContainer","overflow","flexDirection","messageBox","minHeight","zIndex","textField","borderBottom","MessageBox","messageValid","txt","replace","submitMessage","bind","TextField","style","placeholder","onKeyUp","userTyping","onChange","target","value","autoComplete","helperText","keyCode","sendMessageHandle","selectedChatType","isAuthenticating","handleClose","setOpen","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","EditPhotoDialog","onSelectFile","files","reader","FileReader","addEventListener","readAsDataURL","onImageLoaded","image","imageRef","onCropChange","crop","unit","aspect","handleSave","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","FormData","append","console","getCroppedImg","handleUpdatePhoto","croppedImageUrl","severity","acceptedFiles","filesLimit","showPreviewsInDropzone","dropzoneClass","drop","ruleOfThirds","alt","marginBottom","AccountDialog","loginIsValid","passwordIsValid","formIsValid","passwordConfirmation","updateError","newUser","handleDialogOpen","editPhotoDialogOpen","whichInput","event","img","initData","Tooltip","label","passwordInput","form","input","fetchContactList","get_user_contacts","fetchFilteredContactList","get_filtered_user_contacts","fetchInvitationList","get_user_invitations","progress","hidden","usersList","chooseUser","list","maxHeight","chip","validation","groupUserList","Chip","onDelete","removeUserFromList","contactList","contactA","contactB","contact","toLowerCase","includes","userInList","addUserToList","AddChatDialog","cleanContactList","addChatLogin","addGroupLogin","currentTab","addChatClose","handleAddChat","addChat","addGroupError","addGroup","handleChange","tab","handleAddUserToList","handleRemoveUserFromList","isUserInGroupList","Tabs","Tab","a11yProps","addChatError","isAddingChat","filteredContacts","openModal","userInfo","info","actions","contacts_login","size","handleGoToChat","handleRemoveContact","handleAddContact","DeleteContactDialog","ContactList","handleSearch","searchValue","userInfoOpen","deleteContactDialogOpen","selectedUser","search","addBtn","useStyles","makeStyles","InvitationPreview","handleAccept","handleDecline","invitation","acceptInvitation","declineInvitation","successMsg","maxLength","handleSendInvitation","ContactsDialog","inviteMessage","handleSnackbarClose","reason","snackbar","handleAddContactModalOpen","contactDialogOpen","success","handleAcceptInvitation","handleDeclineInvitation","setSocketListeners","handleShowSnackbar","receiver","emit","isContactsFetching","isDataFetching","Snackbar","autoHideDuration","selectChat","group3","fontWeight","GroupPreview","aria-label","handleChatInfoOpen","DeleteChatDialog","handleRemoveChat","ChatInfoBar","handleSetOpenDialog","deleteChatDialogOpen","handleCloseMenu","chatPreview","getSelectedChatUserList","_chat","selectedChat","accountContainer","handleOpenMenu","menuItem","DeleteGroupDialog","handleRemoveGroup","LeaveGroupDialog","isOwner","handleLeaveGroup","ManageMembersDialog","handleSaveGroupMembers","userList","flexWrap","ChatInfoPanel","hanldeToggleEditTitle","isEditMode","deleteGroupDialogOpen","leaveGroupDialogOpen","manageMembersDialogOpen","updateGroupPhoto","users_login","updateGroupMembers","handleUpdateTitle","updateGroupTitle","handleToggle","chatInfo","titleEditField","iconBtn","editBtn","listLabel","userA","userB","deleteBtn","drawerWidth","drawerHeader","borderBottomColor","paddingRight","io","Dashboard","newChatBtnClicked","setModalOpen","chatInfoToggle","chatInfoOpen","handleChatInfoToggle","handleOpenAccountMenu","handleCloseAccountMenu","log","logOutDialogOpen","accountDialogOpen","addChatDialogOpen","contactsDialogOpen","loadingMessages","sendMessage","readMessage","removeMessage","getUserData","window","changeUserStatus","group","chatId","readChat","userData","toString","groups","modal","chat_list","element","handleSelectChat","receiveUserChats","fetchUserChatsRequest","get_chats","addChatRequest","addChatSuccess","addChatFailure","add_chat","deleteChatRequest","deleteChatSuccess","deleteChatFailure","deleteChat","delete","delete_chat","addGroupRequest","addGroupSuccess","addGroupFailure","add_group","updateGroupTitleRequest","updateGroupTitleSuccess","updateGroupTitleFailure","update_group_title","updateGroupMembersRequest","updateGroupMembersSuccess","updateGroupMembersFailure","update_group_members","deleteGroupRequest","deleteGroupSuccess","deleteGroupFailure","deleteGroup","groupId","delete_group","readChatRequest","readChatSuccess","read_chat","receiveUserGroups","fetchUserGroupsRequest","get_groups","updatePhotoMessage","updateGroupPhotoFailure","updateGroupPhotoRequest","update_group_photo","toggleSidebar","header","logo","up","icon","isAuthenticated","isRegistering","isChatsFetching","AppBar","Toolbar","LinearProgress","registerPage","submit","hasAccountHeader","logInLink","textDecoration","welcomeText","Login","cleanUserData","signinError","redirectTo","getData","preventDefault","CssBaseline","Paper","onSubmit","FormControl","required","InputLabel","htmlFor","Input","onBlur","to","Register","submitSignup","signupError","registerStatusText","createMuiTheme","values","xs","sm","md","lg","Theme","ThemeProvider","children","mapStateToProps","mapDispatchToProps","requireNoAuthentication","notAuthenticatedComponent","checkAuth","res","nextProps","prevState","requireAuthentication","AuthenticatedComponent","loaded_if_needed","isRegistered","Object","assign","userName","deleteGroupMessage","deleteChatMessage","updateGroupError","rootReducer","combineReducers","routing","routerReducer","app","App","store","createStore","applyMiddleware","thunkMiddleware","syncHistoryWithStore","browserHistory","exact","path","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4d17726.chunk.js","sourcesContent":["export function createConstants(...constants) {\n    return constants.reduce((acc, constant) => {\n        acc[constant] = constant;\n        return acc;\n    }, {});\n}\n\nexport function createReducer(initialState, reducerMap) {\n    return (state = initialState, action) => {\n        const reducer = reducerMap[action.type];\n\n\n        return reducer\n            ? reducer(state, action.payload)\n            : state;\n    };\n}\n\n\nexport function parseJSON(response) {\n    return response.data;\n}","import axios from 'axios';\nimport { API_PATH } from './constants';\n\nconst api_host = `${API_PATH}/api`;\n\nconst tokenConfig = (token) => ({\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n    },\n});\n\nexport const validate_token = (token) =>\n    axios.post(`${api_host}/auth/is_token_valid`, {\n        token,\n    }, tokenConfig(token));\n\nexport const create_user = (name, surname, login, password) =>\n    axios.post(`${api_host}/auth/signup`, {\n        name,\n        surname,\n        login,\n        password,\n    });\n\nexport const get_token = (login, password) =>\n    axios.post(`${api_host}/auth/signin`, {\n        login,\n        password,\n    });\n\nexport const data_about_user = (token) =>\n    axios.get(`${api_host}/user`, tokenConfig(token));\n\nexport const update_user_data = (token, user) =>\n    axios.put(`${api_host}/user`, user, tokenConfig(token));\n\nexport const update_user_photo = (token, data) =>\n    axios.put(`${api_host}/user/image`, data, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}`,\n        }\n    });\n\nexport const get_users_data = (token, login) =>\n    axios.get(`${api_host}/users/${login}`, tokenConfig(token));\n\nexport const get_unauthorized_user_data = (login) =>\n    axios.get(`${api_host}/user/${login}`, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\nexport const check_user_status = (token, login) =>\n    axios.get(`${api_host}/user/check_status/${login}`, tokenConfig(token));\n\nexport const get_chats = (token) =>\n    axios.get(`${api_host}/chats`, tokenConfig(token));\n\nexport const add_chat = (token, login) =>\n    axios.post(`${api_host}/chats`, {user: login}, tokenConfig(token));\n\nexport const read_chat = (token, chat, type) =>\n    axios.put(`${api_host}/chat/${chat}`, {type}, tokenConfig(token));\n\nexport const delete_chat = (token, id) =>\n    axios.delete(`${api_host}/chat/${id}`, tokenConfig(token));\n\nexport const add_group = (token, title, users) =>\n    axios.post(`${api_host}/groups`, {\n        title: title,\n        users: users\n    }, tokenConfig(token));\n\nexport const update_group_title = (token, id, title) =>\n    axios.put(`${api_host}/group/${id}`, {\n        title: title\n    }, tokenConfig(token));\n\nexport const update_group_photo = (token, data, chat) =>\n    axios.put(`${api_host}/group/image/${chat}`, data, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}`,\n        }\n    });\n\nexport const update_group_members = (token, data, chat) =>\n    axios.post(`${api_host}/group/${chat}`, data, tokenConfig(token));\n\nexport const delete_group = (token, id) =>\n    axios.delete(`${api_host}/group/${id}`, tokenConfig(token));\n\nexport const get_groups = (token) =>\n    axios.get(`${api_host}/groups`, tokenConfig(token));\n\nexport const get_user_contacts = (token) =>\n    axios.get(`${api_host}/contacts`, tokenConfig(token));\n\nexport const get_filtered_user_contacts = (token, login) =>\n    axios.get(`${api_host}/contacts/${login}`, tokenConfig(token));\n\nexport const get_user_invitations = (token) =>\n    axios.get(`${api_host}/invitations`, tokenConfig(token));","// export const API_PATH = 'http://localhost:5000';\nexport const API_PATH = '';\n\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE';\n\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\nexport const RECEIVE_USER_CHATS = 'RECEIVE_USER_CHATS';\nexport const FETCH_USER_CHATS_REQUEST = 'FETCH_USER_CHATS_REQUEST';\n\nexport const RECEIVE_USER_GROUPS = 'RECEIVE_USER_GROUPS';\nexport const FETCH_USER_GROUPS_REQUEST = 'FETCH_USER_GROUPS_REQUEST';\n\nexport const ADD_GROUP_REQUEST = 'ADD_GROUP_REQUEST';\nexport const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS';\nexport const ADD_GROUP_FAILURE = 'ADD_GROUP_FAILURE';\n\nexport const UPDATE_GROUP_TITLE_REQUEST = 'UPDATE_GROUP_TITLE_REQUEST';\nexport const UPDATE_GROUP_TITLE_SUCCESS = 'UPDATE_GROUP_TITLE_SUCCESS';\nexport const UPDATE_GROUP_TITLE_FAILURE = 'UPDATE_GROUP_TITLE_FAILURE';\n\nexport const UPDATE_GROUP_MEMBERS_REQUEST = 'UPDATE_GROUP_MEMBERS_REQUEST';\nexport const UPDATE_GROUP_MEMBERS_SUCCESS = 'UPDATE_GROUP_MEMBERS_SUCCESS';\nexport const UPDATE_GROUP_MEMBERS_FAILURE = 'UPDATE_GROUP_MEMBERS_FAILURE';\n\nexport const DELETE_GROUP_REQUEST = 'DELETE_GROUP_REQUEST';\nexport const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS';\nexport const DELETE_GROUP_FAILURE = 'DELETE_GROUP_FAILURE';\n\nexport const ADD_CHAT_REQUEST = 'ADD_CHAT_REQUEST';\nexport const ADD_CHAT_SUCCESS = 'ADD_CHAT_SUCCESS';\nexport const ADD_CHAT_FAILURE = 'ADD_CHAT_FAILURE';\nexport const ADD_CHAT_CLOSE = 'ADD_CHAT_CLOSE';\n\nexport const READ_CHAT_REQUEST = 'READ_CHAT_REQUEST';\nexport const READ_CHAT = 'READ_CHAT';\n\nexport const DELETE_CHAT_REQUEST = 'DELETE_CHAT_REQUEST';\nexport const DELETE_CHAT_SUCCESS = 'DELETE_CHAT_SUCCESS';\nexport const DELETE_CHAT_FAILURE = 'DELETE_CHAT_FAILURE';\n\nexport const RECEIVE_PROTECTED_DATA = 'RECEIVE_PROTECTED_DATA';\nexport const FETCH_PROTECTED_DATA_REQUEST = 'FETCH_PROTECTED_DATA_REQUEST';\n\nexport const UPDATE_USER_DATA_REQUEST = 'UPDATE_USER_DATA_REQUEST';\nexport const UPDATE_USER_DATA = 'UPDATE_USER_DATA';\nexport const UPDATE_USER_DATA_FAILURE = 'UPDATE_USER_DATA_FAILURE';\nexport const UPDATE_USER_DATA_CLOSE = 'UPDATE_USER_DATA_CLOSE';\n\nexport const UPDATE_USER_PHOTO_REQUEST = 'UPDATE_USER_PHOTO_REQUEST';\nexport const UPDATE_USER_PHOTO = 'UPDATE_USER_PHOTO';\nexport const UPDATE_USER_PHOTO_FAILURE = 'UPDATE_USER_PHOTO_FAILURE';\n\nexport const UPDATE_GROUP_PHOTO_REQUEST = 'UPDATE_GROUP_PHOTO_REQUEST';\nexport const UPDATE_GROUP_PHOTO = 'UPDATE_GROUP_PHOTO';\nexport const UPDATE_GROUP_PHOTO_FAILURE = 'UPDATE_GROUP_PHOTO_FAILURE';\n\nexport const RECEIVE_USERS_DATA = 'RECEIVE_USERS_DATA';\nexport const FETCH_USERS_DATA_REQUEST = 'FETCH_USERS_DATA_REQUEST';\nexport const CLEAN_USERS_DATA = 'CLEAN_USERS_DATA';\n\nexport const RECEIVE_UNAUTHORIZED_USER_DATA = 'RECEIVE_UNAUTHORIZED_USER_DATA';\nexport const FETCH_UNAUTHORIZED_USER_DATA_REQUEST=  'FETCH_UNAUTHORIZED_USER_DATA';\nexport const FETCH_UNAUTHORIZED_USER_DATA_FAILURE = 'FETCH_UNAUTHORIZED_USER_DATA_FAILURE';\nexport const CLEAN_UNAUTHORIZED_USER_DATA = 'CLEAN_UNAUTHORIZED_USER_DATA';\n\nexport const RECEIVE_CONTACT_LIST = 'RECEIVE_CONTACT_LIST';\nexport const FETCH_CONTACT_LIST_REQUEST = 'FETCH_CONTACT_LIST_REQUEST';\n\nexport const RECEIVE_FILTERED_CONTACT_LIST = 'RECEIVE_FILTERED_CONTACT_LIST';\nexport const FETCH_FILTERED_CONTACT_LIST_REQUEST = 'FETCH_FILTERED_CONTACT_LIST_REQUEST';\nexport const CLEAN_CONTACT_LIST = 'CLEAN_CONTACT_LIST';\n\nexport const RECEIVE_INVITATION_LIST = 'RECEIVE_INVITATION_LIST';\nexport const FETCH_INVITATION_LIST_REQUEST = 'FETCH_INVITATION_LIST_REQUEST';","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n    /* pass a configuration object here if needed */\n})","import history from '../history';\nimport { parseJSON } from '../utils/misc';\nimport { get_token, create_user } from '../utils/http_functions';\nimport {\n    LOGIN_USER_REQUEST,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILURE,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILURE,\n    LOGOUT_USER\n} from '../utils/constants';\n\n\nexport function loginUserSuccess(token, login) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userLogin', login);\n    return {\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n            token,\n            login\n        },\n    };\n}\n\n\nexport function loginUserFailure(error) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userLogin');\n    return {\n        type: LOGIN_USER_FAILURE,\n        payload: {\n            status: error.response.status,\n            statusText: error.response.statusText,\n        },\n    };\n}\n\nexport function loginUserRequest() {\n    return {\n        type: LOGIN_USER_REQUEST,\n    };\n}\n\nexport function logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userLogin');\n    return {\n        type: LOGOUT_USER,\n    };\n}\n\nexport function logoutAndRedirect() {\n    return (dispatch) => {\n        dispatch(logout());\n        history.push('/login');\n    };\n}\n\nexport function redirectToRoute(route) {\n    return () => {\n        history.push(route);\n    };\n}\n\nexport function loginUser(login, password) {\n    return function (dispatch) {\n        dispatch(loginUserRequest());\n        return get_token(login, password)\n            .then(parseJSON)\n            .then(response => {\n                try {\n                    dispatch(loginUserSuccess(response.token, login));\n                    history.push('/');\n                } catch (e) {\n                    alert(e);\n                    dispatch(loginUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'Invalid token',\n                        },\n                    }));\n                }\n            })\n            .catch(error => {\n                dispatch(loginUserFailure({\n                    response: {\n                        status: 403,\n                        statusText: 'Invalid login or password',\n                    },\n                }));\n            });\n    };\n}\n\n\nexport function registerUserRequest() {\n    return {\n        type: REGISTER_USER_REQUEST,\n    };\n}\n\nexport function registerUserSuccess(token, login) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userLogin', login);\n    return {\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n            token,\n            login\n        },\n    };\n}\n\nexport function registerUserFailure(error) {\n    localStorage.removeItem('token');\n    return {\n        type: REGISTER_USER_FAILURE,\n        payload: {\n            status: error.response.status,\n            statusText: error.response.statusText,\n        },\n    };\n}\n\nexport function registerUser(name, surname, login, password) {\n    return function (dispatch) {\n        dispatch(registerUserRequest());\n        return create_user(name, surname, login, password)\n            .then(parseJSON)\n            .then(response => {\n                try {\n                    dispatch(registerUserSuccess(response.token, login));\n                    history.push('/');\n                } catch (e) {\n                    dispatch(registerUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'Invalid token',\n                        },\n                    }));\n                }\n            })\n            .catch(error => {\n                dispatch(registerUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'User with that login already exists',\n                        },\n                    }\n                ));\n            });\n    };\n}","const styles = theme => ({\n    drawer: {\n        width: 480,\n        flexShrink: 0,\n        [theme.breakpoints.down(1200)]: {\n            width: 280,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    drawerPaper: {\n        width: 480,\n        [theme.breakpoints.down(1200)]: {\n            width: 280,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    sidebarTop: {\n        flexGrow: 1,\n        overflowY: \"auto\",\n        paddingTop: 0\n    },\n    sidebarDown: {\n        padding: 0.\n    },\n    toolbar: theme.mixins.toolbar,\n    minifiedToolbar: {\n        height: theme.spacing(6),\n    },\n    button: {\n        float: 'right',\n    },\n    divider: {\n        clear: 'both',\n    },\n    addChatBtn: {\n      height: '50px'\n    },\n    badge:{\n        marginRight: '10px',\n    }\n});\n\nexport default styles;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport withWidth from '@material-ui/core/withWidth';\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\nimport {fetchUserChats, fetchUserGroups} from \"../actions/chats\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    time: {\n        fontSize: '12px',\n        fontFamily: \"'Roboto', sans-serif\",\n        position: 'absolute',\n        right: '16px',\n        top: '14px',\n        color: theme.palette.text.secondary\n    },\n    avatarGroup: {\n        marginLeft: '-35px',\n        '&:first-child': {\n            marginLeft: '-5px'\n        }\n    },\n    avatarGroup3: {\n        marginLeft: '-35px',\n        '&:first-child': {\n            marginLeft: '-8px'\n        }\n    },\n    textGroup: {\n        marginLeft: '8px',\n    },\n    textGroup3: {\n        marginLeft: '6px',\n    },\n    notification: {\n        position: 'absolute',\n        right: '19px',\n        top: '30px',\n    },\n    groupWithPhoto: {\n        marginLeft: -3\n    },\n    listItemAvatar: {\n        minWidth: 0\n    }\n});\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.data.isFetching,\n        token: state.auth.token,\n        data: state.data.data,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getChats: (token) => dispatch(fetchUserChats(token)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n});\n\nclass ContactItem extends React.Component{\n\n    checkTime = (i) => i < 10 ? (\"0\" + i) : i;\n\n    getTime(date) {\n        let h = date.getHours();\n        let m = date.getMinutes();\n\n        m = this.checkTime(m);\n        return h + ':' + m;\n    }\n\n    getWeekNumber(d) {\n        d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n        d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n\n        let yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n        let weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n\n        return [d.getUTCFullYear(), weekNo];\n    }\n\n    getTimeFormat(date) {\n\n        const now = new Date();\n        const isToday = new Date(date.getTime()).setHours(0, 0, 0, 0) === new Date(now.getTime()).setHours(0, 0, 0, 0);\n        const isThisWeek = this.getWeekNumber(date)[0] === this.getWeekNumber(now)[0] &&\n            this.getWeekNumber(date)[1] === this.getWeekNumber(now)[1];\n        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n        if(isToday) return this.getTime(date);\n        else if(isThisWeek) return days[date.getDay()];\n        else {\n            if(date.getUTCFullYear() === now.getUTCFullYear())\n                return months[date.getMonth()] + ' ' + date.getDate();\n            else return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getUTCFullYear();\n        }\n\n    }\n\n    userIsSender = () => {\n        try{\n            if(this.props.data){\n                return this.props.data.login === this.props.lastMessage.sender.login;\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return false;\n    };\n\n    render(){\n        const users = this.props.users;\n        const { classes } = this.props;\n        const messageSymbols = this.props.width === 'lg' ? 50 : 25;\n\n        if(this.props.data && users)\n            return (\n                <ListItem className={classes.listItem} button selected={this.props.selected} onClick={this.props.onClick}>\n                    {\n                        this.props.type === 'chat' ? <ListItemAvatar className={classes.listItemAvatar}>\n                            <div className={classes.avatarContainer}>\n                                {\n                                    users[0].profile_image ? <Avatar\n                                            src={API_PATH + users[0].profile_image}\n                                        /> :\n                                        <Avatar className={classes.avatar}>\n                                            {users[0].name.charAt(0).toUpperCase() + '' + (users[0].surname ? users[0].surname.charAt(0).toUpperCase() : '')}\n                                        </Avatar>\n                                }\n                            </div>\n                        </ListItemAvatar> : <AvatarGroup max={2}>\n                            {\n                                this.props.groupPhoto ? <Avatar\n                                        src={API_PATH + this.props.groupPhoto}\n                                        className={classes.groupWithPhoto}\n                                    /> :\n                                users.slice(0, 3).map((_usr, _idx) => <Avatar\n                                    key={_idx}\n                                    src={_usr.profile_image ? (API_PATH + _usr.profile_image) : null}\n                                    className={users.length < 3 ? classes.avatarGroup : classes.avatarGroup3}\n                                >\n                                    {!_usr.profile_image ?\n                                        _usr.name.charAt(0).toUpperCase() + '' +\n                                        (_usr.surname ? _usr.surname.charAt(0).toUpperCase() : '') : null\n                                    }\n                                </Avatar>)\n                            }\n                        </AvatarGroup>\n\n                    }\n                    <ListItemText\n                        primary={this.props.type === 'chat' ?\n                            <b>{users[0].name + ' ' + (users[0].surname ? users[0].surname : '')}</b> :\n                            <b>{this.props.chatTitle}</b>}\n                        secondary={\n                            <React.Fragment>\n                                {\n                                    this.props.lastMessage.message.substr(0, messageSymbols) + ( this.props.lastMessage.message.length > messageSymbols ? '...' : '')\n                                }\n                            </React.Fragment>\n                        }\n                        className={users.length < 3 && users.length > 1 ? classes.textGroup : classes.textGroup3}\n                    />\n\n                    <span className={classes.time}>\n                        {\n                            this.props.lastMessage.timestamp ?\n                                this.getTimeFormat(new Date(parseInt(this.props.lastMessage.timestamp)))\n                                : null\n                        }\n                    </span>\n                    {\n                        this.props.type === 'chat' && !this.props.receiverHasRead && !this.userIsSender() && this.props.lastMessage.message.length > 0 ?\n                            <NotificationImportantIcon color=\"primary\" className={classes.notification}/> : null\n                    }\n                    {\n                        this.props.type === 'group' && !this.userIsSender() &&\n                        this.props.receivers.find(_usr => _usr.login === this.props.data.login) ?\n                            <NotificationImportantIcon\n                                color=\"primary\"\n                                className={classes.notification}\n                            /> : null\n                    }\n                </ListItem>\n            );\n        else return null;\n    }\n\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(withStyles(styles)(ContactItem)));","import { parseJSON } from '../utils/misc';\nimport {\n    data_about_user,\n    update_user_data,\n    update_user_photo,\n    get_users_data,\n    get_unauthorized_user_data,\n    check_user_status,\n} from '../utils/http_functions';\nimport { logoutAndRedirect } from './auth';\nimport {\n    RECEIVE_PROTECTED_DATA,\n    FETCH_PROTECTED_DATA_REQUEST,\n    UPDATE_USER_DATA,\n    UPDATE_USER_DATA_REQUEST,\n    UPDATE_USER_DATA_FAILURE,\n    UPDATE_USER_DATA_CLOSE,\n    UPDATE_USER_PHOTO_REQUEST,\n    UPDATE_USER_PHOTO,\n    UPDATE_USER_PHOTO_FAILURE,\n    FETCH_USERS_DATA_REQUEST,\n    RECEIVE_USERS_DATA,\n    CLEAN_USERS_DATA,\n    RECEIVE_UNAUTHORIZED_USER_DATA,\n    FETCH_UNAUTHORIZED_USER_DATA_REQUEST,\n    FETCH_UNAUTHORIZED_USER_DATA_FAILURE,\n    CLEAN_UNAUTHORIZED_USER_DATA,\n} from '../utils/constants';\n\nexport function receiveProtectedData(data) {\n\n    return {\n        type: RECEIVE_PROTECTED_DATA,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchProtectedDataRequest() {\n    return {\n        type: FETCH_PROTECTED_DATA_REQUEST,\n    };\n}\n\nexport function fetchProtectedData(token, initFunction) {\n    return (dispatch) => {\n        dispatch(fetchProtectedDataRequest());\n        data_about_user(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveProtectedData(response));\n                if(initFunction) initFunction(response);\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            });\n    };\n}\n\n\nexport function receiveUpdatedData(data) {\n    const user_data = data.data;\n    const status = {\n        message: data.message,\n        status: 'OK'\n    };\n    return {\n        type: UPDATE_USER_DATA,\n        payload: {\n            data: user_data,\n            status\n        },\n    };\n}\n\nexport function updateDataFailure(data) {\n    const status = {\n        message: data.message,\n        status: 'ER'\n    };\n    return {\n        type: UPDATE_USER_DATA_FAILURE,\n        payload: {\n            status\n        },\n    };\n}\n\nexport function updateUserDataRequest() {\n    return {\n        type: UPDATE_USER_DATA_REQUEST,\n    };\n}\n\nexport function updateUserDataClose() {\n    return {\n        type: UPDATE_USER_DATA_CLOSE,\n        payload: {\n            status: null\n        }\n    };\n}\n\nexport function updateUserData(token, user) {\n    return (dispatch) => {\n        dispatch(updateUserDataRequest());\n        update_user_data(token, user)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUpdatedData(response));\n                dispatch(fetchProtectedData(token));\n            })\n            .catch(error => {\n                if (error.response.status === 403) {\n                    dispatch(logoutAndRedirect(error));\n                }\n                else{\n                    dispatch(updateDataFailure(error.response.data));\n                }\n            });\n    };\n}\n\n\nexport function receiveUpdatedPhoto(data) {\n    const user_data = data.data;\n    const status = {\n        message: data.message,\n        status: 'OK'\n    };\n    return {\n        type: UPDATE_USER_PHOTO,\n        payload: {\n            data: user_data,\n            status\n        },\n    };\n}\n\nexport function updateUserPhotoFailure(data) {\n    const status = {\n        message: data.message,\n        status: 'ER'\n    };\n    return {\n        type: UPDATE_USER_PHOTO_FAILURE,\n        payload: {\n            status\n        },\n    };\n}\n\nexport function updateUserPhotoRequest() {\n    return {\n        type: UPDATE_USER_PHOTO_REQUEST,\n    };\n}\n\nexport function updateUserPhoto(token, data) {\n    return (dispatch) => {\n        dispatch(updateUserPhotoRequest());\n        update_user_photo(token, data)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUpdatedPhoto(response));\n            })\n            .catch(error => {\n                if (error.response.status === 403) {\n                    dispatch(logoutAndRedirect(error));\n                }\n                else{\n                    dispatch(updateUserPhotoFailure(error.response.data));\n                }\n            });\n    };\n}\n\nexport function fetchUsersDataRequest() {\n    return {\n        type: FETCH_USERS_DATA_REQUEST,\n    };\n}\n\nexport function receiveUsersData(data) {\n    return {\n        type: RECEIVE_USERS_DATA,\n        payload: {\n            users: data,\n        },\n    };\n}\n\nexport function cleanUsersData() {\n    return {\n        type: CLEAN_USERS_DATA,\n    };\n}\n\nexport function fetchUsersData(token, login) {\n    return (dispatch) => {\n        dispatch(fetchUsersDataRequest());\n        get_users_data(token, login)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUsersData(response));\n            })\n            .catch(error => {\n                dispatch(logoutAndRedirect(error));\n            });\n    };\n}\n\nexport function fetchUnauthorizedUserDataRequest() {\n    return {\n        type: FETCH_UNAUTHORIZED_USER_DATA_REQUEST,\n    };\n}\n\nexport function fetchUnauthorizedUserDataFailure(data) {\n    const status = {\n        message: data.message,\n        status: 'ER'\n    };\n\n    return {\n        type: FETCH_UNAUTHORIZED_USER_DATA_FAILURE,\n        payload: {\n            status\n        }\n    };\n}\n\nexport function receiveUnauthorizedUsersData(data) {\n    return {\n        type: RECEIVE_UNAUTHORIZED_USER_DATA,\n        payload: {\n            unauthorizedUser: data\n        }\n    };\n}\n\nexport function cleanUnauthorizedUserData() {\n    return {\n        type: CLEAN_UNAUTHORIZED_USER_DATA,\n    };\n}\n\nexport function fetchUnauthorizedUserData(login) {\n    return (dispatch) => {\n        dispatch(fetchUnauthorizedUserDataRequest());\n        get_unauthorized_user_data(login)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUnauthorizedUsersData(response));\n            })\n            .catch(error => {\n                dispatch(fetchUnauthorizedUserDataFailure(error.response.data));\n            });\n    };\n}\n\nexport async function checkUserStatus(user, setStatus) {\n\n    const token = localStorage.getItem('token');\n\n    check_user_status(token, user)\n        .then(parseJSON)\n        .then(response => {\n            setStatus(response.online);\n        })\n}","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {checkUserStatus} from \"../actions/data\";\nimport {socket} from '../pages/dashboard/Dashboard';\nimport {\n    fetchUserChats,\n    fetchUserGroups,\n} from \"../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    pointedListItem: {\n        position: 'relative',\n        cursor: 'pointer',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    time: {\n        fontSize: '12px',\n        fontFamily: \"'Roboto', sans-serif\",\n        position: 'absolute',\n        right: '16px',\n        top: '14px',\n        color: theme.palette.text.secondary\n    },\n    avatar: {\n        // border: '2px solid',\n        borderColor: theme.palette.text.disabled,\n    },\n    owner: {\n        '& span': {\n            position: 'relative',\n            transform: 'none',\n        },\n    },\n    avatarContainer: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    }\n});\n\nlet checked = false;\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: -1,\n            left: -1,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nconst mapStateToProps = (state) => ({\n    token: state.auth.token,\n    currentUser: state.auth.login\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getChats: (token) => dispatch(fetchUserChats(token)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n});\n\nclass AccountPreview extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            online: false,\n        };\n\n    }\n\n    componentDidMount(){\n        if(this.props.user) {\n            checkUserStatus(this.props.user.login, this.setStatus);\n        }\n        socket.on('user_status_changed', (data) => {\n            if(this.props.user && data.user === this.props.user.login) {\n                checkUserStatus(this.props.user.login, this.setStatus);\n                this.props.getChats(this.props.token);\n                this.props.getGroups(this.props.token);\n            }\n        });\n    }\n\n    componentWillUnmount(){\n        socket.removeAllListeners('user_status_changed');\n    }\n\n    setStatus = (status) => {\n        this.setState({online: status});\n    };\n\n    checkTime = (i) => i < 10 ? (\"0\" + i) : i;\n\n    getTime(date) {\n        let h = date.getHours();\n        let m = date.getMinutes();\n\n        m = this.checkTime(m);\n        return h + ':' + m;\n    }\n\n    getTimeFormat = (timestamp) => {\n\n        const date = new Date(parseInt(timestamp));\n        const now = new Date();\n\n        const isToday = new Date(date.getTime()).setHours(0, 0, 0, 0) === new Date(now.getTime()).setHours(0, 0, 0, 0);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n        if(isToday) return this.getTime(date);\n        else {\n            if(date.getUTCFullYear() === now.getUTCFullYear())\n                return months[date.getMonth()] + ' ' + date.getDate() + ', ' + this.getTime(date);\n            else return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getUTCFullYear();\n        }\n    };\n\n    render(){\n\n        const { classes } = this.props;\n\n        const user = this.props.user;\n\n        if(user) {\n\n            if(!checked && this.props.currentUser === user.login) {\n                checkUserStatus(user.login, this.setStatus);\n                checked = true;\n            }\n\n            return (\n                <ListItem\n                    className={this.props.handleClick ? classes.pointedListItem : classes.listItem}\n                    onClick={this.props.handleClick ? () => this.props.handleClick(user.login) : null}\n                    button={!!this.props.handleClick}\n                    selected={this.props.selected}\n                >\n                    <ListItemAvatar>\n                        {\n                            this.state.online ? <div className={classes.avatarContainer}>\n                                <StyledBadge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    variant=\"dot\"\n                                >\n                                    {\n                                        user.profile_image ? <Avatar\n                                                src={API_PATH + user.profile_image}\n                                                className={classes.avatar}\n                                            /> :\n                                            <Avatar className={classes.avatar}>\n                                                {user.name.charAt(0).toUpperCase() + '' + (user.surname ? user.surname.charAt(0).toUpperCase() : '')}\n                                            </Avatar>\n                                    }\n                                </StyledBadge>\n                            </div> : <div className={classes.avatarContainer}>\n                                {\n                                    user.profile_image ? <Avatar\n                                            src={API_PATH + user.profile_image}\n                                            className={classes.avatar}\n                                        /> :\n                                        <Avatar className={classes.avatar}>\n                                            {user.name.charAt(0).toUpperCase() + '' + (user.surname ? user.surname.charAt(0).toUpperCase() : '')}\n                                        </Avatar>\n                                }\n                            </div>\n                        }\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={<b>{user.name + ' ' + (user.surname ? user.surname : '')}</b>}\n                        secondary={\n                            <React.Fragment>\n                                {this.state.online ? user.login : (\"Last seen: \" + this.getTimeFormat(user.last_seen))}\n                            </React.Fragment>\n                        }\n                    />\n                    {\n                        this.props.groupOwner && this.props.groupOwner === user.login ? <Badge\n                            color=\"primary\"\n                            badgeContent=\"Owner\"\n                            className={classes.owner}\n                        /> : null\n                    }\n                </ListItem>\n            );\n        }\n        else return null;\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AccountPreview));","import React from 'react';\nimport styles from './styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ContactItem from \"../ContactItem\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from '@material-ui/core/Button';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport AccountPreview from \"../AccountPreview\";\nimport Badge from '@material-ui/core/Badge';\nimport withWidth from \"@material-ui/core/withWidth/withWidth\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.chats.isFetching,\n        loaded: state.chats.loaded,\n        chats: state.chats.chats,\n        userLogin: state.auth.login,\n        invitations: state.contacts.invitations,\n        sidebarOpen: state.chats.sidebarOpen,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass Sidebar extends React.Component{\n\n    render(){\n        const { classes } = this.props;\n\n        return (\n            <Drawer\n                anchor=\"left\"\n                open={this.props.sidebarOpen}\n                onClose={() => this.props.handleToggleSidebar(false)}\n                className={'sidebar ' + classes.drawer}\n                variant={this.props.width === 'xs' ? 'temporary' : 'permanent'}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                {/*{*/}\n                    {/*this.props.width !== 'xs' ? <div className={this.props.width === 'lg' ? classes.toolbar : classes.minifiedToolbar} /> : null*/}\n                {/*}*/}\n                <div className={this.props.width === 'lg' ? classes.toolbar : classes.minifiedToolbar} >\n                    <IconButton onClick={() => this.props.handleToggleSidebar(false)} className={classes.button}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                    <Divider className={classes.divider}/>\n                </div>\n                <Button\n                    fullWidth\n                    color='primary'\n                    className={classes.addChatBtn}\n                    onClick={this.props.newChatBtnHandle}\n                >Add New Chat</Button>\n\n                <List className={classes.sidebarTop}>\n                    {\n                        this.props.chatList ?\n                            this.props.chatList.sort((chatA, chatB) =>\n                                parseFloat(chatB.lastUpdate) - parseFloat(chatA.lastUpdate))\n                                .map((chat, index) => (\n                                    <ContactItem\n                                        key={index}\n                                        type={chat.type}\n                                        chatTitle={chat.title}\n                                        lastMessage={chat.messages.length > 0 ? chat.messages[chat.messages.length - 1] : {message: ''}}\n                                        users={chat.users.filter(_user => _user.login !== this.props.userLogin)}\n                                        selected={this.props.selectedChatIndex === chat.chat_id}\n                                        onClick={() => {\n                                            this.props.handleToggleSidebar(false);\n                                            this.props.selectChatHandle(chat.chat_id, this.props.chatList)\n                                        }}\n                                        receiverHasRead={chat.receiverHasRead}\n                                        receivers={chat.receivers}\n                                        groupPhoto={chat.type === 'group' ? chat.photo : null}\n                                    />\n                            )) : null\n                    }\n                </List>\n\n                <div className='sidebar-down'>\n                    <Divider />\n                    <AccountPreview\n                        user={this.props.user}\n                        currentUser={this.props.userLogin}\n                    />\n                    <List className={classes.sidebarDown}>\n                        <ListItem button onClick={this.props.accountHandleClick}>\n                            <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n                            <ListItemText primary=\"My Account\" />\n                        </ListItem>\n                        <ListItem button onClick={this.props.contactsHandleClick}>\n                            <ListItemIcon><ContactsIcon /></ListItemIcon>\n                            <ListItemText primary=\"Contacts\" />\n                            {\n                                this.props.invitations && this.props.invitations.received.length > 0 ? <Badge\n                                    badgeContent={this.props.invitations.received.length}\n                                    color=\"primary\"\n                                    className={classes.badge}\n                                /> : null\n                            }\n                        </ListItem>\n                        <ListItem button onClick={this.props.logOutHandleClick}>\n                            <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n                            <ListItemText primary=\"Log Out\" />\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        );\n\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(withStyles(styles)(Sidebar)));","const styles = theme => ({\n\n    content: {\n        height: 'calc(100vh - 144px)',\n        padding: '25px',\n        boxSizing: 'border-box',\n        overflowY: 'scroll',\n        width: '100%',\n    },\n\n    userSent: {\n        float: 'right',\n        clear: 'both',\n        padding: '10px 20px 18px',\n        boxSizing: 'border-box',\n        wordWrap: 'break-word',\n        marginTop: '10px',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        width: 'auto',\n        maxWidth: '500px',\n        borderRadius: '10px',\n        borderBottomRightRadius: 0,\n        fontFamily: 'Roboto',\n        position: 'relative'\n    },\n\n    friendSent: {\n        float: 'left',\n        clear: 'both',\n        padding: '10px 20px 18px',\n        boxSizing: 'border-box',\n        wordWrap: 'break-word',\n        marginTop: '10px',\n        backgroundColor: 'white',\n        color: theme.palette.text.primary,\n        width: 'auto',\n        maxWidth: '500px',\n        borderRadius: '10px',\n        borderTopLeftRadius: 0,\n        fontFamily: 'Roboto',\n        position: 'relative'\n    },\n    time: {\n        position: 'absolute',\n        bottom: '5px',\n        right: '5px',\n        fontSize: '10px'\n    },\n    messageContainer: {\n        clear: 'both',\n        paddingTop: '35px'\n    },\n    divider: {\n        width: '60%',\n        position: 'relative',\n        background: 'linear-gradient(90deg, rgba(220,220,220,1) 0%, rgba(173,173,173,1) 50%, rgba(220,220,220,1) 100%)',\n        margin: '0 auto 35px',\n        height: '1px',\n    },\n    dividerDate: {\n        margin: 0,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#dcdcdc',\n        padding: '0 20px',\n        fontFamily: \"'Roboto', sans-serif\",\n        fontSize: '12px',\n        color: '#7d7d7d',\n    },\n    avatar: {\n        marginRight: '10px'\n    },\n    noAvatar: {\n        marginLeft: '50px',\n    },\n    messageGroupUser: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n    },\n    messageGroupFriend: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    btnContainer:{\n        paddingLeft: 30,\n        position: 'relative',\n        '&:hover button': {\n            display: 'block',\n        }\n    },\n    moreBtn: {\n        padding: 0,\n        position: 'absolute',\n        left: 0,\n        top: '50%',\n        transform: 'translateY(-36%)',\n        display: 'none',\n        '&:hover': {\n            backgroundColor: 'transparent !important',\n        }\n    },\n    menu: {\n        '& ul': {\n            padding: 0,\n        },\n    },\n    loader: {\n        width: '16px !important',\n        height: '16px !important',\n        position: 'absolute',\n        left: 0,\n        top: 'calc(50% - 2px)'\n    },\n});\n\nexport default styles;","import React from 'react';\nimport styles from './styles';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {API_PATH} from \"../../utils/constants\";\n\nfunction mapStateToProps(state) {\n    return {\n        userLogin: state.auth.login\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nconst checkTime = (i) => i < 10 ? (\"0\" + i) : i;\n\nfunction getTimeFormat(date) {\n\n    const now = new Date();\n    const isToday = new Date(date.getTime()).setHours(0, 0, 0, 0) === new Date(now.getTime()).setHours(0, 0, 0, 0);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    if(isToday) return 'Today';\n    else {\n        if(date.getUTCFullYear() === now.getUTCFullYear())\n            return months[date.getMonth()] + ' ' + date.getDate();\n        else return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getUTCFullYear();\n    }\n\n}\n\nclass ChatView extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorMenu: null,\n            removeTarget: null,\n        };\n\n    }\n\n    componentDidMount(){\n        const container = document.getElementById('chatview-container');\n        if(container) container.scrollTo(0, container.scrollHeight);\n        this.handleCloseMessageMenu();\n    }\n\n    componentDidUpdate(){\n        const container = document.getElementById('chatview-container');\n        if(container) container.scrollTo(0, container.scrollHeight);\n    }\n\n    getTime(date) {\n        let h = date.getHours();\n        let m = date.getMinutes();\n\n        m = checkTime(m);\n        return h + ':' + m;\n    }\n\n    setDivider(msg, index){\n        if(index !== 0){\n            const currentMessageDate = new Date(parseInt(msg.timestamp)).setHours(0, 0, 0, 0);\n            const prevMessageDate = new Date(parseInt(this.props.chat.messages[index-1].timestamp)).setHours(0, 0, 0, 0);\n\n            let result = null;\n\n            if(currentMessageDate !== prevMessageDate)\n                result = getTimeFormat(new Date(parseInt(msg.timestamp)));\n            return result;\n        }\n        else{\n            const currentMessageDate = new Date(parseInt(msg.timestamp));\n            return getTimeFormat(currentMessageDate);\n        }\n    }\n\n    setAvatar(msg, index){\n        if(index + 1 < this.props.chat.messages.length){\n            const currentSender = msg.sender.login;\n            const nextSender = this.props.chat.messages[index+1].sender.login;\n            return currentSender !== nextSender;\n        }\n        else return true;\n    }\n\n    handleOpenMessageMenu = (e, message) => {\n        this.setState({\n            anchorMenu: e.currentTarget,\n            removeTarget: message.id\n        });\n    };\n    handleCloseMessageMenu = () => {\n        this.setState({\n            anchorMenu: null,\n            removeTarget: null,\n        });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        let messages = [...this.props.messages];\n\n        return (\n            <div id='chatview-container' className={classes.content}>\n                <main>\n                    {\n                        messages.filter(_msg => _msg !== null).map((_msg, _index) => <div className={this.setDivider(_msg, _index) ? classes.messageContainer: null} key={_index}>\n                            {this.setDivider(_msg, _index) ? <div className={classes.divider}>\n                                <Typography component='p' variant='body1' className={classes.dividerDate}>\n                                    {this.setDivider(_msg, _index)}\n                                    </Typography>\n                            </div> : null}\n                            <div className={_msg.sender.login === this.props.userLogin ? classes.messageGroupUser : classes.messageGroupFriend}>\n                                {\n                                    this.setAvatar(_msg, _index) && _msg.sender.login !== this.props.userLogin ? <div className={classes.avatar}>\n                                        {\n                                            _msg.sender.profile_image ? <Avatar\n                                                    src={API_PATH + _msg.sender.profile_image}\n                                                /> :\n                                                <Avatar>\n                                                    {_msg.sender.name.charAt(0).toUpperCase() + '' + (_msg.sender.surname ? _msg.sender.surname.charAt(0).toUpperCase() : '')}\n                                                </Avatar>\n                                        }\n                                    </div> : <span className={classes.noAvatar}/>\n                                }\n                                <div className={_msg.sender.login === this.props.userLogin ? classes.btnContainer : null}>\n                                    {\n                                        _msg.sender.login === this.props.userLogin && !_msg.loading ? <IconButton\n                                            className={classes.moreBtn}\n                                            onClick={(e) => this.handleOpenMessageMenu(e, _msg)}\n                                        >\n                                            <MoreVertIcon/>\n                                        </IconButton> : null\n                                    }\n                                    {\n                                        _msg.loading ? <CircularProgress className={classes.loader}/> : null\n                                    }\n                                    <div\n                                        key={_index}\n                                        className={_msg.sender.login === this.props.userLogin ? classes.userSent : classes.friendSent}\n                                    >\n                                        {_msg.message}\n                                        <span className={classes.time}>{this.getTime(new Date(parseInt(_msg.timestamp)))}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>)\n                    }\n                    <Menu\n                        open={Boolean(this.state.anchorMenu)}\n                        anchorEl={this.state.anchorMenu}\n                        onClose={this.handleCloseMessageMenu}\n                        className={classes.menu}\n                    >\n                        <MenuItem\n                            onClick={() => {\n                                this.props.handleRemoveMessage(this.state.removeTarget);\n                                this.handleCloseMessageMenu();\n                            }}>Remove</MenuItem>\n                    </Menu>\n                </main>\n            </div>\n        );\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChatView));","const drawerWidth = 350;\n\nconst styles = theme => ({\n    dashboard: {\n        height: '100%',\n        display: 'flex',\n    },\n    content: {\n        marginTop: 64,\n        [theme.breakpoints.down('md')]: {\n            marginTop: 48,\n            marginRight: 0,\n        },\n        flexGrow: 1,\n        maxHeight: '100%',\n        marginRight: -drawerWidth,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    contentShift: {\n        marginTop: 64,\n        [theme.breakpoints.down('md')]: {\n            marginTop: 48,\n        },\n        flexGrow: 1,\n        maxHeight: '100%',\n        marginRight: 0,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    bigIcon: {\n        fontSize: '10em',\n        fill: '#9a9a9a'\n    },\n    defaultComponent: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        flexGrow: 2,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    text: {\n        color: '#737373',\n    },\n    chatViewContainer: {\n        height: '100%',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nexport default styles;","const styles = theme => ({\n    messageBox: {\n        flexGrow: 1,\n        backgroundColor: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: '80px',\n        padding: '0 30px',\n        width: 'calc(100% - 60px)',\n        zIndex: 999,\n    },\n    textField: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        },\n        width: '95%',\n    },\n    button: {\n        color: '#0874ff',\n        cursor: 'pointer',\n        marginLeft: '15px'\n    },\n});\n\nexport default styles;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from './styles';\n\nclass MessageBox extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: ''\n        };\n\n        this.submitMessage = this.submitMessage.bind(this);\n\n    }\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <div className={'message-box ' + classes.messageBox}>\n                <TextField\n                    style={{ margin: 8 }}\n                    placeholder=\"Enter your message...\"\n                    margin=\"normal\"\n                    className={classes.textField}\n                    onKeyUp={(e) => this.userTyping(e)}\n                    onChange={(e) => this.setState({message: e.target.value})}\n                    autoComplete=\"off\"\n                    id='message-box'\n                    helperText='Press Enter to send the message'\n                    value={this.state.message}\n                />\n                <Send onClick={this.submitMessage} className={classes.button}/>\n            </div>\n        );\n    }\n\n    userTyping(e){\n        if(e.keyCode === 13) this.submitMessage();\n        else this.setState({\n            message: e.target.value\n        });\n    }\n\n    messageValid = (txt) => txt && txt.replace(/\\s/g, '').length > 0;\n\n    submitMessage(){\n        if(this.messageValid(this.state.message)){\n            this.props.sendMessageHandle(this.state.message, this.props.selectedChatType);\n            this.setState({message: ''});\n        }\n    }\n\n}\n\nexport default withStyles(styles)(MessageBox);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../actions/auth';\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticating: state.auth.isAuthenticating,\n        statusText: state.auth.statusText,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nfunction LogOutDialog(props) {\n\n    const handleClose = () => {\n        props.setOpen('logout', false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"logout-dialog-title\"\n            aria-describedby=\"logout-dialog-description\"\n        >\n            <DialogTitle id=\"logout-dialog-title\">{\"Log Out\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"logout-dialog-description\">\n                    Are you sure you want to log out?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.logout} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogOutDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions/data\";\nimport connect from \"react-redux/es/connect/connect\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    drop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& p': {\n            fontFamily: 'Roboto, sans-serif',\n            fontSize: '16px',\n            color: theme.palette.text.primary,\n            marginBottom: 0\n        }\n    },\n});\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass EditPhotoDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            src: null,\n            crop: {\n                unit: \"%\",\n                width: 100,\n                aspect: 1\n            },\n            error: ''\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n        this.onSelectFile = this.onSelectFile.bind(this);\n\n    }\n\n    onSelectFile = files => {\n        if (files && files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () =>\n                this.setState({ src: reader.result })\n            );\n            reader.readAsDataURL(files[0]);\n        }\n    };\n\n    // If you setState the crop in here you should return false.\n    onImageLoaded = image => this.imageRef = image;\n\n    onCropChange = (crop) => this.setState({ crop });\n\n    getCroppedImg(image, crop) {\n        const canvas = document.createElement(\"canvas\");\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        return new Promise((resolve, reject) => {\n            canvas.toBlob(blob => {\n                if (!blob) {\n                    console.error(\"Canvas is empty\");\n                    return;\n                }\n\n                let data = new FormData();\n                data.append('file', blob, 'profile_photo.jpg');\n\n                resolve(data);\n            }, \"image/jpeg\");\n        });\n    }\n\n\n    async handleSave(){\n\n        if(this.imageRef){\n            await this.getCroppedImg(\n                this.imageRef,\n                this.state.crop\n            ).then(data => {\n                this.props.handleUpdatePhoto(data);\n                this.handleClose();\n            });\n        }\n        else this.setState({\n            error: 'Please choose the file.'\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            src: null,\n        });\n        this.props.setOpen(false);\n    };\n\n    render(){\n\n        const { classes } = this.props;\n        const { crop, croppedImageUrl, src } = this.state;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"add-chat-dialog-title\"\n                aria-describedby=\"add-chat-dialog-description\"\n                maxWidth='xs'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"add-chat-dialog-title\">{\"Choose New Photo\"}</DialogTitle>\n                <DialogContent>\n                    {\n                        this.props.error || this.state.error ?\n                            <Alert severity=\"error\">\n                                {this.props.error ? this.props.error : this.state.error}\n                            </Alert> : null\n                    }\n                    {\n                        !this.state.src ? <DropzoneArea\n                            onChange={this.onSelectFile}\n                            acceptedFiles={['image/*']}\n                            filesLimit={1}\n                            showPreviewsInDropzone={false}\n                            dropzoneClass={classes.drop}\n                        /> : null\n                    }\n                    {src && (\n                        <ReactCrop\n                            src={src}\n                            crop={crop}\n                            ruleOfThirds\n                            onImageLoaded={this.onImageLoaded}\n                            onChange={this.onCropChange}\n                        />\n                    )}\n                    {croppedImageUrl && (\n                        <img alt=\"Crop\" style={{ maxWidth: \"100%\" }} src={croppedImageUrl} />\n                    )}\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleSave} color=\"primary\">Save</Button>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditPhotoDialog));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions/data\";\nimport { connect } from 'react-redux';\nimport EditPhotoDialog from \"./EditPhotoDialog\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    avatar: {\n        width: 150,\n        height: 150,\n        fontSize: '2.25rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n        cursor: 'pointer',\n        position: 'relative',\n    },\n    form: {\n        width: '100%',\n    },\n    input: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        }\n    },\n    label:{\n        fontSize: '16px',\n        marginTop: '10px',\n    },\n    passwordInput: {\n        marginTop: '-5px',\n    },\n    alert: {\n        marginBottom: '20px',\n    }\n});\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.data.isFetching,\n        data: state.data.data,\n        status: state.data.status,\n        token: state.auth.token\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass AccountDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            surname: '',\n            login: '',\n            password: '',\n            passwordConfirmation: '',\n            updateError: '',\n            editPhotoDialogOpen: false,\n            img: ''\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n        this.initData = this.initData.bind(this);\n\n    }\n\n\n    initData(user){\n        this.setState({\n            name: user.name,\n            surname: user.surname,\n            login: user.login,\n        });\n    }\n\n    componentDidMount(){\n        this.props.fetchProtectedData(this.props.token, this.initData);\n    }\n\n    loginIsValid = () => this.state.login.length >= 6;\n    passwordIsValid = () => this.state.password.length >= 6;\n    formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    handleClose = () => {\n        this.props.setOpen('account', false);\n        this.props.updateUserDataClose();\n        this.setState({\n            updateError: ''\n        });\n    };\n\n    handleSave = () => {\n\n        let newUser = {};\n\n        if(this.state.password.length > 0) {\n            if(!this.passwordIsValid()){\n                this.setState({\n                    updateError: 'Password must be at least 6 characters.',\n                    password: '',\n                    passwordConfirmation: '',\n                });\n                return;\n            }\n            else if (!this.formIsValid()) {\n                this.setState({\n                    updateError: 'Passwords do not match',\n                    password: '',\n                    passwordConfirmation: '',\n                });\n                return;\n            }\n            else if (!this.loginIsValid()){\n                this.setState({\n                    updateError: 'Login must be at least 6 characters.',\n                });\n                return;\n            }\n            else newUser = {\n                name: this.state.name,\n                surname: this.state.surname,\n                login: this.state.login,\n                password: this.state.password\n            };\n        }\n        else newUser = {\n            name: this.state.name,\n            surname: this.state.surname,\n            login: this.state.login\n        };\n\n        this.setState({updateError: ''});\n        this.props.updateUserData(this.props.token, newUser);\n\n    };\n\n    handleDialogOpen = (state) => this.setState({\n        editPhotoDialogOpen: state\n    });\n\n    handleUpdatePhoto = (data) => {\n        this.props.updateUserPhoto(this.props.token, data);\n    };\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"account-dialog-title\"\n                aria-describedby=\"account-dialog-description\"\n                maxWidth='sm'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"account-dialog-title\">{\"My Account\"}</DialogTitle>\n                <DialogContent>\n                    {\n                        this.props.status && !(this.state.updateError.length > 0) ?\n                            <Alert severity={this.props.status.status === 'OK' ? 'success' : 'error'} className={classes.alert}>\n                                {this.props.status.message}\n                            </Alert> : null\n                    }\n                    {\n                        this.state.updateError ?\n                            <Alert severity='error' className={classes.alert}>\n                                {this.state.updateError}\n                            </Alert> : null\n                    }\n                    <center>\n                        <Tooltip title=\"Click to add new profile photo\">\n                            {\n                                this.props.data.profile_image ? <Avatar\n                                        className={classes.avatar}\n                                        src={API_PATH + this.props.data.profile_image}\n                                        onClick={() => this.handleDialogOpen(true)}\n                                    /> :\n                                    <Avatar className={classes.avatar} onClick={() => this.handleDialogOpen(true)}>\n                                        {\n                                            (this.state.name ? this.state.name.charAt(0).toUpperCase() : '') + '' +\n                                            (this.state.surname ? this.state.surname.charAt(0).toUpperCase() : '')\n                                        }\n                                    </Avatar>\n                            }\n                        </Tooltip>\n                    </center>\n                    <TextField\n                        margin='dense'\n                        id='account-name-input'\n                        label='Name'\n                        fullWidth\n                        value={this.state.name}\n                        onChange={(e) => this.userTyping('name', e)}\n                        autoComplete=\"off\"\n                    />\n                    <TextField\n                        margin='dense'\n                        id='account-surname-input'\n                        label='Surname'\n                        fullWidth\n                        value={this.state.surname}\n                        onChange={(e) => this.userTyping('surname', e)}\n                        autoComplete=\"off\"\n                    />\n                    <TextField\n                        margin='dense'\n                        id='account-login-input'\n                        label='Login'\n                        fullWidth\n                        value={this.state.login}\n                        onChange={(e) => this.userTyping('login', e)}\n                        autoComplete=\"off\"\n                        disabled\n                    />\n                    <Typography component='h6' variant='h6' className={classes.label}>Change Password:</Typography>\n                    <TextField\n                        margin='dense'\n                        id='account-password-input'\n                        label='New Password'\n                        fullWidth\n                        value={this.state.password}\n                        onChange={(e) => this.userTyping('password', e)}\n                        type='password'\n                        className={classes.passwordInput}\n                    />\n                    <TextField\n                        margin='dense'\n                        id='account-password-confirmation-input'\n                        label='Confirm Password'\n                        fullWidth\n                        value={this.state.passwordConfirmation}\n                        onChange={(e) => this.userTyping('passwordConfirmation', e)}\n                        type='password'\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                        Close\n                    </Button>\n\n                </DialogActions>\n                <EditPhotoDialog\n                    open={this.state.editPhotoDialogOpen}\n                    setOpen={this.handleDialogOpen}\n                    handleUpdatePhoto={this.handleUpdatePhoto}\n                />\n            </Dialog>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'name':\n                this.setState({ name: event.target.value });\n                break;\n            case 'surname':\n                this.setState({ surname: event.target.value });\n                break;\n            case 'login':\n                this.setState({ login: event.target.value });\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            case 'passwordConfirmation':\n                this.setState({ passwordConfirmation: event.target.value });\n                break;\n            default:\n                break;\n        }\n    };\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AccountDialog));","import { parseJSON } from '../utils/misc';\nimport {\n    get_user_contacts,\n    get_filtered_user_contacts,\n    get_user_invitations,\n} from '../utils/http_functions';\nimport {\n    RECEIVE_CONTACT_LIST,\n    FETCH_CONTACT_LIST_REQUEST,\n    RECEIVE_INVITATION_LIST,\n    FETCH_INVITATION_LIST_REQUEST,\n    RECEIVE_FILTERED_CONTACT_LIST,\n    FETCH_FILTERED_CONTACT_LIST_REQUEST,\n    CLEAN_CONTACT_LIST,\n} from '../utils/constants';\n\nexport function receiveContactList(data) {\n\n    return {\n        type: RECEIVE_CONTACT_LIST,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchContactListRequest() {\n    return {\n        type: FETCH_CONTACT_LIST_REQUEST,\n    };\n}\n\nexport function fetchContactList(token) {\n    return (dispatch) => {\n        dispatch(fetchContactListRequest());\n        get_user_contacts(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveContactList(response));\n            })\n            .catch(error => {\n\n            });\n    };\n}\n\nexport function receiveFilteredContactList(data) {\n\n    return {\n        type: RECEIVE_FILTERED_CONTACT_LIST,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchFilteredContactListRequest() {\n    return {\n        type: FETCH_FILTERED_CONTACT_LIST_REQUEST,\n    };\n}\n\nexport function cleanContactList() {\n    return {\n        type: CLEAN_CONTACT_LIST\n    };\n}\n\nexport function fetchFilteredContactList(token, login) {\n    return (dispatch) => {\n        dispatch(fetchFilteredContactListRequest());\n        get_filtered_user_contacts(token, login)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveFilteredContactList(response));\n            })\n            .catch(error => {\n\n            });\n    };\n}\n\nexport function receiveInvitationList(data) {\n\n    return {\n        type: RECEIVE_INVITATION_LIST,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchInvitationListRequest() {\n    return {\n        type: FETCH_INVITATION_LIST_REQUEST,\n    };\n}\n\nexport function fetchInvitationList(token) {\n    return (dispatch) => {\n        dispatch(fetchInvitationListRequest());\n        get_user_invitations(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveInvitationList(response));\n            })\n            .catch(error => {\n\n            });\n    };\n}","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"./AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    user: {\n        cursor: 'pointer',\n    },\n    error: {\n        marginTop: '15px'\n    }\n});\n\nfunction AddChat(props) {\n    const { value, index } = props;\n\n    const { classes } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && <div>\n                {\n                    props.error ?\n                        <Alert severity=\"error\" className={classes.error}>\n                            {props.error}\n                        </Alert> : null\n                }\n                <div>\n                    <TextField\n                        margin='dense'\n                        id='add-chat-login-input'\n                        label='Enter user login'\n                        fullWidth\n                        value={props.login}\n                        onChange={(e) => props.userTyping(e, 'add-chat-login')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.usersList && props.login.length >= 3 ? <div className=\"users-list\">\n                            {\n                                props.usersList.map((user, index) => <AccountPreview\n                                    key={index}\n                                    user={user}\n                                    className={classes.user}\n                                    handleClick={props.chooseUser}\n                                    selected={props.login === user.login}\n                                />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        props.usersList &&\n                        props.usersList.length === 0 &&\n                        props.login.length >= 3 ? <ListItem>\n                            <ListItemText\n                                secondary={'User with this login does not exist or ' +\n                                'you already have a chat with this user.'}\n                            />\n                        </ListItem> : null\n                    }\n                    {\n                        props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(AddChat);","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"./AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    user: {\n        cursor: 'pointer',\n    },\n    list: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n    label: {\n        fontSize: '16px',\n        marginTop: '10px',\n    },\n    chip: {\n        marginRight: '3px',\n    },\n    error: {\n        marginTop: 15\n    },\n});\n\nfunction AddGroup(props) {\n    const { value, index } = props;\n\n    const { classes } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && <div>\n                {\n                    props.error ?\n                        <Alert severity=\"error\" className={classes.error}>\n                            {props.error}\n                        </Alert> : null\n                }\n                {\n                    props.validation ?\n                        <Alert severity=\"error\" className={classes.error}>\n                            {props.validation}\n                        </Alert> : null\n                }\n                <div>\n                    <TextField\n                        margin='dense'\n                        id='add-group-title-input'\n                        label='Title'\n                        fullWidth\n                        value={props.chatTitle}\n                        onChange={(e) => props.userTyping(e, 'title')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.groupUserList.length > 0 ? <div>\n                            <Typography className={classes.label} component='h6' variant='h6'>User list:</Typography>\n                            {\n                                props.groupUserList.map((user, index) => <Chip\n                                    key={index}\n                                    className={classes.chip}\n                                    avatar={\n                                        user.profile_image ? <Avatar\n                                                src={API_PATH + user.profile_image}\n                                            /> : <Avatar>\n                                                {\n                                                    (user.name ? user.name.charAt(0).toUpperCase() : '') + '' +\n                                                    (user.surname ? user.surname.charAt(0).toUpperCase() : '')\n                                                }\n                                            </Avatar>\n                                    }\n                                    label={user.name + ' ' + user.surname}\n                                    variant=\"outlined\"\n                                    onDelete={() => props.removeUserFromList(user.login)}\n                                />)\n                            }\n                        </div> : null\n                    }\n                    <TextField\n                        margin='dense'\n                        id='add-group-login-input'\n                        label='Filter by user name'\n                        fullWidth\n                        value={props.login}\n                        onChange={(e) => props.userTyping(e, 'add-group-login')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.contactList ? <div className={classes.list}>\n                            {\n                                props.contactList.sort((contactA, contactB) =>\n                                contactA.name < contactB.name ? -1 : 1)\n                                    .filter(contact => (contact.name + ' ' + contact.surname).toLowerCase()\n                                        .includes(props.login.toLowerCase()))\n                                    .filter(contact => !props.userInList(contact))\n                                    .map((user, index) => <AccountPreview\n                                        key={index}\n                                        user={user}\n                                        className={classes.user}\n                                        handleClick={() => props.addUserToList(user)}\n                                        selected={false}\n                                    />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        props.contactList &&\n                        props.contactList.length === 0 ? <ListItem>\n                            <ListItemText\n                                secondary={'User with this login does not exist or ' +\n                                'you already have a chat with this user.'}\n                            />\n                        </ListItem> : null\n                    }\n                    {\n                        props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(AddGroup);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {fetchUsersData, cleanUsersData} from \"../actions/data\";\nimport {fetchContactList, fetchFilteredContactList, cleanContactList} from '../actions/contacts';\nimport {addChat, addChatClose, addGroup} from \"../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AddChat from \"../components/AddChat\";\nimport AddGroup from \"../components/AddGroup\";\n\nconst styles = theme => ({\n\n});\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        error: state.chats.addChatError,\n        isAddingChat: state.chats.isAddingChat,\n        usersList: state.contacts.filteredContacts,\n        contactList: state.contacts.contacts,\n        isFetching: state.contacts.isFetching,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addChat: (userLogin, openModal) => dispatch(addChat(userLogin, openModal)),\n    addChatClose: () => dispatch(addChatClose()),\n    addGroup: (title, users, openModal) => dispatch(addGroup(title, users, openModal)),\n    fetchUsersData: (token, login) => dispatch(fetchUsersData(token, login)),\n    cleanUsersData: () => dispatch(cleanUsersData()),\n    fetchContactList: token => dispatch(fetchContactList(token)),\n    fetchFilteredContactList: (token, login) => dispatch(fetchFilteredContactList(token, login)),\n    cleanContactList: () => dispatch(cleanContactList()),\n});\n\n\nclass AddChatDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addChatLogin: '',\n            addGroupLogin: '',\n            chatTitle: '',\n            groupUserList: [],\n            currentTab: 0,\n            addGroupError: null,\n\n        };\n\n        this.userTyping = this.userTyping.bind(this);\n        this.chooseUser = this.chooseUser.bind(this);\n        this.handleAddUserToList = this.handleAddUserToList.bind(this);\n        this.handleRemoveUserFromList = this.handleRemoveUserFromList.bind(this);\n        this.isUserInGroupList = this.isUserInGroupList.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.props.fetchContactList(this.props.token);\n    }\n\n    userTyping = (e, type) => {\n        switch (type) {\n            case 'add-chat-login':\n                let login = e.target.value;\n                if(login.length >= 3){\n                    this.props.fetchFilteredContactList(this.props.token, login);\n                }\n                else{\n                    this.props.cleanContactList();\n                }\n                this.setState({ addChatLogin: login });\n                break;\n            case 'add-group-login':\n                this.setState({ addGroupLogin: e.target.value });\n                break;\n            case 'title':\n                let title = e.target.value;\n                this.setState({chatTitle: title});\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleClose = () => {\n        this.props.setOpen('add-chat', false);\n        this.setState({\n            addChatLogin: '',\n            addGroupLogin: '',\n            chatTitle: '',\n            groupUserList: [],\n            currentTab: 0\n        });\n        this.props.addChatClose();\n        this.props.cleanUsersData();\n    };\n\n    handleAddChat = () => {\n        if(this.state.currentTab === 0){\n            this.props.addChat(this.state.addChatLogin, this.props.setOpen);\n        }\n        else{\n            let users = [];\n            let title = this.state.chatTitle;\n\n            for (let i = 0; i < this.state.groupUserList.length; i++) {\n                users.push(this.state.groupUserList[i].login);\n            }\n\n            if(title.length < 3){\n                this.setState({\n                    addGroupError: 'Title should have minimum 3 symbols.'\n                });\n            }\n            else if(users.length < 2){\n                this.setState({\n                    addGroupError: 'Please choose minimum 2 users.'\n                });\n            }\n            else{\n                this.props.addGroup(title, users, this.props.setOpen);\n                this.setState({\n                    addGroupError: null,\n                });\n            }\n        }\n        this.setState({\n            addChatLogin: '',\n            addGroupLogin: '',\n            chatTitle: '',\n            groupUserList: [],\n        });\n    };\n\n    chooseUser(login){\n        this.props.fetchFilteredContactList(this.props.token, login);\n        this.setState({addChatLogin: login});\n    }\n\n    handleAddUserToList(user){\n        this.setState({\n            groupUserList: [...this.state.groupUserList, user]\n        });\n    }\n\n    handleRemoveUserFromList(login){\n        this.setState({\n            groupUserList: this.state.groupUserList.filter(user => user.login !== login)\n        });\n    }\n\n    isUserInGroupList(user){\n        for(let i = 0; i < this.state.groupUserList.length; i++){\n            if(this.state.groupUserList[i].login === user.login){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n\n    handleChange = (e, tab) => {\n        this.setState({currentTab: tab});\n    };\n\n    render(){\n\n        // const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"add-chat-dialog-title\"\n                aria-describedby=\"add-chat-dialog-description\"\n                maxWidth='sm'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"add-chat-dialog-title\">{\"Add new chat\"}</DialogTitle>\n                <DialogContent>\n                    <Tabs\n                        value={this.state.currentTab}\n                        onChange={this.handleChange}\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"New chat\" {...this.a11yProps(0)} />\n                        <Tab label=\"New group\" {...this.a11yProps(1)} />\n                    </Tabs>\n                    <AddChat\n                        value={this.state.currentTab}\n                        index={0}\n                        error={this.props.error}\n                        login={this.state.addChatLogin}\n                        userTyping={this.userTyping}\n                        usersList={this.props.usersList}\n                        chooseUser={this.chooseUser}\n                        isFetching={this.props.isFetching}\n                    />\n                    <AddGroup\n                        value={this.state.currentTab}\n                        index={1}\n                        error={this.props.addGroupError}\n                        login={this.state.addGroupLogin}\n                        chatTitle={this.state.chatTitle}\n                        userTyping={this.userTyping}\n                        contactList={this.props.contactList}\n                        addUserToList={this.handleAddUserToList}\n                        removeUserFromList={this.handleRemoveUserFromList}\n                        isFetching={this.props.isFetching}\n                        groupUserList={this.state.groupUserList}\n                        userInList={this.isUserInGroupList}\n                        validation={this.state.addGroupError}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleAddChat} color=\"primary\">Add</Button>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddChatDialog));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Chip from '@material-ui/core/Chip';\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        fontSize: '2.25rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n        cursor: 'pointer',\n        position: 'relative',\n    },\n    userInfo: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    info: {\n        paddingLeft: 15\n    },\n    chip: {\n        marginTop: 5\n    },\n    actions: {\n        '& button': {\n            marginLeft: '0 !important',\n        }\n    },\n});\n\nfunction UserInfoDialog(props) {\n\n    const handleClose = () => {\n        props.setOpen('user-info', false);\n    };\n\n    const { classes } = props;\n\n    let contacts_login = [];\n    for(let i = 0; i < props.contacts.length; i++){\n        contacts_login.push(props.contacts[i].login);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"user-info-dialog-title\"\n            aria-describedby=\"user-info-dialog-description\"\n        >\n            <DialogContent>\n                <div className={classes.userInfo}>\n                    {\n                        props.data.profile_image ? <Avatar\n                                className={classes.avatar}\n                                src={API_PATH + props.data.profile_image}\n                            /> :\n                            <Avatar className={classes.avatar}>\n                                {\n                                    (props.data.name ? props.data.name.charAt(0).toUpperCase() : '') + '' +\n                                    (props.data.surname ? props.data.surname.charAt(0).toUpperCase() : '')\n                                }\n                            </Avatar>\n                    }\n                    <div className={classes.info}>\n                        <Typography component='h5' variant='h5'>{props.data.name + ' ' + props.data.surname}</Typography>\n                        <Typography variant='body1'>Login: {props.data.login}</Typography>\n                        {\n                            contacts_login.includes(props.data.login) ? <Chip\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                size=\"small\"\n                                label=\"Your contact\"\n                                className={classes.chip}\n                            /> : null\n                        }\n                    </div>\n                </div>\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                {\n                    contacts_login.includes(props.data.login) ? <div>\n                        <Button onClick={() => {\n                            props.handleGoToChat();\n                            handleClose();\n                        }} color=\"primary\">\n                            Go to chat\n                        </Button>\n                        <Button onClick={props.handleRemoveContact} color=\"secondary\">\n                            Delete\n                        </Button>\n                    </div> : <Button onClick={props.handleAddContact} color=\"primary\">\n                        Add contact\n                    </Button>\n                }\n                <Button onClick={handleClose} autoFocus>\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default withStyles(styles)(UserInfoDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DeleteContactDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpen('contact', false)}\n            aria-labelledby=\"delete-contact-dialog-title\"\n            aria-describedby=\"delete-contact-dialog-description\"\n        >\n            <DialogTitle id=\"delete-contact-dialog-title\">{\"Delete contact\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"delete-contact-dialog-description\">\n                    Are you sure you want to delete this contact?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleRemoveContact} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={() => props.setOpen('contact', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteContactDialog;","import React from \"react\";\nimport AccountPreview from \"./AccountPreview\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport UserInfoDialog from \"../dialogs/UserInfoDialog\";\nimport DeleteContactDialog from \"../dialogs/DeleteContactDialog\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    list: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n    addBtn:{\n        textAlign: 'center'\n    },\n    search: {\n        marginTop: '10px',\n        marginBottom: '10px',\n    }\n});\n\nclass ContactList extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchValue: '',\n            selectedUser: null,\n            userInfoOpen: false,\n            deleteContactDialogOpen: false,\n        };\n\n        this.handleSearch = this.handleSearch.bind(this);\n\n    }\n\n    handleSearch = (e) => this.setState({searchValue: e.target.value});\n\n    setOpen = (type, open) => {\n        if(type === 'user-info') {\n            this.setState({userInfoOpen: open});\n        }\n        else if(type === 'contact'){\n            this.setState({deleteContactDialogOpen: open});\n        }\n    };\n\n    render(){\n        const { value, index } = this.props;\n\n        const { classes } = this.props;\n\n        return (\n            <div\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n            >\n                {value === index && <div>\n                    <TextField\n                        fullWidth\n                        value={this.state.searchValue}\n                        onChange={this.handleSearch}\n                        placeholder='Filter by user name'\n                        className={classes.search}\n                    />\n                    {\n                        this.props.contacts && this.props.contacts.length > 0 ? <div className={classes.list}>\n                            {\n                                this.props.contacts.sort((contactA, contactB) =>\n                                    contactA.name < contactB.name ? -1 : 1).filter(contact =>\n                                    (contact.name + ' ' + contact.surname).toLowerCase()\n                                        .includes(this.state.searchValue.toLowerCase()))\n                                    .map((user, index) => <AccountPreview\n                                    key={index}\n                                    user={user}\n                                    className={classes.user}\n                                    handleClick={() => {\n                                        this.setState({selectedUser: user});\n                                        this.setOpen('user-info', true);\n                                    }}\n                                />)\n                            }\n                        </div> : <ListItem>\n                            <ListItemText\n                                secondary={'You don\\'t have any contacts.'}\n                            />\n                        </ListItem>\n                    }\n                    {\n                        this.props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                    {\n                        this.state.selectedUser ? <UserInfoDialog\n                            open={this.state.userInfoOpen}\n                            setOpen={this.setOpen}\n                            data={this.state.selectedUser}\n                            contacts={this.props.contacts}\n                            handleGoToChat={() => this.props.handleGoToChat(this.state.selectedUser.login)}\n                            handleRemoveContact={() => this.setOpen('contact', true)}\n                        /> : null\n                    }\n                    <DeleteContactDialog\n                        open={this.state.deleteContactDialogOpen}\n                        setOpen={this.setOpen}\n                        handleRemoveContact={() => {\n                            this.props.handleRemoveContact(this.state.selectedUser);\n                            this.setOpen('contact', false);\n                        }}\n                    />\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ContactList);","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {makeStyles} from \"@material-ui/core\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst useStyles = makeStyles(theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    time: {\n        fontSize: '12px',\n        fontFamily: \"'Roboto', sans-serif\",\n        position: 'absolute',\n        right: '16px',\n        top: '14px',\n        color: theme.palette.text.secondary\n    },\n    avatar: {\n        // border: '2px solid',\n        borderColor: theme.palette.text.disabled,\n    },\n    button: {\n        padding: 0\n    },\n}));\n\n\nexport default function InvitationPreview(props) {\n\n    const user = props.data.sender;\n    const styles = useStyles();\n\n    if(user)\n        return (\n            <ListItem\n                className={styles.listItem}\n            >\n                <ListItemAvatar>\n                    {\n                        user.profile_image ? <Avatar\n                                src={API_PATH + user.profile_image}\n                                className={styles.avatar}\n                            /> :\n                            <Avatar className={styles.avatar}>\n                                {user.name.charAt(0).toUpperCase() + '' + (user.surname ? user.surname.charAt(0).toUpperCase() : '')}\n                            </Avatar>\n                    }\n                </ListItemAvatar>\n                <ListItemText\n                    primary={<b>{user.name + ' ' + (user.surname ? user.surname : '')}</b>}\n                    secondary={\n                        <React.Fragment>\n                            {props.data.message}\n                        </React.Fragment>\n                    }\n                />\n                <IconButton className={styles.button} onClick={props.handleAccept}>\n                    <DoneIcon color=\"primary\"/>\n                </IconButton>\n                <IconButton className={styles.button} onClick={props.handleDecline}>\n                    <CloseIcon/>\n                </IconButton>\n            </ListItem>\n        );\n    else return null;\n}","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InvitationPreview from \"./InvitationPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    list: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n    addBtn:{\n        textAlign: 'center'\n    }\n});\n\nfunction InvitationList(props) {\n    const { value, index } = props;\n\n    const { classes } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && <div className={classes.list}>\n                {\n                    props.invitations && props.invitations.received.length > 0 ? <div className=\"users-list\">\n                        {\n                            props.invitations.received.map((invitation, index) => <InvitationPreview\n                                key={index}\n                                data={invitation}\n                                handleAccept={() => props.acceptInvitation(invitation.sender.login)}\n                                handleDecline={() => props.declineInvitation(invitation.sender.login)}\n                            />)\n                        }\n                    </div> : <ListItem>\n                        <ListItemText\n                            secondary={'You don\\'t have any invitations.'}\n                        />\n                    </ListItem>\n                }\n                {\n                    props.isFetching ? <div className={classes.progress}>\n                        <CircularProgress color=\"primary\"/>\n                    </div> : null\n                }\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(InvitationList);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"../components/AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    user: {\n        cursor: 'pointer',\n    },\n    error: {\n        marginTop: '15px'\n    },\n});\n\nfunction AddContactDialog(props) {\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    const { classes } = props;\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"add-contact-dialog-title\"\n            aria-describedby=\"add-contact-dialog-description\"\n            maxWidth='xs'\n            fullWidth={true}\n        >\n            <DialogTitle id=\"add-contact-dialog-title\">{\"Add contact\"}</DialogTitle>\n            <DialogContent>\n                <div>\n                    {\n                        props.successMsg ?\n                            <Alert severity=\"success\" className={classes.error}>\n                                {props.successMsg}\n                            </Alert> : null\n                    }\n                    {\n                        props.error ?\n                            <Alert severity=\"error\" className={classes.error}>\n                                {props.error}\n                            </Alert> : null\n                    }\n                    <TextField\n                        margin='dense'\n                        id='add-contact-login-input'\n                        label='Enter user login'\n                        fullWidth\n                        value={props.login}\n                        onChange={(e) => props.userTyping(e, 'login')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.contactList && props.login.length >= 3 ? <div className=\"users-list\">\n                            {\n                                props.contactList.map((user, index) => <AccountPreview\n                                    key={index}\n                                    user={user}\n                                    className={classes.user}\n                                    handleClick={props.chooseUser}\n                                    selected={props.login === user.login}\n                                />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        props.contactList &&\n                        props.contactList.length === 0 &&\n                        props.login.length >= 3 ? <ListItem>\n                            <ListItemText\n                                secondary={'User with this login does not exist or ' +\n                                'you already have this user in your contact list.'}\n                            />\n                        </ListItem> : null\n                    }\n                    {\n                        props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                    <TextField\n                        margin='dense'\n                        id='add-contact-message-input'\n                        label='Enter message'\n                        fullWidth\n                        value={props.message}\n                        onChange={(e) => props.userTyping(e, 'message')}\n                        autoComplete=\"off\"\n                        maxLength={50}\n                    />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleSendInvitation} color=\"primary\">\n                    Send\n                </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default withStyles(styles)(AddContactDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ContactList from '../components/ContactList';\nimport { fetchContactList, fetchInvitationList } from '../actions/contacts';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport InvitationList from \"../components/InvitationList\";\nimport Badge from \"@material-ui/core/Badge/Badge\";\nimport AddContactDialog from \"./AddContactDialog\";\nimport {cleanUsersData, fetchUsersData} from \"../actions/data\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport {addChat, fetchUserChats} from \"../actions/chats\";\n\nconst styles = theme => ({\n    addBtn: {\n        float: 'right',\n    },\n    badge: {\n        '& span': {\n            right: '-12px'\n        }\n    },\n});\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        contacts: state.contacts.contacts,\n        invitations: state.contacts.invitations,\n        isContactsFetching: state.contacts.isFetching,\n        usersList: state.data.usersList,\n        isDataFetching: state.data.isFetching,\n        userLogin: state.auth.login,\n        chats: state.chats.chats,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchContactList: (token) => dispatch(fetchContactList(token)),\n    fetchInvitationList: (token) => dispatch(fetchInvitationList(token)),\n    fetchUsersData: (token, login) => dispatch(fetchUsersData(token, login)),\n    cleanUsersData: () => dispatch(cleanUsersData()),\n    addChat: (userLogin, openModal, selectChat) => dispatch(addChat(userLogin, openModal, selectChat)),\n    getChats: (token) => dispatch(fetchUserChats(token)),\n});\n\n\nclass ContactsDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTab: 0,\n            contactDialogOpen: false,\n            login: '',\n            inviteMessage: '',\n            error: '',\n            success: '',\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            },\n        };\n\n        this.userTyping = this.userTyping.bind(this);\n        this.chooseUser = this.chooseUser.bind(this);\n        this.handleAddContactModalOpen = this.handleAddContactModalOpen.bind(this);\n        this.handleSendInvitation = this.handleSendInvitation.bind(this);\n        this.handleAcceptInvitation = this.handleAcceptInvitation.bind(this);\n        this.handleDeclineInvitation = this.handleDeclineInvitation.bind(this);\n        this.setSocketListeners = this.setSocketListeners.bind(this);\n\n    }\n\n    componentDidMount(){\n\n        this.props.fetchContactList(this.props.token);\n        this.props.fetchInvitationList(this.props.token);\n        this.setSocketListeners();\n\n    }\n\n    setSocketListeners(){\n        this.props.socket.on('invitation_sent', data => {\n            if(this.props.userLogin === data.sender) {\n                this.setState({\n                    success: data.message,\n                    error: '',\n                    login: '',\n                    inviteMessage: '',\n                });\n                this.handleAddContactModalOpen(false);\n                this.handleShowSnackbar('success', data.message);\n            }\n            else if(this.props.userLogin === data.receiver){\n                this.props.fetchInvitationList(this.props.token);\n            }\n        });\n        this.props.socket.on('invitation_error', data => {\n            if(this.props.userLogin === data.sender){\n                this.setState({\n                    error: data.error,\n                    success: ''\n                });\n            }\n        });\n        this.props.socket.on('invitation_accepted', data => {\n            this.props.fetchContactList(this.props.token);\n            this.props.fetchInvitationList(this.props.token);\n            if(this.props.userLogin === data.receiver){\n                this.handleShowSnackbar('success', data.message);\n            }\n        });\n        this.props.socket.on('invitation_declined', data => {\n            if(this.props.userLogin === data.receiver){\n                this.props.fetchInvitationList(this.props.token);\n                this.handleShowSnackbar('info', data.message);\n            }\n        });\n    }\n\n    handleSendInvitation(){\n        const invitation = {\n            'sender': this.props.userLogin,\n            'receiver': this.state.login,\n            'message': this.state.inviteMessage\n        };\n\n        this.props.socket.emit('send_invitation', invitation);\n    }\n\n    handleAcceptInvitation(sender){\n        const data = {\n            'sender': sender,\n            'receiver': this.props.userLogin\n        };\n\n        this.props.socket.emit('accept_invitation', data);\n    }\n\n    handleDeclineInvitation(sender){\n        const data = {\n            'sender': sender,\n            'receiver': this.props.userLogin\n        };\n\n        this.props.socket.emit('decline_invitation', data);\n    }\n\n    handleShowSnackbar(type, data){\n        this.setState({\n            snackbar: {\n                type: type,\n                message: data,\n                open: true,\n            }\n        });\n    }\n\n    userTyping = (e, type) => {\n        switch (type) {\n            case 'login':\n                let login = e.target.value;\n                if(login.length >= 3){\n                    this.props.fetchUsersData(this.props.token, login);\n                }\n                else{\n                    this.props.cleanUsersData();\n                }\n                this.setState({ login });\n                break;\n            case 'message':\n                let message = e.target.value;\n                if(message.length < 50) {\n                    this.setState({inviteMessage: message});\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleSnackbarClose = (e, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            }\n        });\n    };\n\n    handleClose = () => {\n        this.props.setOpen('contacts', false);\n    };\n\n    chooseUser(login){\n        this.props.fetchUsersData(this.props.token, login);\n        this.setState({login});\n    }\n\n    a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n\n    handleChange = (e, tab) => {\n        this.setState({currentTab: tab});\n    };\n\n    handleAddContactModalOpen = (open) =>\n        this.setState({\n            contactDialogOpen: open,\n            success: '',\n            error: '',\n            login: '',\n            inviteMessage: '',\n        });\n\n\n    handleGoToChat = (login) => {\n        this.props.handleGoToChat(login);\n        this.handleClose();\n    };\n\n    handleRemoveContact = (user) => {\n        this.props.handleRemoveContact(user);\n        this.handleClose();\n    };\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"contacts-dialog-title\"\n                aria-describedby=\"contacts-dialog-description\"\n                maxWidth='sm'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"contacts-dialog-title\">\n                    {\"Contacts\"}\n                    <IconButton\n                        className={classes.addBtn}\n                        onClick={() => this.handleAddContactModalOpen(true)}\n                    >\n                        <PersonAddIcon/>\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <Tabs\n                        value={this.state.currentTab}\n                        onChange={this.handleChange}\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"List\" {...this.a11yProps(0)} />\n                        {\n                            this.props.invitations && this.props.invitations.received.length > 0 ?\n                                <Tab label={<Badge\n                                    badgeContent={this.props.invitations.received.length}\n                                    color=\"primary\"\n                                    className={classes.badge}\n                                >Invitations</Badge>} {...this.a11yProps(1)} />\n                            : <Tab label=\"Invitations\" {...this.a11yProps(1)} />\n                        }\n                    </Tabs>\n                    <ContactList\n                        value={this.state.currentTab}\n                        index={0}\n                        contacts={this.props.contacts}\n                        handleGoToChat={this.handleGoToChat}\n                        handleRemoveContact={this.handleRemoveContact}\n                        isFetching={this.props.isFetching}\n                    />\n                    <InvitationList\n                        value={this.state.currentTab}\n                        index={1}\n                        invitations={this.props.invitations}\n                        isFetching={this.props.isContactsFetching}\n                        acceptInvitation={this.handleAcceptInvitation}\n                        declineInvitation={this.handleDeclineInvitation}\n                    />\n                    <AddContactDialog\n                        open={this.state.contactDialogOpen}\n                        setOpen={this.handleAddContactModalOpen}\n                        userTyping={this.userTyping}\n                        login={this.state.login}\n                        contactList={this.props.usersList}\n                        chooseUser={this.chooseUser}\n                        isFetching={this.props.isDataFetching}\n                        message={this.state.inviteMessage}\n                        error={this.state.error}\n                        successMsg={this.state.success}\n                        handleSendInvitation={this.handleSendInvitation}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>Close</Button>\n                </DialogActions>\n                <Snackbar\n                    open={this.state.snackbar.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleSnackbarClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                >\n                    <Alert\n                        onClose={this.handleSnackbarClose}\n                        severity={this.state.snackbar.type}\n                    >{this.state.snackbar.message}</Alert>\n                </Snackbar>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ContactsDialog));","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport {makeStyles} from \"@material-ui/core\";\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport {API_PATH} from \"../utils/constants\";\n\nconst useStyles = makeStyles(theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    group3: {\n        marginLeft: '-35px',\n        '&:first-child': {\n            marginLeft: '-8px'\n        }\n    },\n    title: {\n        fontSize: '18px',\n        marginLeft: '5px',\n        fontWeight: 500\n    },\n}));\n\n\nexport default function GroupPreview(props) {\n\n    const users = props.users;\n    const styles = useStyles();\n\n    if(users.length > 0)\n        return (\n            <ListItem className={styles.listItem}>\n                <AvatarGroup max={2}>\n                    {\n                        props.groupPhoto ? <Avatar\n                                src={API_PATH + props.groupPhoto}\n                            /> :\n                        users.slice(0, 3).map((_usr, _idx) => <Avatar\n                            key={_idx}\n                            src={_usr.profile_image ? (API_PATH + _usr.profile_image) : null}\n                            className={styles.group3}\n                        >\n                            {!_usr.profile_image ?\n                                _usr.name.charAt(0).toUpperCase() + '' +\n                                (_usr.surname ? _usr.surname.charAt(0).toUpperCase() : '') : null\n                            }\n                        </Avatar>)\n                    }\n                </AvatarGroup>\n                <ListItemText\n                    primary={<b className={styles.title}>{props.chatTitle}</b>}\n                />\n                <IconButton color=\"primary\" aria-label=\"info\" onClick={props.handleChatInfoOpen}>\n                    <InfoOutlinedIcon/>\n                </IconButton>\n            </ListItem>\n        );\n    else return null;\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DeleteChatDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpen('chat', false)}\n            aria-labelledby=\"delete-chat-dialog-title\"\n            aria-describedby=\"delete-chat-dialog-description\"\n        >\n            <DialogTitle id=\"delete-chat-dialog-title\">{\"Delete chat\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"delete-chat-dialog-description\">\n                    Are you sure you want to delete this chat?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleRemoveChat} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={() => props.setOpen('chat', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteChatDialog;","import React from 'react';\nimport AccountPreview from \"./AccountPreview\";\nimport GroupPreview from \"./GroupPreview\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DeleteChatDialog from '../dialogs/DeleteChatDialog';\nimport DeleteContactDialog from \"../dialogs/DeleteContactDialog\";\n\nconst styles = theme => ({\n    chatPreview: {\n        backgroundColor: 'white',\n        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.6)',\n        zIndex: 10,\n        minHeight: 72,\n        [theme.breakpoints.down('md')]: {\n            minHeight: 64,\n        },\n        display: 'flex',\n        alignItems: 'center'\n    },\n    accountContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n    },\n    menu: {\n        '& ul': {\n            padding: 0,\n        },\n    },\n});\n\n\nclass ChatInfoBar extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteChatDialogOpen: false,\n            deleteContactDialogOpen: false,\n        };\n\n        this.handleSetOpenDialog = this.handleSetOpenDialog.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.handleCloseMenu();\n    }\n\n    handleSetOpenDialog = (type, open) => {\n        switch (type) {\n            case 'chat':\n                this.setState({deleteChatDialogOpen: open});\n                break;\n            case 'contact':\n                this.setState({deleteContactDialogOpen: open});\n                break;\n            default:\n                break;\n        }\n    };\n\n    render(){\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.chatPreview}>\n                {\n                    this.props.getSelectedChatUserList(this.props.chatList).length === 1 &&\n                        this.props.chatList.find(_chat => _chat.chat_id === this.props.selectedChat).type === 'chat' ?\n                        <div className={classes.accountContainer}>\n                            <AccountPreview\n                                user={this.props.getSelectedChatUserList(this.props.chatList)[0]}\n                            />\n                            <IconButton onClick={this.props.handleOpenMenu}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                            <Menu\n                                id=\"account-menu\"\n                                open={Boolean(this.props.anchorMenu)}\n                                anchorEl={this.props.anchorMenu}\n                                onClose={this.props.handleCloseMenu}\n                                // className={classes.menu}\n                            >\n                                <MenuItem\n                                    className={classes.menuItem}\n                                    onClick={() => this.handleSetOpenDialog('chat', true)}\n                                >Remove chat</MenuItem>\n                                <MenuItem\n                                    onClick={() => this.handleSetOpenDialog('contact', true)}\n                                >Remove contact</MenuItem>\n                            </Menu>\n                        </div> : <GroupPreview\n                            users={this.props.getSelectedChatUserList(this.props.chatList)}\n                            chatTitle={this.props.chatList.filter(_chat => _chat.chat_id === this.props.selectedChat)[0].title}\n                            handleChatInfoOpen={this.props.handleChatInfoOpen}\n                            groupPhoto={this.props.chatList.find(_chat => _chat.chat_id === this.props.selectedChat).photo}\n                        />\n                }\n                <DeleteChatDialog\n                    open={this.state.deleteChatDialogOpen}\n                    setOpen={this.handleSetOpenDialog}\n                    handleRemoveChat={() => {\n                        this.props.handleRemoveChat();\n                        this.handleSetOpenDialog('chat', false);\n                    }}\n                />\n                <DeleteContactDialog\n                    open={this.state.deleteContactDialogOpen}\n                    setOpen={this.handleSetOpenDialog}\n                    handleRemoveContact={() => {\n                        this.props.handleRemoveContact();\n                        this.handleSetOpenDialog('contact', false);\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ChatInfoBar);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DeleteGroupDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpen('delete', false)}\n            aria-labelledby=\"delete-group-dialog-title\"\n            aria-describedby=\"delete-group-dialog-description\"\n        >\n            <DialogTitle id=\"delete-group-dialog-title\">{\"Delete group\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"delte-group-dialog-description\">\n                    Are you sure you want to delete this group?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleRemoveGroup} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={() => props.setOpen('delete', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteGroupDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction LeaveGroupDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            maxWidth='xs'\n            onClose={() => props.setOpen('leave', false)}\n            aria-labelledby=\"leave-group-dialog-title\"\n            aria-describedby=\"leave-group-dialog-description\"\n        >\n            <DialogTitle id=\"leave-group-dialog-title\">{\"Leave group\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"leave-group-dialog-description\">\n                    Are you sure you want to leave this group?\n                    {\n                        props.isOwner ? ' Someone from group members will be a group owner.' : null\n                    }\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleLeaveGroup} color=\"primary\">\n                    Yes\n                </Button>\n                <Button onClick={() => props.setOpen('leave', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default LeaveGroupDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Chip from '@material-ui/core/Chip';\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"../components/AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    label: {\n        fontSize: '16px',\n        marginTop: '10px',\n    },\n    chip: {\n        marginRight: 3,\n        marginBottom: 3\n    },\n    list: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    contactList: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n});\n\nclass ManageMembersDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            search: '',\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.setState({\n            users: this.props.userList\n        });\n    }\n\n    handleClose = () => {\n        this.props.setOpen('manage-members', false);\n    };\n\n    handleSave = () => {\n        this.props.handleSaveGroupMembers(this.state.users);\n    };\n\n    handleAddUserToList(user){\n        this.setState({\n            users: [...this.state.users, user]\n        });\n    }\n\n    handleRemoveUserFromList(login){\n        this.setState({\n            users: this.state.users.filter(user => user.login !== login)\n        });\n    }\n\n    isUserInGroupList(user){\n        for(let i = 0; i < this.state.users.length; i++){\n            if(this.state.users[i].login === user.login){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"manage-members-dialog-title\"\n                aria-describedby=\"manage-members-dialog-description\"\n                maxWidth='xs'\n                fullWidth\n            >\n                <DialogTitle id=\"manage-members-dialog-title\">{\"Manage group members\"}</DialogTitle>\n                <DialogContent>\n                    <Typography className={classes.label} component='h6' variant='h6'>Members:</Typography>\n                    <div className={classes.list}>\n                        {\n                            this.state.users.map((user, index) => <Chip\n                                key={index}\n                                className={classes.chip}\n                                color={user.login === this.props.owner ? 'primary' : 'default'}\n                                avatar={\n                                    user.profile_image ? <Avatar\n                                        src={API_PATH + user.profile_image}\n                                    /> : <Avatar>\n                                        {\n                                            (user.name ? user.name.charAt(0).toUpperCase() : '') + '' +\n                                            (user.surname ? user.surname.charAt(0).toUpperCase() : '')\n                                        }\n                                    </Avatar>\n                                }\n                                label={user.name + ' ' + user.surname}\n                                variant=\"outlined\"\n                                onDelete={\n                                    user.login !== this.props.owner &&\n                                    user.login !== this.props.currentUser ?\n                                        () => this.handleRemoveUserFromList(user.login) : null\n                                }\n                            />)\n                        }\n                    </div>\n                    <TextField\n                        margin='dense'\n                        id='manage-members-input'\n                        label='Filter by user name'\n                        fullWidth\n                        value={this.state.search}\n                        onChange={(e) => this.setState({search: e.target.value})}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        this.props.contactList ? <div className={classes.contactList}>\n                            {\n                                this.props.contactList.sort((contactA, contactB) =>\n                                    contactA.name < contactB.name ? -1 : 1)\n                                    .filter(contact => (contact.name + ' ' + contact.surname).toLowerCase()\n                                        .includes(this.state.search.toLowerCase()))\n                                    .filter(contact => !this.isUserInGroupList(contact))\n                                    .map((user, index) => <AccountPreview\n                                        key={index}\n                                        user={user}\n                                        className={classes.user}\n                                        handleClick={() => this.handleAddUserToList(user)}\n                                        selected={false}\n                                    />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        this.props.contactList &&\n                        this.props.contactList.length === 0 ? <ListItem>\n                            <ListItemText\n                                secondary={'This user does not exist or ' +\n                                'you already have a chat with this user.'}\n                            />\n                        </ListItem> : null\n                    }\n                </DialogContent>\n                <DialogActions className={classes.actions}>\n                    <Button onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                    <Button onClick={this.handleClose} autoFocus>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n\n    }\n}\n\nexport default withStyles(styles)(ManageMembersDialog);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Drawer from \"@material-ui/core/Drawer/Drawer\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport AccountPreview from \"./AccountPreview\";\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n    fetchUserGroups,\n    updateGroupTitle,\n    updateGroupPhoto,\n    updateGroupMembers\n} from \"../actions/chats\";\nimport Button from '@material-ui/core/Button';\nimport DeleteGroupDialog from \"../dialogs/DeleteGroupDialog\";\nimport UserInfoDialog from \"../dialogs/UserInfoDialog\";\nimport DeleteContactDialog from \"../dialogs/DeleteContactDialog\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport LeaveGroupDialog from \"../dialogs/LeaveGroupDialog\";\nimport EditPhotoDialog from \"../dialogs/EditPhotoDialog\";\nimport ManageMembersDialog from \"../dialogs/ManageMembersDialog\";\nimport withWidth from \"@material-ui/core/withWidth/withWidth\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst drawerWidth = 350;\nconst styles = theme => ({\n    drawer: {\n        width: drawerWidth,\n        [theme.breakpoints.down('md')]: {\n            width: drawerWidth - 50,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        marginTop: 64,\n        [theme.breakpoints.down('md')]: {\n            marginTop: 48,\n            width: drawerWidth - 50,\n        },\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n        borderBottom: '1px solid',\n        borderBottomColor: theme.palette.text.disabled\n    },\n    chatInfo: {\n\n    },\n    avatar: {\n        width: 150,\n        height: 150,\n        fontSize: '3rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n        cursor: 'pointer',\n        position: 'relative',\n        backgroundColor: theme.palette.secondary,\n    },\n    avatarContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '20px 0',\n    },\n    title: {\n        textAlign: 'center',\n        margin: '0 auto 20px',\n        position: 'relative',\n        paddingLeft: 16,\n        paddingRight: 16,\n        display: 'inline',\n        '&:hover button': {\n            display: 'block',\n        },\n    },\n    userList: {\n        padding: 0,\n        maxHeight: 360,\n        overflowY: 'auto',\n    },\n    listLabel: {\n        fontWeight: 400,\n        paddingLeft: 15,\n        position: 'relative',\n        paddingRight: 16,\n        display: 'inline',\n        marginRight: 'auto',\n        '&:hover button': {\n            display: 'block',\n        },\n    },\n    editBtn: {\n        color: theme.palette.text.disabled,\n        position: 'absolute',\n        right: -10,\n        top: '50%',\n        transform: 'translateY(-50%)',\n        padding: 0,\n        display: 'none',\n        '&:hover': {\n            display: 'block',\n            backgroundColor: 'transparent',\n        },\n    },\n    titleEditField: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 15px',\n    },\n    iconBtn: {\n        padding: 0,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    deleteBtn: {\n        color: 'red',\n    },\n});\n\nconst mapStateToProps = (state) => ({\n    currentUser: state.auth.login,\n    contacts: state.contacts.contacts,\n    token: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateGroupTitle: (id, title) => dispatch(updateGroupTitle(id, title)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n    updateGroupPhoto: (token, data, chat) => dispatch(updateGroupPhoto(token, data, chat)),\n    updateGroupMembers: (chat, users) => dispatch(updateGroupMembers(chat, users)),\n});\n\nclass ChatInfoPanel extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditMode: false,\n            title: '',\n            deleteGroupDialogOpen: false,\n            selectedUser: null,\n            userInfoOpen: false,\n            deleteContactDialogOpen: false,\n            leaveGroupDialogOpen: false,\n            editPhotoDialogOpen: false,\n            manageMembersDialogOpen: false,\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            },\n        };\n\n        this.hanldeToggleEditTitle = this.hanldeToggleEditTitle.bind(this);\n        this.handleUpdateTitle = this.handleUpdateTitle.bind(this);\n        this.handleRemoveGroup = this.handleRemoveGroup.bind(this);\n        this.handleLeaveGroup = this.handleLeaveGroup.bind(this);\n        this.handleShowSnackbar = this.handleShowSnackbar.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.setSocketListeners();\n    }\n\n    setSocketListeners(){\n        this.props.socket.on('invitation_sent', data => {\n            if(this.props.currentUser === data.sender) {\n                this.handleShowSnackbar('success', data.message);\n                this.setOpen('user-info', false);\n            }\n        });\n        this.props.socket.on('invitation_error', data => {\n            if(this.props.currentUser === data.sender){\n                this.handleShowSnackbar('error', data.error);\n                this.setOpen('user-info', false);\n            }\n        });\n        this.props.socket.on('group_left', data => {\n            if(this.props.currentUser === data.user){\n                this.handleShowSnackbar('success', data.message);\n                this.setOpen('leave', false);\n                this.props.selectChat(null);\n            }\n            if(data.users.includes(this.props.currentUser)){\n                this.props.getGroups(this.props.token);\n            }\n        });\n        this.props.socket.on('leave_group_error', data => {\n            if(this.props.currentUser === data.user){\n                this.handleShowSnackbar('error', data.error);\n                this.setOpen('leave', false);\n            }\n        });\n    }\n\n    handleShowSnackbar(type, data){\n        this.setState({\n            snackbar: {\n                type: type,\n                message: data,\n                open: true,\n            }\n        });\n    }\n\n    handleSnackbarClose = (e, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            }\n        });\n    };\n\n    hanldeToggleEditTitle = () => this.setState({\n        title: this.props.selectedChat.title,\n        isEditMode: !this.state.isEditMode\n    });\n\n    handleUpdateTitle(){\n        this.props.updateGroupTitle(this.props.selectedChat.chat_id, this.state.title);\n        this.hanldeToggleEditTitle();\n    }\n\n    handleRemoveGroup = () => {\n        this.props.handleRemoveGroup(this.props.selectedChat.chat_id);\n        this.setOpen('delete', false);\n    };\n\n    handleLeaveGroup = () => {\n        const data = {\n            'chat_id': this.props.selectedChat.chat_id,\n            'user': this.props.currentUser,\n        };\n        this.props.socket.emit('leave_group', data);\n    };\n\n    handleSendInvitation(receiver){\n        const invitation = {\n            'sender': this.props.currentUser,\n            'receiver': receiver,\n            'message': ''\n        };\n\n        this.props.socket.emit('send_invitation', invitation);\n    }\n\n    setOpen = (type, open) => {\n        switch (type) {\n            case 'delete':\n                this.setState({deleteGroupDialogOpen: open});\n                break;\n            case 'leave':\n                this.setState({leaveGroupDialogOpen: open});\n                break;\n            case 'photo':\n                this.setState({editPhotoDialogOpen: open});\n                break;\n            case 'user-info':\n                this.setState({userInfoOpen: open});\n                break;\n            case 'contact':\n                this.setState({deleteContactDialogOpen: open});\n                break;\n            case 'manage-members':\n                this.setState({manageMembersDialogOpen: open});\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleUpdatePhoto = (data) => {\n        this.props.updateGroupPhoto(this.props.token, data, this.props.selectedChat.chat_id);\n    };\n\n    handleSaveGroupMembers = (users) => {\n\n        let users_login = [];\n\n        for(let i = 0; i < users.length; i++){\n            users_login.push(users[i].login);\n        }\n        this.props.updateGroupMembers(this.props.selectedChat.chat_id, {users: users_login});\n        this.setOpen('manage-members', false);\n\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        if(this.props.selectedChat){\n            let users = [...this.props.selectedChat.users];\n\n            return (\n                <Drawer\n                    variant={this.props.width !== 'lg' ? 'temporary' : 'persistent'}\n                    anchor=\"right\"\n                    open={this.props.open}\n                    onClose={() => this.props.handleToggle(false)}\n                    className={classes.drawer}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.chatInfo}>\n                        {\n                            this.props.selectedChat.type === 'group' ? <div className={classes.container}>\n                                <div className={classes.avatarContainer}>\n                                    <Tooltip title=\"Click to add new photo\">\n                                        {\n                                            this.props.selectedChat.photo ? <Avatar\n                                                    className={classes.avatar}\n                                                    src={API_PATH + this.props.selectedChat.photo}\n                                                    onClick={() => this.setOpen('photo', true)}\n                                                /> :\n                                                <Avatar className={classes.avatar} onClick={() => this.setOpen('photo', true)}>\n                                                    {this.props.selectedChat.title.charAt(0).toUpperCase()}\n                                                </Avatar>\n                                        }\n                                    </Tooltip>\n                                </div>\n                                {\n                                    !this.state.isEditMode ? <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\n                                        {this.props.selectedChat.title}\n                                        <IconButton className={classes.editBtn} onClick={this.hanldeToggleEditTitle}><EditIcon/></IconButton>\n                                    </Typography> : <div className={classes.titleEditField}>\n                                        <TextField\n                                            value={this.state.title}\n                                            onChange={(e) => this.setState({title: e.target.value})}\n                                            margin='dense'\n                                            id='group-title-input'\n                                            label='Title'\n                                            fullWidth\n                                            autoComplete=\"off\"\n                                        />\n                                        <IconButton\n                                            onClick={this.handleUpdateTitle}\n                                            color=\"primary\"\n                                            className={classes.iconBtn}\n                                        >\n                                            <DoneIcon/>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={this.hanldeToggleEditTitle}\n                                            className={classes.iconBtn}\n                                        >\n                                            <CloseIcon/>\n                                        </IconButton>\n                                    </div>\n                                }\n\n                                <Typography variant=\"h6\" component=\"h6\" className={classes.listLabel}>\n                                    Members:\n                                    <IconButton onClick={() => this.setOpen('manage-members', true)} className={classes.editBtn}><ContactsIcon/></IconButton>\n                                </Typography>\n                                <List className={classes.userList}>\n                                    {\n                                        users.sort((userA, userB) =>\n                                            userA.name < userB.name ? -1 : 1).map((user, index) => <AccountPreview\n                                            key={index}\n                                            user={user}\n                                            handleClick={() => {\n                                                if(user.login !== this.props.currentUser){\n                                                    this.setState({selectedUser: user});\n                                                    this.setOpen('user-info', true);\n                                                }\n                                            }}\n                                            groupOwner={this.props.selectedChat.owner}\n                                        />)\n                                    }\n                                </List>\n                                <Divider />\n                                {\n                                    users.length > 1 ? <Button\n                                        className={classes.deleteBtn}\n                                        onClick={() => this.setOpen('leave', true)}\n                                    >\n                                        Leave Group\n                                    </Button> : null\n                                }\n                                {\n                                    this.props.currentUser === this.props.selectedChat.owner ? <Button\n                                        className={classes.deleteBtn}\n                                        onClick={() => this.setOpen('delete', true)}\n                                    >\n                                        Delete Group\n                                    </Button> : null\n                                }\n                                {\n                                    this.state.selectedUser ? <UserInfoDialog\n                                        open={this.state.userInfoOpen}\n                                        setOpen={this.setOpen}\n                                        data={this.state.selectedUser}\n                                        contacts={this.props.contacts}\n                                        handleGoToChat={() => this.props.handleGoToChat(this.state.selectedUser.login)}\n                                        handleRemoveContact={() => this.setOpen('contact', true)}\n                                        handleAddContact={() => this.handleSendInvitation(this.state.selectedUser.login)}\n                                    /> : null\n                                }\n                                <DeleteContactDialog\n                                    open={this.state.deleteContactDialogOpen}\n                                    setOpen={this.setOpen}\n                                    handleRemoveContact={() => {\n                                        this.props.handleRemoveContact(this.state.selectedUser);\n                                        this.setOpen('contact', false);\n                                        this.setOpen('user-info', false);\n                                    }}\n                                />\n                            </div> : null\n                        }\n                    </div>\n                    <DeleteGroupDialog\n                        open={this.state.deleteGroupDialogOpen}\n                        setOpen={this.setOpen}\n                        handleRemoveGroup={this.handleRemoveGroup}\n                    />\n                    <LeaveGroupDialog\n                        open={this.state.leaveGroupDialogOpen}\n                        setOpen={this.setOpen}\n                        handleLeaveGroup={this.handleLeaveGroup}\n                        isOwner={this.props.currentUser === this.props.selectedChat.owner}\n                    />\n                    <EditPhotoDialog\n                        open={this.state.editPhotoDialogOpen}\n                        setOpen={(open) => this.setOpen('photo', open)}\n                        handleUpdatePhoto={this.handleUpdatePhoto}\n                    />\n                    <ManageMembersDialog\n                        open={this.state.manageMembersDialogOpen}\n                        setOpen={this.setOpen}\n                        userList={users}\n                        owner={this.props.selectedChat.owner}\n                        currentUser={this.props.currentUser}\n                        contactList={this.props.contacts}\n                        handleSaveGroupMembers={this.handleSaveGroupMembers}\n                    />\n                    <Snackbar\n                        open={this.state.snackbar.open}\n                        autoHideDuration={6000}\n                        onClose={this.handleSnackbarClose}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                    >\n                        <Alert\n                            onClose={this.handleSnackbarClose}\n                            severity={this.state.snackbar.type}\n                        >{this.state.snackbar.message}</Alert>\n                    </Snackbar>\n                </Drawer>\n            );\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(withStyles(styles)(ChatInfoPanel)));","import React from 'react';\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport ChatView from '../../components/chatview/ChatView';\nimport styles from './styles';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport Typography from '@material-ui/core/Typography';\nimport MessageBox from \"../../components/messagebox/MessageBox\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport LogOutDialog from \"../../dialogs/LogOutDialog\";\nimport AccountDialog from \"../../dialogs/AccountDialog\";\nimport {fetchUserChats, readChat, fetchUserGroups, addChat} from \"../../actions/chats\";\nimport { fetchProtectedData } from \"../../actions/data\";\nimport connect from \"react-redux/es/connect/connect\";\nimport io from 'socket.io-client'\nimport AddChatDialog from \"../../dialogs/AddChatDialog\";\nimport ContactsDialog from \"../../dialogs/ContactsDialog\";\nimport ChatInfoBar from \"../../components/ChatInfoBar\";\nimport ChatInfoPanel from \"../../components/ChatInfoPanel\";\nimport {fetchContactList} from \"../../actions/contacts\";\nimport {API_PATH} from \"../../utils/constants\";\n\nconst mapStateToProps = (state) => ({\n    isFetching: state.chats.isFetching,\n    loaded: state.chats.loaded,\n    chats: state.chats.chats,\n    groups: state.chats.groups,\n    userLogin: state.auth.login,\n    userData: state.data.data,\n    token: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getChats: (token, selectChat, chat, isFetching) => dispatch(fetchUserChats(token, selectChat, chat, isFetching)),\n    readChat: (chat, type) => dispatch(readChat(chat, type)),\n    fetchContactList: (token) => dispatch(fetchContactList(token)),\n    getGroups: (token, isFetching) => dispatch(fetchUserGroups(token, isFetching)),\n    getUserData: (token) => dispatch(fetchProtectedData(token)),\n    addChat: (userLogin, openModal, selectChat) => dispatch(addChat(userLogin, openModal, selectChat)),\n});\n\nexport const socket = io(API_PATH);\n\nclass Dashboard extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            selectedChat: null,\n            chatInfoOpen: false,\n            logOutDialogOpen: false,\n            accountDialogOpen: false,\n            addChatDialogOpen: false,\n            contactsDialogOpen: false,\n            anchorMenu: null,\n            loadingMessages: [],\n        };\n\n        this.setModalOpen = this.setModalOpen.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.selectChat = this.selectChat.bind(this);\n        this.readMessage = this.readMessage.bind(this);\n        this.removeMessage = this.removeMessage.bind(this);\n        this.getSelectedChatUserList = this.getSelectedChatUserList.bind(this);\n        this.handleRemoveChat = this.handleRemoveChat.bind(this);\n        this.handleRemoveContact = this.handleRemoveContact.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.props.getChats(this.props.token, null, null, true);\n        this.props.getGroups(this.props.token, true);\n        this.props.getUserData(this.props.token);\n        this.setSocketListeners();\n\n        window.addEventListener('online', () => this.changeUserStatus('online'));\n        window.addEventListener('offline', () => this.changeUserStatus('offline'));\n        window.addEventListener('beforeunload', () => {\n            this.changeUserStatus('offline')\n        });\n        window.addEventListener('unload', () => {\n            this.changeUserStatus('offline')\n        });\n\n        this.changeUserStatus('online');\n    }\n\n    componentWillUnmount(){\n        this.changeUserStatus('offline');\n    }\n\n    setSocketListeners(){\n        socket.on('message_sent', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                if(data.chat === this.state.selectedChat && data.sender !== this.props.userLogin){\n                    if(this.props.chats.find(_chat => _chat.chat_id === data.chat)){\n                        this.readMessage(data.chat).then(() => {\n                            this.props.getChats(this.props.token);\n                            this.props.getGroups(this.props.token);\n                        });\n                    }\n                    else{\n                        this.readMessage(data.chat, 'group').then(() => {\n                            this.props.getChats(this.props.token);\n                            this.props.getGroups(this.props.token);\n                        });\n                    }\n                }\n                else{\n                    this.props.getChats(this.props.token);\n                    this.props.getGroups(this.props.token);\n                }\n            }\n        });\n        socket.on('chats_loaded', () => {\n            this.setState({\n                loadingMessages: [],\n            });\n        });\n        socket.on('message_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getChats(this.props.token);\n                this.props.getGroups(this.props.token);\n            }\n        });\n        socket.on('chat_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getChats(this.props.token);\n                if(this.state.selectedChat === data.chat) {\n                    this.selectChat(null);\n                }\n            }\n        });\n        socket.on('contact_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getChats(this.props.token);\n                this.props.fetchContactList(this.props.token);\n                if(this.state.selectedChat === data.chat) {\n                    this.selectChat(null);\n                }\n            }\n        });\n        socket.on('group_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getGroups(this.props.token);\n                if(this.state.selectedChat === data.group) {\n                    this.selectChat(null);\n                }\n            }\n        });\n    }\n\n    changeUserStatus(status){\n        socket.emit('change_user_status', {\n            user: this.props.userLogin,\n            status\n        });\n    }\n\n    selectChat(chatId, chatList){\n\n        const chat = chatList.find(_chat => _chat.chat_id === chatId);\n\n        if(chat.type === 'chat'){\n            if(!chat.receiverHasRead && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].sender.login !== this.props.userLogin){\n                this.readMessage(chatId, 'chat')\n                    .then(() => this.setState({\n                        selectedChat: chatId,\n                        chatInfoOpen: false,\n                    }));\n            }\n            else {\n                this.setState({\n                    selectedChat: chatId,\n                    chatInfoOpen: false,\n                });\n            }\n        }\n        else{\n            const receiverHasRead = chat.receivers.find(_usr => _usr.login === this.props.userLogin);\n            if(receiverHasRead && chat.messages[chat.messages.length - 1].sender.login !== this.props.userLogin) {\n                this.readMessage(chatId, 'group')\n                    .then(() => this.setState({\n                        selectedChat: chatId,\n                        chatInfoOpen: false,\n                    }));\n            }\n            else{\n                this.setState({\n                    selectedChat: chatId,\n                    chatInfoOpen: false,\n                });\n            }\n        }\n    }\n\n    newChatBtnClicked = () => this.setModalOpen('add-chat', true);\n\n    chatInfoToggle = (state) => this.setState({\n        chatInfoOpen: state\n    });\n\n    async readMessage(chatId, type){\n        await this.props.readChat(chatId, type);\n    }\n\n    sendMessage(msg, type){\n\n        const message = {\n            'type': type,\n            'sender': this.props.userLogin,\n            'chat': this.state.selectedChat,\n            'message': msg\n        };\n\n        this.setState({\n            loadingMessages: [...this.state.loadingMessages, {\n                ...message,\n                'sender': this.props.userData,\n                timestamp: (+ new Date()).toString(),\n                loading: true,\n            }],\n        });\n\n        socket.emit('send_message', message);\n\n    }\n\n    removeMessage(msg){\n\n        const chat_list = [...this.props.groups, ...this.props.chats];\n        const chat = chat_list.find(_chat => _chat.chat_id === this.state.selectedChat);\n\n        socket.emit('remove_message', {\n            message: msg,\n            chat: chat.chat_id,\n            type: chat.type,\n        });\n    }\n\n    handleRemoveChat(){\n        socket.emit('remove_chat', {\n            'chat_id': this.state.selectedChat\n        });\n    }\n\n    handleRemoveContact(user){\n        if(user){\n            const chat = this.props.chats.find(_chat => _chat.users.find(_usr => _usr.login === user.login));\n            console.log(user);\n            console.log(chat);\n            let data = {};\n            if(chat){\n                data = {\n                    'chat': chat.chat_id,\n                    'contact': user.login,\n                    'user': this.props.userLogin\n                };\n            }\n            else{\n                data = {\n                    'chat': null,\n                    'contact': user.login,\n                    'user': this.props.userLogin\n                };\n            }\n            socket.emit('remove_contact', data);\n        }\n        else {\n            const chat = this.props.chats.find(_chat => _chat.chat_id === this.state.selectedChat);\n            const contact = chat.users.find(_usr => _usr.login !== this.props.userLogin).login;\n\n            const data = {\n                'chat': this.state.selectedChat,\n                'contact': contact,\n                'user': this.props.userLogin\n            };\n\n            socket.emit('remove_contact', data);\n        }\n    }\n\n    handleRemoveGroup(id){\n        socket.emit('remove_group', {\n            'chat_id': id\n        });\n    }\n\n    setModalOpen(modal, state){\n        switch (modal) {\n            case 'logout':\n                this.setState({logOutDialogOpen: state});\n                break;\n            case 'account':\n                this.setState({accountDialogOpen: state});\n                break;\n            case 'add-chat':\n                this.setState({addChatDialogOpen: state});\n                break;\n            case 'contacts':\n                this.setState({contactsDialogOpen: state});\n                break;\n            default:\n                return;\n        }\n    }\n\n    getSelectedChatUserList(chatList){\n        let selectedChat = chatList.filter(_chat => _chat.chat_id === this.state.selectedChat)[0];\n        if(selectedChat)\n            return selectedChat.users.filter(_user => _user.login !== this.props.userLogin);\n        return [];\n    }\n\n    handleChatInfoToggle = () => this.setState({chatInfoOpen: !this.state.chatInfoOpen});\n\n    handleOpenAccountMenu = (e) => {\n        this.setState({anchorMenu: e.currentTarget});\n    };\n    handleCloseAccountMenu = () => {\n        this.setState({anchorMenu: null});\n    };\n\n    handleGoToChat = (login, chatList) => {\n        let chat = this.props.chats.find(_chat => _chat.users.find(_usr => _usr.login !== this.props.userLogin).login === login);\n        if(chat){\n            console.log(chatList);\n            this.selectChat(chat.chat_id, chatList);\n        }\n        else {\n            this.props.addChat(login, null, this.selectChat);\n        }\n    };\n\n    render() {\n\n        const { classes } = this.props;\n\n        let chat_list = [];\n        if(this.props.chats && this.props.groups)\n            chat_list = [...this.props.groups, ...this.props.chats];\n\n        return (\n            <div className={'dashboard ' + classes.dashboard}>\n                <Sidebar\n                    history={this.props.history}\n                    newChatBtnHandle={this.newChatBtnClicked}\n                    selectChatHandle={this.selectChat}\n                    selectedChatIndex={this.state.selectedChat}\n                    logOutHandleClick={() => this.setModalOpen('logout', true)}\n                    accountHandleClick={() => this.setModalOpen('account', true)}\n                    contactsHandleClick={() => this.setModalOpen('contacts', true)}\n                    chatList={chat_list}\n                    user={this.props.userData}\n                />\n\n                    {\n                        this.state.selectedChat !== null ? <div className={this.state.chatInfoOpen ? classes.contentShift : classes.content}>\n                            <div className={classes.chatViewContainer}>\n                                <ChatInfoBar\n                                    getSelectedChatUserList={this.getSelectedChatUserList}\n                                    chatList={chat_list}\n                                    selectedChat={this.state.selectedChat}\n                                    handleChatInfoOpen={this.handleChatInfoToggle}\n                                    handleOpenMenu={this.handleOpenAccountMenu}\n                                    handleCloseMenu={this.handleCloseAccountMenu}\n                                    handleRemoveChat={this.handleRemoveChat}\n                                    handleRemoveContact={this.handleRemoveContact}\n                                    anchorMenu={this.state.anchorMenu}\n                                />\n                                <ChatView\n                                    chat={chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0]}\n                                    messages={[...chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0].messages, ...this.state.loadingMessages]}\n                                    handleRemoveMessage={this.removeMessage}\n                                />\n                                {\n                                    chat_list.find(_chat => _chat.chat_id === this.state.selectedChat) ? <MessageBox\n                                        selectedChat={this.state.selectedChat}\n                                        selectedChatType={chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0].type}\n                                        sendMessageHandle={this.sendMessage}\n                                    /> : null\n                                }\n                            </div>\n                        </div> :\n                        <div className={classes.defaultComponent}>\n                            <div className=\"container\">\n                                <QuestionAnswerIcon className={classes.bigIcon}/>\n                                <Typography element='p' className={classes.text}>Choose a chat to start conversation.</Typography>\n                            </div>\n                        </div>\n                    }\n\n                <ChatInfoPanel\n                    open={this.state.chatInfoOpen}\n                    handleToggle={this.chatInfoToggle}\n                    selectedChat={chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0]}\n                    userLogin={this.props.userLogin}\n                    handleSelectChat={this.selectChat}\n                    handleRemoveGroup={this.handleRemoveGroup}\n                    handleGoToChat={(login) => this.handleGoToChat(login, chat_list)}\n                    handleRemoveContact={this.handleRemoveContact}\n                    socket={socket}\n                    selectChat={this.selectChat}\n                />\n                <LogOutDialog open={this.state.logOutDialogOpen} setOpen={this.setModalOpen}/>\n                {this.props.userData ?\n                    <AccountDialog\n                        open={this.state.accountDialogOpen}\n                        setOpen={this.setModalOpen}\n                    /> : null}\n                <AddChatDialog\n                    open={this.state.addChatDialogOpen}\n                    setOpen={this.setModalOpen}\n                />\n                <ContactsDialog\n                    open={this.state.contactsDialogOpen}\n                    setOpen={this.setModalOpen}\n                    socket={socket}\n                    handleSelectChat={this.selectChat}\n                    handleGoToChat={(login) => this.handleGoToChat(login, chat_list)}\n                    handleRemoveContact={this.handleRemoveContact}\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard));","import { parseJSON } from '../utils/misc';\nimport {\n    get_chats,\n    add_chat,\n    add_group,\n    read_chat,\n    get_groups,\n    update_group_title,\n    delete_group, delete_chat, update_group_photo, update_group_members\n} from '../utils/http_functions';\nimport {logoutAndRedirect} from './auth';\nimport {\n    RECEIVE_USER_CHATS,\n    FETCH_USER_CHATS_REQUEST,\n    RECEIVE_USER_GROUPS,\n    FETCH_USER_GROUPS_REQUEST,\n    ADD_CHAT_REQUEST,\n    ADD_CHAT_SUCCESS,\n    ADD_CHAT_FAILURE,\n    ADD_CHAT_CLOSE,\n    ADD_GROUP_REQUEST,\n    ADD_GROUP_SUCCESS,\n    ADD_GROUP_FAILURE,\n    READ_CHAT_REQUEST,\n    READ_CHAT,\n    UPDATE_GROUP_TITLE_REQUEST,\n    UPDATE_GROUP_TITLE_SUCCESS,\n    UPDATE_GROUP_TITLE_FAILURE,\n    DELETE_GROUP_REQUEST,\n    DELETE_GROUP_SUCCESS,\n    DELETE_GROUP_FAILURE,\n    DELETE_CHAT_REQUEST,\n    DELETE_CHAT_SUCCESS,\n    DELETE_CHAT_FAILURE,\n    UPDATE_GROUP_PHOTO,\n    UPDATE_GROUP_PHOTO_FAILURE,\n    UPDATE_GROUP_PHOTO_REQUEST,\n    UPDATE_GROUP_MEMBERS_REQUEST,\n    UPDATE_GROUP_MEMBERS_FAILURE,\n    UPDATE_GROUP_MEMBERS_SUCCESS,\n    TOGGLE_SIDEBAR,\n} from '../utils/constants';\nimport {socket} from \"../pages/dashboard/Dashboard\";\n\nexport function receiveUserChats(data, selectChat) {\n    socket.emit('chats_loading');\n    return {\n        type: RECEIVE_USER_CHATS,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchUserChatsRequest(isFetching) {\n    return {\n        type: FETCH_USER_CHATS_REQUEST,\n        payload: {\n            isFetching: !!isFetching,\n        }\n    };\n}\n\nexport function fetchUserChats(token, selectChat, chat_id, isFetching) {\n    return (dispatch) => {\n        dispatch(fetchUserChatsRequest(isFetching));\n        get_chats(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUserChats(response));\n                if(selectChat && chat_id) {\n                    selectChat(chat_id);\n                }\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            });\n    };\n}\n\nexport function addChatRequest() {\n    return {\n        type: ADD_CHAT_REQUEST\n    }\n}\n\nexport function addChatSuccess() {\n    return {\n        type: ADD_CHAT_SUCCESS,\n        payload: {},\n    };\n}\n\nexport function addChatFailure(error) {\n    return {\n        type: ADD_CHAT_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function addChatClose() {\n    return {\n        type: ADD_CHAT_CLOSE,\n        payload: {\n            addChatError: null\n        },\n    };\n}\n\nexport function addChat(userLogin, openModal, selectChat) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(addChatRequest);\n        return add_chat(token, userLogin)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(addChatSuccess);\n                dispatch(fetchUserChats(token, selectChat, response.chat_id));\n                dispatch(fetchUserGroups(token));\n                if(openModal) {\n                    openModal('add-chat', false);\n                }\n            })\n            .catch(error => {\n                dispatch(addChatFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function deleteChatRequest() {\n    return {\n        type: DELETE_CHAT_REQUEST\n    }\n}\n\nexport function deleteChatSuccess(message) {\n    return {\n        type: DELETE_CHAT_SUCCESS,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteChatFailure(message) {\n    return {\n        type: DELETE_CHAT_FAILURE,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteChat(chatId) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(deleteChatRequest());\n        return delete_chat(token, chatId)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(deleteChatSuccess(response.message));\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(deleteChatFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function addGroupRequest() {\n    return {\n        type: ADD_GROUP_REQUEST\n    }\n}\n\nexport function addGroupSuccess() {\n    return {\n        type: ADD_GROUP_SUCCESS,\n    };\n}\n\nexport function addGroupFailure(error) {\n    return {\n        type: ADD_GROUP_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function addGroup(title, users, openModal) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(addGroupRequest);\n        return add_group(token, title, users)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(addGroupSuccess);\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n                openModal('add-chat', false);\n            })\n            .catch(error => {\n                dispatch(addGroupFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function updateGroupTitleRequest() {\n    return {\n        type: UPDATE_GROUP_TITLE_REQUEST\n    }\n}\n\nexport function updateGroupTitleSuccess() {\n    return {\n        type: UPDATE_GROUP_TITLE_SUCCESS,\n    };\n}\n\nexport function updateGroupTitleFailure(error) {\n    return {\n        type: UPDATE_GROUP_TITLE_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function updateGroupTitle(id, title) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(updateGroupTitleRequest());\n        return update_group_title(token, id, title)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(updateGroupTitleSuccess());\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(updateGroupTitleFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function updateGroupMembersRequest() {\n    return {\n        type: UPDATE_GROUP_MEMBERS_REQUEST\n    }\n}\n\nexport function updateGroupMembersSuccess() {\n    return {\n        type: UPDATE_GROUP_MEMBERS_SUCCESS,\n    };\n}\n\nexport function updateGroupMembersFailure(error) {\n    return {\n        type: UPDATE_GROUP_MEMBERS_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function updateGroupMembers(id, users) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(updateGroupMembersRequest());\n        return update_group_members(token, users, id)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(updateGroupMembersSuccess());\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(updateGroupMembersFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function deleteGroupRequest() {\n    return {\n        type: DELETE_GROUP_REQUEST\n    }\n}\n\nexport function deleteGroupSuccess(message) {\n    return {\n        type: DELETE_GROUP_SUCCESS,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteGroupFailure(message) {\n    return {\n        type: DELETE_GROUP_FAILURE,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteGroup(groupId) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(deleteGroupRequest());\n        return delete_group(token, groupId)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(deleteGroupSuccess(response.message));\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(deleteGroupFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function readChatRequest() {\n    return {\n        type: READ_CHAT_REQUEST,\n        payload: {},\n    };\n}\n\nexport function readChatSuccess() {\n    return {\n        type: READ_CHAT,\n        payload: {},\n    };\n}\n\nexport function readChat(chat, type) {\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(readChatRequest);\n        return read_chat(token, chat, type)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(readChatSuccess);\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            })\n    }\n}\n\nexport function receiveUserGroups(data) {\n    socket.emit('chats_loading');\n    return {\n        type: RECEIVE_USER_GROUPS,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchUserGroupsRequest(isFetching) {\n    return {\n        type: FETCH_USER_GROUPS_REQUEST,\n        payload: {\n            isFetching: !!isFetching\n        }\n    };\n}\n\nexport function fetchUserGroups(token, isFetching) {\n    return (dispatch) => {\n        dispatch(fetchUserGroupsRequest(isFetching));\n        get_groups(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUserGroups(response));\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            });\n    };\n}\n\nexport function receiveUpdatedPhoto(data) {\n    return {\n        type: UPDATE_GROUP_PHOTO,\n        payload: {\n            updatePhotoMessage: data.message,\n        },\n    };\n}\n\nexport function updateGroupPhotoFailure(data) {\n    return {\n        type: UPDATE_GROUP_PHOTO_FAILURE,\n        payload: {\n            updatePhotoMessage: data.message\n        },\n    };\n}\n\nexport function updateGroupPhotoRequest() {\n    return {\n        type: UPDATE_GROUP_PHOTO_REQUEST,\n    };\n}\n\nexport function updateGroupPhoto(token, data, chat) {\n    return (dispatch) => {\n        dispatch(updateGroupPhotoRequest());\n        update_group_photo(token, data, chat)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUpdatedPhoto(response));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                if (error.response.status === 403) {\n                    dispatch(logoutAndRedirect(error));\n                }\n                else{\n                    dispatch(updateGroupPhotoFailure(error.response.data));\n                }\n            });\n    };\n}\n\nexport function toggleSidebar(state) {\n    return {\n        type: TOGGLE_SIDEBAR,\n        payload: {\n            sidebarOpen: state\n        },\n    };\n}\n\nexport function handleToggleSidebar(state) {\n    return (dispatch) => {\n        dispatch(toggleSidebar(state));\n    };\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport { connect } from 'react-redux';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport IconButton from '@material-ui/core/IconButton';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions/chats\";\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    container: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    logo: {\n        maxWidth: 48,\n        marginRight: 10\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        [theme.breakpoints.down('md')]: {\n            minHeight: 48,\n        },\n    },\n    button: {\n        paddingRight: 0,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    icon:{\n        color: 'white',\n    }\n}));\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.data.isFetching,\n        isAuthenticating: state.auth.isAuthenticating,\n        isAuthenticated: state.auth.isAuthenticated,\n        isRegistering: state.auth.isRegistering,\n        isChatsFetching: state.chats.isFetching,\n        isAddingChat: state.chats.isAddingChat,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch);\n\nfunction TopBar(props) {\n    const classes = useStyles();\n\n    const isDataLoading = () => props.isFetching || props.isAuthenticating ||\n        props.isRegistering || props.isChatsFetching || props.isAddingChat;\n\n    return (\n        <AppBar position=\"fixed\" className={classes.header}>\n            <div className={classes.container}>\n                <Toolbar className={classes.toolbar}>\n                    <img src='/static/logo.png' alt='EmotionChat' className={classes.logo}/>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        EmotionChat\n                    </Typography>\n                    {\n                        props.isAuthenticated ? <IconButton\n                            onClick={() => props.handleToggleSidebar(true)}\n                            className={classes.button}\n                        >\n                            <ChatIcon className={classes.icon}/>\n                        </IconButton> : null\n                    }\n                </Toolbar>\n            </div>\n            {\n                isDataLoading() ? <LinearProgress color=\"secondary\"/> : null\n            }\n        </AppBar>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar)","const styles = theme => ({\n    registerPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto',\n            minHeight: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n    },\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(500 + theme.spacing(3) * 2)]: {\n            width: 500,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            margin: 0,\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(6),\n            borderRadius: 0,\n            flexGrow: 1,\n            justifyContent: 'center',\n        },\n    },\n    form: {\n        width: '100%',\n    },\n    input: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        }\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    hasAccountHeader: {\n        width: '100%'\n    },\n    logInLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        fontWeight: 'bolder'\n    },\n    alert: {\n        width: '100%',\n        marginTop: '20px',\n    },\n    avatar: {\n        width: '100px',\n        height: '100px',\n        fontSize: '2.25rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n    },\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '15px 0',\n    },\n    avatarContainer: {\n      marginTop: '20px',\n    },\n    welcomeText: {\n        fontWeight: 400\n    },\n});\n\nexport default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { fetchUnauthorizedUserData, cleanUnauthorizedUserData } from '../../actions/data';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/auth';\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport {API_PATH} from \"../../utils/constants\";\n\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticating: state.auth.isAuthenticating,\n        statusText: state.auth.statusText,\n        userData: state.data.unauthorizedUser,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loginUser: (login, password) => dispatch(loginUser(login, password)),\n        getUserData: (login) => dispatch(fetchUnauthorizedUserData(login)),\n        cleanUserData: () => dispatch(cleanUnauthorizedUserData())\n    }\n}\n\nclass Login extends React.Component {\n\n    constructor() {\n        super();\n        const redirectRoute = '/login';\n        this.state = {\n            login: '',\n            password: '',\n            signinError: '',\n            redirectTo: redirectRoute,\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    login(e) {\n        e.preventDefault();\n        this.props.loginUser(this.state.login, this.state.password);\n        this.props.cleanUserData();\n    }\n\n    getData(){\n        if(this.state.login.length >= 5){\n            this.props.getUserData(this.state.login);\n        }\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.registerPage}>\n                <main className={classes.main}>\n                    <CssBaseline/>\n                    <Paper className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign In\n                        </Typography>\n                        {\n                            this.state.signinError || this.props.statusText ?\n                                <Alert severity=\"info\" className={classes.alert}>\n                                    {this.state.signinError || this.props.statusText}\n                                </Alert> :\n                                null\n                        }\n                        {\n                            this.props.userData ?  <center className={classes.avatarContainer}>\n                                {\n                                    this.props.userData.profile_image ? <Avatar\n                                            className={classes.avatar}\n                                            src={API_PATH + this.props.userData.profile_image}\n                                        /> :\n                                        <Avatar className={classes.avatar}>\n                                            {\n                                                (this.props.userData.name ? this.props.userData.name.charAt(0).toUpperCase() : '') + '' +\n                                                (this.props.userData.surname ? this.props.userData.surname.charAt(0).toUpperCase() : '')\n                                            }\n                                        </Avatar>\n                                }\n                                <Typography component=\"h2\" variant=\"h6\" className={classes.welcomeText}>\n                                    Welcome, {this.props.userData.name}\n                                </Typography>\n                            </center> : null\n                        }\n                        <form onSubmit={(e) => this.login(e)} className={classes.form}>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signin-email-input'>Login</InputLabel>\n                                <Input\n                                    autoFocus\n                                    className={classes.input}\n                                    onChange={(e) => this.userTyping('login', e)}\n                                    onBlur={this.getData}\n                                    id='signin-login-input'\n                                />\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signin-password-input'>Password</InputLabel>\n                                <Input type=\"password\" className={classes.input} onChange={(e) => this.userTyping('password', e)} id='signin-password-input'/>\n                            </FormControl>\n                            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n                        </form>\n                        <h5 className={classes.hasAccountHeader}>Don't Have An Account? <Link className={classes.logInLink} to='/register'>Sign Up</Link></h5>\n                    </Paper>\n                </main>\n            </div>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'login':\n                this.setState({ login: event.target.value });\n                this.props.cleanUserData();\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            default:\n                break;\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Login));","const styles = theme => ({\n    registerPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto',\n            minHeight: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n    },\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(500 + theme.spacing(3) * 2)]: {\n            width: 500,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            margin: 0,\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(6),\n            borderRadius: 0,\n            flexGrow: 1,\n            justifyContent: 'center',\n        },\n    },\n    form: {\n        width: '100%',\n    },\n    input: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        }\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    hasAccountHeader: {\n        width: '100%'\n    },\n    logInLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        fontWeight: 'bolder'\n    },\n    alert: {\n        width: '100%',\n        marginTop: '20px',\n    }\n});\n\nexport default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\n\nimport {bindActionCreators} from \"redux\";\nimport { connect } from 'react-redux';\nimport * as actionCreators from \"../../actions/auth\";\n\n\nfunction mapStateToProps(state) {\n    return {\n        isRegistering: state.auth.isRegistering,\n        registerStatusText: state.auth.registerStatusText,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass Register extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: null,\n            surname: null,\n            login: null,\n            password: null,\n            passwordConfirmation: null,\n            signupError: ''\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.registerPage}>\n                <main className={classes.main}>\n                    <CssBaseline/>\n                    <Paper className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign Up\n                        </Typography>\n                        {\n                            this.state.signupError || this.props.registerStatusText ?\n                                <Alert severity=\"info\" className={classes.alert}>\n                                    {this.state.signupError || this.props.registerStatusText}\n                                </Alert> :\n                                null\n                        }\n                        <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-email-input'>Name</InputLabel>\n                                <Input className={classes.input} autoFocus onChange={(e) => this.userTyping('name', e)} id='signup-name-input'/>\n                            </FormControl>\n                            <FormControl fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-email-input'>Surname(Optional)</InputLabel>\n                                <Input className={classes.input} onChange={(e) => this.userTyping('surname', e)} id='signup-surname-input'/>\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-email-input'>Login</InputLabel>\n                                <Input className={classes.input} onChange={(e) => this.userTyping('login', e)} id='signup-login-input'/>\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-password-input'>Password</InputLabel>\n                                <Input type=\"password\" className={classes.input} onChange={(e) => this.userTyping('password', e)} id='signup-password-input'/>\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Password</InputLabel>\n                                <Input type=\"password\" className={classes.input} onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'/>\n                            </FormControl>\n                            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n                        </form>\n                        <h5 className={classes.hasAccountHeader}>Already Have An Account? <Link className={classes.logInLink} to='/login'>Log In</Link></h5>\n                    </Paper>\n                </main>\n            </div>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'name':\n                this.setState({ name: event.target.value });\n                break;\n            case 'surname':\n                this.setState({ surname: event.target.value });\n                break;\n            case 'login':\n                this.setState({ login: event.target.value });\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            case 'passwordConfirmation':\n                this.setState({ passwordConfirmation: event.target.value });\n                break;\n            default:\n                break;\n        }\n    };\n\n    formIsValid = () => this.state.password === this.state.passwordConfirmation;\n    loginIsValid = () => this.state.login.length >= 6;\n    passwordIsValid = () => this.state.password.length >= 6;\n\n    submitSignup = (e) => {\n        e.preventDefault();\n\n        this.setState({signupError: ''});\n\n        if(!this.loginIsValid()){\n            this.setState({ signupError: 'Login must be at least 6 characters.' });\n            return;\n        }\n        if(!this.passwordIsValid()) {\n            this.setState({ signupError: 'Password must be at least 6 characters.' });\n            return;\n        }\n        if(!this.formIsValid()) {\n            this.setState({ signupError: 'Passwords do not match.' });\n            return;\n        }\n\n        this.props.registerUser(this.state.name, this.state.surname, this.state.login, this.state.password, this.state.redirectTo);\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Register));","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0874ff',\n        },\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 768,\n            md: 992,\n            lg: 1200\n        }\n    },\n});\n\ninterface IThemeProps{\n    children:any;\n}\nexport default function Theme(props: IThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport history from '../history';\nimport * as actionCreators from '../actions/auth';\nimport { validate_token } from '../utils/http_functions';\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        userLogin: state.auth.login,\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nexport function requireNoAuthentication(Component) {\n\n    class notAuthenticatedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                loaded: false,\n            };\n        }\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n        static getDerivedStateFromProps(nextProps, prevState){\n            if(nextProps.isAuthenticated) history.push('/');\n            else{\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (token) validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        nextProps.loginUserSuccess(token, login);\n                        history.push('/');\n                    }\n                    else return {loaded: true};\n                })\n                    .catch(res => {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('userLogin');\n                        history.push('/');\n                    });\n                else return {loaded: true};\n            }\n            return null;\n        }\n\n        checkAuth(props = this.props) {\n            if (props.isAuthenticated) history.push('/');\n            else {\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (token) validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        this.props.loginUserSuccess(token, login);\n                        history.push('/');\n                    }\n                    else this.setState({\n                        loaded: true,\n                    });\n                });\n                else this.setState({\n                    loaded: true,\n                });\n            }\n        }\n\n        render() {\n\n            return (\n                <div className='auth-component'>\n                    {!this.props.isAuthenticated && this.state.loaded\n                        ? <Component {...this.props} />\n                        : null\n                    }\n                </div>\n            );\n\n        }\n    }\n\n    return connect(mapStateToProps, mapDispatchToProps)(notAuthenticatedComponent);\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions/auth';\nimport {validate_token} from \"../utils/http_functions\";\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        userLogin: state.auth.login,\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nexport function requireAuthentication(Component) {\n    class AuthenticatedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                loaded_if_needed: false,\n            };\n        }\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n        static getDerivedStateFromProps(nextProps, prevState){\n            if(!nextProps.isAuthenticated){\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (!token) nextProps.history.push('/login');\n                else validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        nextProps.loginUserSuccess(token, login);\n                        return {loaded_if_needed: true};\n                    }\n                    else nextProps.history.push('/login');\n                });\n\n            }\n            return null;\n        }\n\n        checkAuth(props = this.props) {\n            if (!props.isAuthenticated) {\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (!token) this.props.history.push('/login');\n                else validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        this.props.loginUserSuccess(token, login);\n                        this.setState({\n                            loaded_if_needed: true,\n                        });\n                    }\n                    else this.props.history.push('/login');\n                })\n                    .catch(res => {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('userLogin');\n                        this.props.history.push('/login');\n                    });\n            } else this.setState({\n                loaded_if_needed: true,\n            });\n        }\n\n        render() {\n            return (\n                <div className='auth-component'>\n                    {this.props.isAuthenticated && this.state.loaded_if_needed\n                        ? <Component {...this.props} />\n                        : null\n                    }\n                </div>\n            );\n\n        }\n    }\n\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\n}","import { createReducer } from '../utils/misc';\nimport {\n    LOGIN_USER_REQUEST,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILURE,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILURE,\n    LOGOUT_USER\n} from '../utils/constants';\n\nconst initialState = {\n    token: null,\n    login: null,\n    isAuthenticated: false,\n    isAuthenticating: false,\n    statusText: null,\n    isRegistering: false,\n    isRegistered: false,\n    registerStatusText: null,\n};\n\nexport default createReducer(initialState, {\n\n    /**\n     * Login/Logout Reducers\n     */\n\n    [LOGIN_USER_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isAuthenticating: true,\n            statusText: null,\n        }),\n\n    [LOGIN_USER_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticating: false,\n            isAuthenticated: true,\n            token: payload.token,\n            login: payload.login,\n            statusText: 'You have been successfully logged in.',\n        }),\n\n    [LOGIN_USER_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticating: false,\n            isAuthenticated: false,\n            token: null,\n            userName: null,\n            statusText: `Authentication Error: ${payload.status} ${payload.statusText}`,\n        }),\n\n    [LOGOUT_USER]: (state) =>\n        Object.assign({}, state, {\n            isAuthenticated: false,\n            token: null,\n            userName: null,\n            status: 'success',\n            statusText: 'You have been successfully logged out.',\n        }),\n\n    /**\n     * Register Reducers\n     */\n\n    [REGISTER_USER_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticating: false,\n            isAuthenticated: true,\n            isRegistering: false,\n            token: payload.token,\n            login: payload.login,\n            registerStatusText: 'You have been successfully logged in.',\n        }),\n    [REGISTER_USER_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isRegistering: true,\n        }),\n    [REGISTER_USER_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticated: false,\n            token: null,\n            login: null,\n            registerStatusText: `Register Error: ${payload.status} ${payload.statusText}`,\n        }),\n});","import { createReducer } from '../utils/misc';\nimport {\n    RECEIVE_PROTECTED_DATA,\n    FETCH_PROTECTED_DATA_REQUEST,\n    UPDATE_USER_DATA,\n    UPDATE_USER_DATA_REQUEST,\n    UPDATE_USER_DATA_FAILURE,\n    UPDATE_USER_DATA_CLOSE,\n    UPDATE_USER_PHOTO_REQUEST,\n    UPDATE_USER_PHOTO,\n    UPDATE_USER_PHOTO_FAILURE,\n    FETCH_USERS_DATA_REQUEST,\n    RECEIVE_USERS_DATA,\n    CLEAN_USERS_DATA,\n    RECEIVE_UNAUTHORIZED_USER_DATA,\n    FETCH_UNAUTHORIZED_USER_DATA_REQUEST,\n    FETCH_UNAUTHORIZED_USER_DATA_FAILURE,\n    CLEAN_UNAUTHORIZED_USER_DATA,\n} from '../utils/constants';\n\nconst initialState = {\n    data: null,\n    usersList: null,\n    status: null,\n    isFetching: false,\n    loaded: false,\n    unauthorizedUser: null\n};\n\nexport default createReducer(initialState, {\n    [RECEIVE_PROTECTED_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            data: payload.data,\n            // status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_PROTECTED_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [UPDATE_USER_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            data: payload.data,\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_DATA_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n    [UPDATE_USER_DATA_CLOSE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n        }),\n    [UPDATE_USER_PHOTO]: (state, payload) =>\n        Object.assign({}, state, {\n            data: payload.data,\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_PHOTO_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_PHOTO_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n    [FETCH_USERS_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true\n        }),\n    [RECEIVE_USERS_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            usersList: payload.users,\n            isFetching: false,\n        }),\n    [CLEAN_USERS_DATA]: (state) =>\n        Object.assign({}, state, {\n            usersList: null,\n        }),\n    [RECEIVE_UNAUTHORIZED_USER_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            unauthorizedUser: payload.unauthorizedUser,\n            isFetching: false\n        }),\n    [FETCH_UNAUTHORIZED_USER_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true\n        }),\n    [FETCH_UNAUTHORIZED_USER_DATA_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [CLEAN_UNAUTHORIZED_USER_DATA]: (state) =>\n        Object.assign({}, state, {\n            unauthorizedUser: null,\n        }),\n});","import { createReducer } from '../utils/misc';\nimport {\n    RECEIVE_USER_CHATS,\n    FETCH_USER_CHATS_REQUEST,\n    RECEIVE_USER_GROUPS,\n    FETCH_USER_GROUPS_REQUEST,\n    ADD_CHAT_REQUEST,\n    ADD_CHAT_SUCCESS,\n    ADD_CHAT_FAILURE,\n    ADD_CHAT_CLOSE,\n    ADD_GROUP_REQUEST,\n    ADD_GROUP_SUCCESS,\n    ADD_GROUP_FAILURE,\n    READ_CHAT_REQUEST,\n    READ_CHAT,\n    UPDATE_GROUP_TITLE_REQUEST,\n    UPDATE_GROUP_TITLE_SUCCESS,\n    UPDATE_GROUP_TITLE_FAILURE,\n    DELETE_GROUP_REQUEST,\n    DELETE_GROUP_SUCCESS,\n    DELETE_GROUP_FAILURE,\n    DELETE_CHAT_REQUEST,\n    DELETE_CHAT_SUCCESS,\n    DELETE_CHAT_FAILURE,\n    UPDATE_GROUP_PHOTO,\n    UPDATE_GROUP_PHOTO_FAILURE,\n    UPDATE_GROUP_PHOTO_REQUEST,\n    UPDATE_GROUP_MEMBERS_REQUEST,\n    UPDATE_GROUP_MEMBERS_FAILURE,\n    UPDATE_GROUP_MEMBERS_SUCCESS, TOGGLE_SIDEBAR\n} from '../utils/constants';\n\nconst initialState = {\n    chats: null,\n    groups: null,\n    isFetching: false,\n    loaded: false,\n    addChatError: null,\n    isAddingChat: false,\n    deleteGroupMessage: null,\n    deleteChatMessage: null,\n    sidebarOpen: false,\n};\n\nexport default createReducer(initialState, {\n    [RECEIVE_USER_CHATS]: (state, payload) =>\n        Object.assign({}, state, {\n            chats: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_USER_CHATS_REQUEST]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: payload.isFetching,\n        }),\n    [ADD_CHAT_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: true,\n        }),\n\n    [ADD_CHAT_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: false\n        }),\n\n    [ADD_CHAT_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            addChatError: payload.error,\n            isAddingChat: false\n        }),\n    [ADD_CHAT_CLOSE]: (state, payload) =>\n        Object.assign({}, state, {\n            addChatError: payload.addChatError,\n        }),\n\n    [DELETE_CHAT_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [DELETE_CHAT_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteChatMessage: payload,\n        }),\n\n    [DELETE_CHAT_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteChatMessage: payload,\n        }),\n\n    [ADD_GROUP_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: true,\n        }),\n\n    [ADD_GROUP_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: false\n        }),\n\n    [ADD_GROUP_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            addChatError: payload.error,\n            isAddingChat: false\n        }),\n\n    [UPDATE_GROUP_TITLE_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [UPDATE_GROUP_TITLE_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            isFetching: false\n        }),\n\n    [UPDATE_GROUP_TITLE_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            updateGroupError: payload.error,\n            isFetching: false\n        }),\n\n    [UPDATE_GROUP_MEMBERS_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [UPDATE_GROUP_MEMBERS_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            isFetching: false\n        }),\n\n    [UPDATE_GROUP_MEMBERS_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            updateGroupError: payload.error,\n            isFetching: false\n        }),\n\n    [DELETE_GROUP_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [DELETE_GROUP_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteGroupMessage: payload,\n        }),\n\n    [DELETE_GROUP_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteGroupMessage: payload,\n        }),\n\n    [READ_CHAT_REQUEST]: (state) =>\n        Object.assign({}, state, {\n           loaded: false\n        }),\n    [READ_CHAT]: (state) =>\n        Object.assign({}, state, {\n            loaded: true\n        }),\n    [RECEIVE_USER_GROUPS]: (state, payload) =>\n        Object.assign({}, state, {\n            groups: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_USER_GROUPS_REQUEST]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: payload.isFetching,\n        }),\n    [UPDATE_GROUP_PHOTO]: (state, payload) =>\n        Object.assign({}, state, {\n            updatePhotoMessage: payload.updatePhotoMessage,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_GROUP_PHOTO_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            updatePhotoMessage: payload.updatePhotoMessage,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_GROUP_PHOTO_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false,\n        }),\n    [TOGGLE_SIDEBAR]: (state, payload) =>\n        Object.assign({}, state, {\n            sidebarOpen: payload.sidebarOpen\n        }),\n});","import { createReducer } from '../utils/misc';\nimport {\n    RECEIVE_CONTACT_LIST,\n    FETCH_CONTACT_LIST_REQUEST,\n    RECEIVE_INVITATION_LIST,\n    FETCH_INVITATION_LIST_REQUEST,\n    RECEIVE_FILTERED_CONTACT_LIST,\n    FETCH_FILTERED_CONTACT_LIST_REQUEST,\n    CLEAN_CONTACT_LIST\n} from '../utils/constants';\n\nconst initialState = {\n    filteredContacts: null,\n    contacts: null,\n    isFetching: false,\n    loaded: false,\n};\n\nexport default createReducer(initialState, {\n    [RECEIVE_CONTACT_LIST]: (state, payload) =>\n        Object.assign({}, state, {\n            contacts: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_CONTACT_LIST_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false\n        }),\n    [RECEIVE_FILTERED_CONTACT_LIST]: (state, payload) =>\n        Object.assign({}, state, {\n            filteredContacts: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_FILTERED_CONTACT_LIST_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false\n        }),\n    [CLEAN_CONTACT_LIST]: (state) =>\n        Object.assign({}, state, {\n            filteredContacts: null,\n        }),\n    [RECEIVE_INVITATION_LIST]: (state, payload) =>\n        Object.assign({}, state, {\n            invitations: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_INVITATION_LIST_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false\n        }),\n});","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport auth from './auth';\nimport data from './data';\nimport chats from './chats';\nimport contacts from './contacts';\n\nconst rootReducer = combineReducers({\n    routing: routerReducer,\n    auth,\n    data,\n    chats,\n    contacts\n});\n\nexport default rootReducer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TopBar from './components/TopBar';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport Login from \"./pages/login/Login\";\nimport Register from \"./pages/register/Register\";\nimport Theme from \"./Theme\";\nimport browserHistory from './history';\nimport { Provider } from 'react-redux';\nimport { requireNoAuthentication } from './components/notAuthenticatedComponent';\nimport { requireAuthentication } from './components/AuthenticatedComponent';\nimport configureStore from './store/configureStore';\nimport { syncHistoryWithStore } from 'react-router-redux';\n\nconst useStyles = makeStyles(() => ({\n    app: {\n      height: '100%',\n    },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n    const store = configureStore();\n    const history = syncHistoryWithStore(browserHistory, store);\n\n    return <div className={'app ' + classes.app}>\n        <Provider store={store}>\n            <Theme>\n                <TopBar/>\n                <Router history={history}>\n                    <Switch>\n                        <Route exact path='/' component={requireAuthentication(Dashboard)}/>\n                        <Route path='/login' component={requireNoAuthentication(Login)}/>\n                        <Route path='/register' component={requireNoAuthentication(Register)}/>\n                    </Switch>\n                </Router>\n            </Theme>\n        </Provider>\n    </div>\n}\n\nexport default App;","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\n\nexport default function configureStore(initialState) {\n    const store = createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunkMiddleware)\n    );\n\n    if (module.hot) {\n        // Enable Webpack hot module replacement for reducers\n        module.hot.accept('../reducers', () => {\n            const nextRootReducer = require('../reducers/index').default;\n\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}