{"version":3,"sources":["utils/misc.js","utils/http_functions.js","utils/constants.js","history.js","actions/auth.js","actions/chats.js","components/TopBar.js","components/sidebar/styles.js","components/ContactItem.js","actions/data.js","components/AccountPreview.js","components/sidebar/Sidebar.js","components/chatview/styles.js","components/chatview/ChatView.js","pages/dashboard/styles.js","components/messagebox/styles.js","components/messagebox/MessageBox.js","dialogs/LogOutDialog.js","dialogs/EditPhotoDialog.js","dialogs/AccountDialog.js","actions/contacts.js","components/AddChat.js","components/AddGroup.js","dialogs/AddChatDialog.js","dialogs/UserInfoDialog.js","dialogs/DeleteContactDialog.js","components/ContactList.js","components/InvitationPreview.js","components/InvitationList.js","dialogs/AddContactDialog.js","dialogs/ContactsDialog.js","components/GroupPreview.js","dialogs/DeleteChatDialog.js","components/ChatInfoBar.js","dialogs/DeleteGroupDialog.js","dialogs/LeaveGroupDialog.js","dialogs/ManageMembersDialog.js","components/ChatInfoPanel.js","pages/dashboard/Dashboard.js","pages/login/styles.js","pages/login/Login.js","pages/register/styles.js","pages/register/Register.js","Theme.js","components/notAuthenticatedComponent.js","components/AuthenticatedComponent.js","reducers/auth.js","reducers/data.js","reducers/chats.js","reducers/contacts.js","reducers/index.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["createReducer","initialState","reducerMap","state","action","reducer","type","payload","parseJSON","response","data","api_host","tokenConfig","token","headers","validate_token","axios","post","check_user_status","login","get","createBrowserHistory","loginUserSuccess","localStorage","setItem","loginUserFailure","error","removeItem","status","statusText","loginUserRequest","logout","logoutAndRedirect","dispatch","history","push","redirectToRoute","route","loginUser","password","get_token","then","e","alert","catch","registerUserRequest","registerUserSuccess","registerUserFailure","registerUser","name","surname","create_user","receiveUserChats","selectChat","fetchUserChatsRequest","fetchUserChats","chat_id","get_chats","addChatRequest","addChatSuccess","addChatFailure","addChatClose","addChatError","addChat","userLogin","openModal","getItem","user","add_chat","fetchUserGroups","message","deleteChatRequest","deleteChatSuccess","deleteChatFailure","deleteChat","chatId","id","delete","delete_chat","addGroupRequest","addGroupSuccess","addGroupFailure","addGroup","title","users","add_group","updateGroupTitleRequest","updateGroupTitleSuccess","updateGroupTitleFailure","updateGroupTitle","put","update_group_title","updateGroupMembersRequest","updateGroupMembersSuccess","updateGroupMembersFailure","updateGroupMembers","chat","update_group_members","deleteGroupRequest","deleteGroupSuccess","deleteGroupFailure","deleteGroup","groupId","delete_group","readChatRequest","readChatSuccess","readChat","read_chat","receiveUserGroups","fetchUserGroupsRequest","get_groups","receiveUpdatedPhoto","updatePhotoMessage","updateGroupPhotoFailure","updateGroupPhotoRequest","updateGroupPhoto","update_group_photo","toggleSidebar","sidebarOpen","handleToggleSidebar","useStyles","makeStyles","theme","header","zIndex","drawer","container","backgroundColor","palette","primary","main","logo","maxWidth","marginRight","flexGrow","toolbar","breakpoints","down","minHeight","button","paddingRight","up","display","icon","color","connect","isFetching","isAuthenticating","auth","isAuthenticated","isRegistering","isChatsFetching","chats","isAddingChat","bindActionCreators","actionCreators","props","classes","AppBar","position","className","Toolbar","src","alt","Typography","variant","IconButton","onClick","LinearProgress","styles","width","flexShrink","marginLeft","drawerPaper","sidebarTop","overflowY","paddingTop","sidebarDown","padding","mixins","minifiedToolbar","height","spacing","float","divider","clear","addChatBtn","badge","withStyles","boxShadow","background","paper","top","left","borderRadius","animation","border","content","transform","opacity","Badge","ContactItem","checkTime","i","userIsSender","lastMessage","sender","date","h","getHours","m","getMinutes","this","d","Date","UTC","getFullYear","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","now","isToday","getTime","setHours","isThisWeek","getWeekNumber","months","getDay","messageSymbols","ListItem","listItem","selected","ListItemAvatar","listItemAvatar","avatarContainer","profile_image","Avatar","avatar","charAt","toUpperCase","AvatarGroup","max","groupPhoto","groupWithPhoto","slice","map","_usr","_idx","key","length","avatarGroup","avatarGroup3","ListItemText","chatTitle","secondary","Fragment","substr","textGroup","textGroup3","time","timestamp","getTimeFormat","parseInt","receiverHasRead","notification","receivers","find","React","Component","getChats","getGroups","withWidth","fontSize","fontFamily","right","text","minWidth","receiveProtectedData","fetchProtectedDataRequest","fetchProtectedData","initFunction","data_about_user","receiveUpdatedData","updateDataFailure","updateUserDataRequest","updateUserDataClose","updateUserData","update_user_data","updateUserPhotoFailure","updateUserPhotoRequest","updateUserPhoto","update_user_photo","fetchUsersDataRequest","receiveUsersData","cleanUsersData","fetchUsersData","get_users_data","fetchUnauthorizedUserDataRequest","fetchUnauthorizedUserDataFailure","receiveUnauthorizedUsersData","unauthorizedUser","cleanUnauthorizedUserData","fetchUnauthorizedUserData","get_unauthorized_user_data","checkUserStatus","setStatus","a","online","checked","StyledBadge","AccountPreview","setState","socket","on","removeAllListeners","currentUser","handleClick","pointedListItem","overlap","anchorOrigin","vertical","horizontal","last_seen","groupOwner","badgeContent","owner","cursor","borderColor","disabled","margin","Sidebar","Drawer","anchor","open","onClose","Divider","Button","fullWidth","newChatBtnHandle","List","chatList","sort","chatA","chatB","parseFloat","lastUpdate","index","messages","filter","_user","selectedChatIndex","selectChatHandle","photo","accountHandleClick","ListItemIcon","contactsHandleClick","invitations","received","logOutHandleClick","loaded","contacts","boxSizing","userSent","wordWrap","marginTop","borderBottomRightRadius","friendSent","borderTopLeftRadius","bottom","messageContainer","dividerDate","noAvatar","messageGroupUser","alignItems","justifyContent","messageGroupFriend","btnContainer","paddingLeft","moreBtn","menu","ChatView","handleOpenMessageMenu","anchorMenu","currentTarget","removeTarget","handleCloseMessageMenu","document","getElementById","scrollTo","scrollHeight","msg","result","_msg","_index","setDivider","component","setAvatar","Menu","Boolean","anchorEl","MenuItem","handleRemoveMessage","dashboard","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","bigIcon","fill","defaultComponent","textAlign","transition","chatViewContainer","overflow","flexDirection","messageBox","textField","borderBottom","MessageBox","messageValid","txt","replace","submitMessage","bind","TextField","style","placeholder","onKeyUp","userTyping","onChange","target","value","autoComplete","helperText","keyCode","sendMessageHandle","selectedChatType","handleClose","setOpen","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","EditPhotoDialog","onSelectFile","files","reader","FileReader","addEventListener","readAsDataURL","onImageLoaded","image","imageRef","onCropChange","crop","unit","aspect","handleSave","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","FormData","append","console","getCroppedImg","handleUpdatePhoto","croppedImageUrl","severity","acceptedFiles","filesLimit","showPreviewsInDropzone","dropzoneClass","drop","ruleOfThirds","marginBottom","AccountDialog","loginIsValid","passwordIsValid","formIsValid","passwordConfirmation","updateError","newUser","handleDialogOpen","editPhotoDialogOpen","whichInput","event","img","initData","Tooltip","label","passwordInput","form","input","fetchContactList","get_user_contacts","fetchFilteredContactList","get_filtered_user_contacts","fetchInvitationList","get_user_invitations","progress","hidden","usersList","chooseUser","list","maxHeight","chip","validation","groupUserList","Chip","onDelete","removeUserFromList","contactList","contactA","contactB","contact","toLowerCase","includes","userInList","addUserToList","AddChatDialog","cleanContactList","addChatLogin","addGroupLogin","currentTab","handleAddChat","addGroupError","handleChange","tab","handleAddUserToList","handleRemoveUserFromList","isUserInGroupList","Tabs","Tab","a11yProps","filteredContacts","userInfo","info","actions","contacts_login","size","handleGoToChat","handleRemoveContact","handleAddContact","DeleteContactDialog","ContactList","handleSearch","searchValue","userInfoOpen","deleteContactDialogOpen","selectedUser","search","addBtn","InvitationPreview","handleAccept","handleDecline","invitation","acceptInvitation","declineInvitation","successMsg","maxLength","handleSendInvitation","ContactsDialog","inviteMessage","handleSnackbarClose","reason","snackbar","handleAddContactModalOpen","contactDialogOpen","success","handleAcceptInvitation","handleDeclineInvitation","setSocketListeners","handleShowSnackbar","receiver","emit","isContactsFetching","isDataFetching","Snackbar","autoHideDuration","group3","fontWeight","GroupPreview","aria-label","handleChatInfoOpen","DeleteChatDialog","handleRemoveChat","ChatInfoBar","handleSetOpenDialog","deleteChatDialogOpen","handleCloseMenu","chatPreview","getSelectedChatUserList","_chat","selectedChat","accountContainer","handleOpenMenu","menuItem","DeleteGroupDialog","handleRemoveGroup","LeaveGroupDialog","isOwner","handleLeaveGroup","ManageMembersDialog","handleSaveGroupMembers","userList","flexWrap","ChatInfoPanel","hanldeToggleEditTitle","isEditMode","deleteGroupDialogOpen","leaveGroupDialogOpen","manageMembersDialogOpen","users_login","handleUpdateTitle","handleToggle","chatInfo","titleEditField","iconBtn","editBtn","listLabel","userA","userB","deleteBtn","drawerWidth","drawerHeader","borderBottomColor","io","Dashboard","newChatBtnClicked","setModalOpen","chatInfoToggle","chatInfoOpen","handleChatInfoToggle","handleOpenAccountMenu","handleCloseAccountMenu","logOutDialogOpen","accountDialogOpen","addChatDialogOpen","contactsDialogOpen","sendMessage","readMessage","removeMessage","getUserData","window","changeUserStatus","group","groups","log","modal","chat_list","userData","readMessageHandle","element","handleSelectChat","registerPage","submit","hasAccountHeader","logInLink","textDecoration","welcomeText","Login","cleanUserData","signinError","redirectTo","getData","preventDefault","CssBaseline","Paper","onSubmit","FormControl","required","InputLabel","htmlFor","Input","onBlur","to","Register","submitSignup","signupError","registerStatusText","createMuiTheme","values","xs","sm","md","lg","Theme","ThemeProvider","children","mapStateToProps","mapDispatchToProps","requireNoAuthentication","notAuthenticatedComponent","checkAuth","res","nextProps","prevState","requireAuthentication","AuthenticatedComponent","loaded_if_needed","isRegistered","Object","assign","userName","deleteGroupMessage","deleteChatMessage","updateGroupError","rootReducer","combineReducers","routing","routerReducer","app","App","store","createStore","applyMiddleware","thunkMiddleware","syncHistoryWithStore","browserHistory","exact","path","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0hIAOO,SAASA,EAAcC,EAAcC,GACxC,OAAO,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC/BC,EAAUH,EAAWE,EAAOE,MAGlC,OAAOD,EACDA,EAAQF,EAAOC,EAAOG,SACtBJ,GAKP,SAASK,EAAUC,GACtB,OAAOA,EAASC,K,qBCjBdC,EAAQ,UCFU,GDEV,QAERC,EAAc,SAACC,GAAD,MAAY,CAC5BC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BD,MAItBE,EAAiB,SAACF,GAAD,OAC1BG,IAAMC,KAAN,UAAcN,EAAd,wBAA8C,CAC1CE,SACDD,EAAYC,KAwCNK,EAAoB,SAACL,EAAOM,GAAR,OAC7BH,IAAMI,IAAN,UAAaT,EAAb,8BAA2CQ,GAASP,EAAYC,K,QEvDrDQ,cAAqB,ICY7B,SAASC,EAAiBT,EAAOM,GAGpC,OAFAI,aAAaC,QAAQ,QAASX,GAC9BU,aAAaC,QAAQ,YAAaL,GAC3B,CACHb,KFd0B,qBEe1BC,QAAS,CACLM,QACAM,UAML,SAASM,EAAiBC,GAG7B,OAFAH,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,aACjB,CACHrB,KF1B0B,qBE2B1BC,QAAS,CACLqB,OAAQF,EAAMjB,SAASmB,OACvBC,WAAYH,EAAMjB,SAASoB,aAKhC,SAASC,IACZ,MAAO,CACHxB,KFtC0B,sBE0C3B,SAASyB,IAGZ,OAFAR,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,aACjB,CACHrB,KFtCmB,eE0CpB,SAAS0B,IACZ,OAAO,SAACC,GACJA,EAASF,KACTG,EAAQC,KAAK,WAId,SAASC,EAAgBC,GAC5B,OAAO,WACHH,EAAQC,KAAKE,IAId,SAASC,EAAUnB,EAAOoB,GAC7B,OAAO,SAAUN,GAEb,OADAA,EA5BG,CACH3B,KFtC0B,uBDuBT,SAACa,EAAOoB,GAAR,OACrBvB,IAAMC,KAAN,UAAcN,EAAd,gBAAsC,CAClCQ,QACAoB,aGwCOC,CAAUrB,EAAOoB,GACnBE,KAAKjC,GACLiC,MAAK,SAAAhC,GACF,IACIwB,EAASX,EAAiBb,EAASI,MAAOM,IAC1Ce,EAAQC,KAAK,KACf,MAAOO,GACLC,MAAMD,GACNT,EAASR,EAAiB,CACtBhB,SAAU,CACNmB,OAAQ,IACRC,WAAY,wBAK3Be,OAAM,SAAAlB,GACHO,EAASR,EAAiB,CACtBhB,SAAU,CACNmB,OAAQ,IACRC,WAAY,oCAQ7B,SAASgB,IACZ,MAAO,CACHvC,KF5F6B,yBEgG9B,SAASwC,EAAoBjC,EAAOM,GAGvC,OAFAI,aAAaC,QAAQ,QAASX,GAC9BU,aAAaC,QAAQ,YAAaL,GAC3B,CACHb,KFnG6B,wBEoG7BC,QAAS,CACLM,QACAM,UAKL,SAAS4B,EAAoBrB,GAEhC,OADAH,aAAaI,WAAW,SACjB,CACHrB,KF7G6B,wBE8G7BC,QAAS,CACLqB,OAAQF,EAAMjB,SAASmB,OACvBC,WAAYH,EAAMjB,SAASoB,aAKhC,SAASmB,EAAaC,EAAMC,EAAS/B,EAAOoB,GAC/C,OAAO,SAAUN,GAEb,OADAA,EA9BG,CACH3B,KF5F6B,0BDWV,SAAC2C,EAAMC,EAAS/B,EAAOoB,GAAvB,OACvBvB,IAAMC,KAAN,UAAcN,EAAd,gBAAsC,CAClCsC,OACAC,UACA/B,QACAoB,aG0GOY,CAAYF,EAAMC,EAAS/B,EAAOoB,GACpCE,KAAKjC,GACLiC,MAAK,SAAAhC,GACF,IACIwB,EAASa,EAAoBrC,EAASI,MAAOM,IAC7Ce,EAAQC,KAAK,KACf,MAAOO,GACLT,EAASc,EAAoB,CACzBtC,SAAU,CACNmB,OAAQ,IACRC,WAAY,wBAK3Be,OAAM,SAAAlB,GACHO,EAASc,EAAoB,CACrBtC,SAAU,CACNmB,OAAQ,IACRC,WAAY,8CCxGjC,SAASuB,EAAiB1C,EAAM2C,GACnC,MAAO,CACH/C,KH/B0B,qBGgC1BC,QAAS,CACLG,SAKL,SAAS4C,IACZ,MAAO,CACHhD,KHvCgC,4BG2CjC,SAASiD,EAAe1C,EAAOwC,EAAYG,GAC9C,OAAO,SAACvB,GACJA,EAPG,CACH3B,KHvCgC,6BD2Cf,SAACO,GAAD,OACrBG,IAAMI,IAAN,UAAaT,EAAb,UAA+BC,EAAYC,IIEvC4C,CAAU5C,GACL4B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAASmB,EAAiB3C,IACvB4C,GAAcG,GACbH,EAAWG,MAGlBZ,OAAM,SAAAlB,GACkB,MAAjBA,EAAME,QACNK,EAASD,SAMtB,SAAS0B,IACZ,MAAO,CACHpD,KH3CwB,oBG+CzB,SAASqD,IACZ,MAAO,CACHrD,KHhDwB,mBGiDxBC,QAAS,IAIV,SAASqD,EAAelC,GAC3B,MAAO,CACHpB,KHtDwB,mBGuDxBC,QAAS,CACLmB,UAKL,SAASmC,IACZ,MAAO,CACHvD,KH9DsB,iBG+DtBC,QAAS,CACLuD,aAAc,OAKnB,SAASC,EAAQC,EAAWC,EAAWZ,GAE1C,IAAMxC,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EAASyB,GJpDO,SAAC7C,EAAOM,GAAR,OACpBH,IAAMC,KAAN,UAAcN,EAAd,UAAgC,CAACwD,KAAMhD,GAAQP,EAAYC,IIoDhDuD,CAASvD,EAAOmD,GAClBvB,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS0B,GACT1B,EAASsB,EAAe1C,EAAOwC,EAAY5C,EAAS+C,UACpDvB,EAASoC,GAAgBxD,IACtBoD,GACCA,EAAU,YAAY,MAG7BrB,OAAM,SAAAlB,GACHO,EAAS2B,EAAelC,EAAMjB,SAASC,KAAK4D,cAKrD,SAASC,IACZ,MAAO,CACHjE,KHxF2B,uBG4F5B,SAASkE,EAAkBF,GAC9B,MAAO,CACHhE,KH7F2B,sBG8F3BC,QAAS,CACLD,KAAM,UACNgE,YAKL,SAASG,EAAkBH,GAC9B,MAAO,CACHhE,KHtG2B,sBGuG3BC,QAAS,CACLD,KAAM,UACNgE,YAKL,SAASI,EAAWC,GAEvB,IAAM9D,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EA9BG,CACH3B,KHxF2B,wBDuBR,SAACO,EAAO+D,GAAR,OACvB5D,IAAM6D,OAAN,UAAgBlE,EAAhB,iBAAiCiE,GAAMhE,EAAYC,II8FxCiE,CAAYjE,EAAO8D,GACrBlC,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAASuC,EAAkB/D,EAAS6D,UACpCrC,EAASsB,EAAe1C,IACxBoB,EAASoC,GAAgBxD,OAE5B+B,OAAM,SAAAlB,GACHO,EAASwC,EAAkB/C,EAAMjB,SAASC,KAAK4D,cAKxD,SAASS,KACZ,MAAO,CACHzE,KH7JyB,qBGiK1B,SAAS0E,KACZ,MAAO,CACH1E,KHlKyB,qBGsK1B,SAAS2E,GAAgBvD,GAC5B,MAAO,CACHpB,KHvKyB,oBGwKzBC,QAAS,CACLmB,UAKL,SAASwD,GAASC,EAAOC,EAAOnB,GAEnC,IAAMpD,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EAAS8C,IJnIQ,SAAClE,EAAOsE,EAAOC,GAAf,OACrBpE,IAAMC,KAAN,UAAcN,EAAd,WAAiC,CAC7BwE,MAAOA,EACPC,MAAOA,GACRxE,EAAYC,IIgIJwE,CAAUxE,EAAOsE,EAAOC,GAC1B3C,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS+C,IACT/C,EAASsB,EAAe1C,IACxBoB,EAASoC,GAAgBxD,IACzBoD,EAAU,YAAY,MAEzBrB,OAAM,SAAAlB,GACHO,EAASgD,GAAgBvD,EAAMjB,SAASC,KAAK4D,cAKtD,SAASgB,KACZ,MAAO,CACHhF,KHlMkC,8BGsMnC,SAASiF,KACZ,MAAO,CACHjF,KHvMkC,8BG2MnC,SAASkF,GAAwB9D,GACpC,MAAO,CACHpB,KH5MkC,6BG6MlCC,QAAS,CACLmB,UAKL,SAAS+D,GAAiBb,EAAIO,GAEjC,IAAMtE,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EAzBG,CACH3B,KHlMkC,+BDoDR,SAACO,EAAO+D,EAAIO,GAAZ,OAC9BnE,IAAM0E,IAAN,UAAa/E,EAAb,kBAA+BiE,GAAM,CACjCO,MAAOA,GACRvE,EAAYC,IIoKJ8E,CAAmB9E,EAAO+D,EAAIO,GAChC1C,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAvBL,CACH3B,KHvMkC,+BG8N1B2B,EAASsB,EAAe1C,IACxBoB,EAASoC,GAAgBxD,OAE5B+B,OAAM,SAAAlB,GACHO,EAASuD,GAAwB9D,EAAMjB,SAASC,KAAK4D,cAK9D,SAASsB,KACZ,MAAO,CACHtF,KHtOoC,gCG0OrC,SAASuF,KACZ,MAAO,CACHvF,KH3OoC,gCG+OrC,SAASwF,GAA0BpE,GACtC,MAAO,CACHpB,KHhPoC,+BGiPpCC,QAAS,CACLmB,UAKL,SAASqE,GAAmBnB,EAAIQ,GAEnC,IAAMvE,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EAzBG,CACH3B,KHtOoC,iCD6DR,SAACO,EAAOH,EAAMsF,GAAd,OAChChF,IAAMC,KAAN,UAAcN,EAAd,kBAAgCqF,GAAQtF,EAAME,EAAYC,IIiM/CoF,CAAqBpF,EAAOuE,EAAOR,GACrCnC,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAvBL,CACH3B,KH3OoC,iCGkQ5B2B,EAASoC,GAAgBxD,OAE5B+B,OAAM,SAAAlB,GACHO,EAAS6D,GAA0BpE,EAAMjB,SAASC,KAAK4D,cAKhE,SAAS4B,KACZ,MAAO,CACH5F,KHzQ4B,wBG6Q7B,SAAS6F,GAAmB7B,GAC/B,MAAO,CACHhE,KH9Q4B,uBG+Q5BC,QAAS,CACLD,KAAM,UACNgE,YAKL,SAAS8B,GAAmB9B,GAC/B,MAAO,CACHhE,KHvR4B,uBGwR5BC,QAAS,CACLD,KAAM,UACNgE,YAKL,SAAS+B,GAAYC,GAExB,IAAMzF,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EA9BG,CACH3B,KHzQ4B,yBD4DR,SAACO,EAAO+D,GAAR,OACxB5D,IAAM6D,OAAN,UAAgBlE,EAAhB,kBAAkCiE,GAAMhE,EAAYC,II0OzC0F,CAAa1F,EAAOyF,GACtB7D,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAASkE,GAAmB1F,EAAS6D,UACrCrC,EAASsB,EAAe1C,IACxBoB,EAASoC,GAAgBxD,OAE5B+B,OAAM,SAAAlB,GACHO,EAASmE,GAAmB1E,EAAMjB,SAASC,KAAK4D,cAKzD,SAASkC,KACZ,MAAO,CACHlG,KH7SyB,oBG8SzBC,QAAS,IAIV,SAASkG,KACZ,MAAO,CACHnG,KHnTiB,YGoTjBC,QAAS,IAIV,SAASmG,GAASV,EAAM1F,GAC3B,IAAMO,EAAQU,aAAa2C,QAAQ,SAEnC,OAAO,SAAUjC,GAEb,OADAA,EAASuE,IJtSQ,SAAC3F,EAAOmF,EAAM1F,GAAd,OACrBU,IAAM0E,IAAN,UAAa/E,EAAb,iBAA8BqF,GAAQ,CAAC1F,QAAOM,EAAYC,IIsS/C8F,CAAU9F,EAAOmF,EAAM1F,GACzBmC,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAASwE,IACTxE,EAASsB,EAAe1C,IACxBoB,EAASoC,GAAgBxD,OAE5B+B,OAAM,SAAAlB,GACkB,MAAjBA,EAAME,QACNK,EAASD,SAMtB,SAAS4E,GAAkBlG,GAC9B,MAAO,CACHJ,KHvW2B,sBGwW3BC,QAAS,CACLG,SAKL,SAASmG,KACZ,MAAO,CACHvG,KH/WiC,6BGmXlC,SAAS+D,GAAgBxD,GAC5B,OAAO,SAACoB,GACJA,EAPG,CACH3B,KH/WiC,8BD6Ef,SAACO,GAAD,OACtBG,IAAMI,IAAN,UAAaT,EAAb,WAAgCC,EAAYC,IIwSxCiG,CAAWjG,GACN4B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS2E,GAAkBnG,OAE9BmC,OAAM,SAAAlB,GACkB,MAAjBA,EAAME,QACNK,EAASD,SAMtB,SAAS+E,GAAoBrG,GAChC,MAAO,CACHJ,KH1V0B,qBG2V1BC,QAAS,CACLyG,mBAAoBtG,EAAK4D,UAK9B,SAAS2C,GAAwBvG,GACpC,MAAO,CACHJ,KHlWkC,6BGmWlCC,QAAS,CACLyG,mBAAoBtG,EAAK4D,UAK9B,SAAS4C,KACZ,MAAO,CACH5G,KH7WkC,8BGiXnC,SAAS6G,GAAiBtG,EAAOH,EAAMsF,GAC1C,OAAO,SAAC/D,GACJA,EAPG,CACH3B,KH7WkC,+BDqBR,SAACO,EAAOH,EAAMsF,GAAd,OAC9BhF,IAAM0E,IAAN,UAAa/E,EAAb,wBAAqCqF,GAAQtF,EAAM,CAC/CI,QAAS,CACL,eAAgB,sBAChB,cAAgB,UAAhB,OAA2BD,MI2V/BuG,CAAmBvG,EAAOH,EAAMsF,GAC3BvD,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS8E,GAAoBtG,IAC7BwB,EAASoC,GAAgBxD,OAE5B+B,OAAM,SAAAlB,GAC2B,MAA1BA,EAAMjB,SAASmB,OACfK,EAASD,KAGTC,EAASgF,GAAwBvF,EAAMjB,SAASC,WAM7D,SAAS2G,GAAclH,GAC1B,MAAO,CACHG,KHvbsB,iBGwbtBC,QAAS,CACL+G,YAAanH,IAKlB,SAASoH,GAAoBpH,GAChC,OAAO,SAAC8B,GACJA,EAASoF,GAAclH,KCjc/B,IAAMqH,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,OAAQ,CACJC,OAAQF,EAAME,OAAOC,OAAS,GAElCC,UAAW,CACPC,gBAAiBL,EAAMM,QAAQC,QAAQC,MAE3CC,KAAM,CACFC,SAAU,GACVC,YAAa,IAEjBlD,MAAO,CACHmD,SAAU,GAEdC,QAAQ,eACHb,EAAMc,YAAYC,KAAK,MAAQ,CAC5BC,UAAW,KAGnBC,OAAO,aACHC,aAAc,GACblB,EAAMc,YAAYK,GAAG,MAAQ,CAC1BC,QAAS,SAGjBC,KAAK,CACDC,MAAO,aAgDAC,oBA5Cf,SAAyB9I,GACrB,MAAO,CACH+I,WAAY/I,EAAMO,KAAKwI,WACvBC,iBAAkBhJ,EAAMiJ,KAAKD,iBAC7BE,gBAAiBlJ,EAAMiJ,KAAKC,gBAC5BC,cAAenJ,EAAMiJ,KAAKE,cAC1BC,gBAAiBpJ,EAAMqJ,MAAMN,WAC7BO,aAActJ,EAAMqJ,MAAMC,iBAIP,SAACxH,GAAD,OAAcyH,YAAmBC,EAAgB1H,KAiC7DgH,EA/Bf,SAAgBW,GACZ,IAAMC,EAAUrC,KAKhB,OACI,kBAACsC,EAAA,EAAD,CAAQC,SAAS,QAAQC,UAAWH,EAAQlC,QACxC,yBAAKqC,UAAWH,EAAQ/B,WACpB,kBAACmC,EAAA,EAAD,CAASD,UAAWH,EAAQtB,SACxB,yBAAK2B,IAAI,mBAAmBC,IAAI,cAAcH,UAAWH,EAAQ1B,OACjE,kBAACiC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWH,EAAQ1E,OAA5C,eAIIyE,EAAMP,gBAAkB,kBAACiB,EAAA,EAAD,CACpBC,QAAS,kBAAMX,EAAMrC,qBAAoB,IACzCyC,UAAWH,EAAQlB,QAEnB,kBAAC,IAAD,CAAUqB,UAAWH,EAAQd,QACjB,OAjBRa,EAAMV,YAAcU,EAAMT,kBAClDS,EAAMN,eAAiBM,EAAMH,aAqBH,kBAACe,EAAA,EAAD,CAAgBxB,MAAM,cAAgB,S,qGCpCzDyB,GA5CA,SAAA/C,GAAK,MAAK,CACrBG,OAAO,aACH6C,MAAO,IACPC,WAAY,GACXjD,EAAMc,YAAYC,KAAK,MAAQ,CAC5BiC,MAAO,IACPE,WAAY,OACZvC,YAAa,SAGrBwC,YAAY,aACRH,MAAO,KACNhD,EAAMc,YAAYC,KAAK,MAAQ,CAC5BiC,MAAO,IACPE,WAAY,OACZvC,YAAa,SAGrByC,WAAY,CACRxC,SAAU,EACVyC,UAAW,OACXC,WAAY,GAEhBC,YAAa,CACTC,QAAS,GAEb3C,QAASb,EAAMyD,OAAO5C,QACtB6C,gBAAiB,CACbC,OAAQ3D,EAAM4D,QAAQ,IAE1B3C,OAAQ,CACJ4C,MAAO,SAEXC,QAAS,CACLC,MAAO,QAEXC,WAAY,CACVL,OAAQ,QAEVM,MAAM,CACFtD,YAAa,U,yOCoBDuD,MAAW,SAAClE,GAAD,MAAY,CACvCiE,MAAO,CACH5D,gBAAiB,UACjBiB,MAAO,UACP6C,UAAU,aAAD,OAAenE,EAAMM,QAAQ8D,WAAWC,OACjD,WAAY,CACRhC,SAAU,WACViC,KAAM,EACNC,MAAO,EACPvB,MAAO,OACPW,OAAQ,OACRa,aAAc,MACdC,UAAW,oCACXC,OAAQ,yBACRC,QAAS,OAGjB,oBAAqB,CACjB,KAAM,CACFC,UAAW,YACXC,QAAS,GAEb,OAAQ,CACJD,UAAW,aACXC,QAAS,OAxBDX,CA2BhBY,MAUJ,IAKMC,G,8MAEFC,UAAY,SAACC,GAAD,OAAOA,EAAI,GAAM,IAAMA,EAAKA,G,EAuCxCC,aAAe,WACX,IACI,GAAG,EAAKhD,MAAMlJ,KACV,OAAO,EAAKkJ,MAAMlJ,KAAKS,QAAU,EAAKyI,MAAMiD,YAAYC,OAAO3L,MAGvE,MAAOuB,GACH,OAAO,EAEX,OAAO,G,yEA9CHqK,GACJ,IAAIC,EAAID,EAAKE,WACTC,EAAIH,EAAKI,aAGb,OAAOH,EAAI,KADXE,EAAIE,KAAKV,UAAUQ,M,oCAITG,IACVA,EAAI,IAAIC,KAAKA,KAAKC,IAAIF,EAAEG,cAAeH,EAAEI,WAAYJ,EAAEK,aACrDC,WAAWN,EAAEO,aAAe,GAAKP,EAAEQ,aAAa,IAElD,IAAIC,EAAY,IAAIR,KAAKA,KAAKC,IAAIF,EAAEU,iBAAiB,EAAE,IACnDC,EAASC,KAAKC,OAAUb,EAAIS,GAAa,MAAY,GAAG,GAE5D,MAAO,CAACT,EAAEU,iBAAkBC,K,oCAGlBjB,GAEV,IAAMoB,EAAM,IAAIb,KACVc,EAAU,IAAId,KAAKP,EAAKsB,WAAWC,SAAS,EAAG,EAAG,EAAG,KAAO,IAAIhB,KAAKa,EAAIE,WAAWC,SAAS,EAAG,EAAG,EAAG,GACtGC,EAAanB,KAAKoB,cAAczB,GAAM,KAAOK,KAAKoB,cAAcL,GAAK,IACvEf,KAAKoB,cAAczB,GAAM,KAAOK,KAAKoB,cAAcL,GAAK,GAEtDM,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE7F,OAAGL,EAAgBhB,KAAKiB,QAAQtB,GACxBwB,EAJK,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAIxBxB,EAAK2B,UAE9B3B,EAAKgB,mBAAqBI,EAAIJ,iBACtBU,EAAO1B,EAAKU,YAAc,IAAMV,EAAKW,UACpCe,EAAO1B,EAAKU,YAAc,IAAMV,EAAKW,UAAY,KAAOX,EAAKgB,mB,+BAiBxE,IAAD,OACE3I,EAAQgI,KAAKxD,MAAMxE,MACjByE,EAAYuD,KAAKxD,MAAjBC,QACF8E,EAAsC,OAArBvB,KAAKxD,MAAMc,MAAiB,GAAK,GAExD,OAAG0C,KAAKxD,MAAMlJ,MAAQ0E,EAEd,kBAACwJ,GAAA,EAAD,CAAU5E,UAAWH,EAAQgF,SAAUlG,QAAM,EAACmG,SAAU1B,KAAKxD,MAAMkF,SAAUvE,QAAS6C,KAAKxD,MAAMW,SAErE,SAApB6C,KAAKxD,MAAMtJ,KAAkB,kBAACyO,GAAA,EAAD,CAAgB/E,UAAWH,EAAQmF,gBAC5D,yBAAKhF,UAAWH,EAAQoF,iBAEhB7J,EAAM,GAAG8J,cAAgB,kBAACC,GAAA,EAAD,CACjBjF,INvKpB,GMuKoC9E,EAAM,GAAG8J,gBAE7B,kBAACC,GAAA,EAAD,CAAQnF,UAAWH,EAAQuF,QACtBhK,EAAM,GAAGnC,KAAKoM,OAAO,GAAGC,cAAgB,IAAMlK,EAAM,GAAGlC,QAAUkC,EAAM,GAAGlC,QAAQmM,OAAO,GAAGC,cAAgB,OAI7G,kBAACC,GAAA,EAAD,CAAaC,IAAK,GAE9BpC,KAAKxD,MAAM6F,WAAa,kBAACN,GAAA,EAAD,CAChBjF,INjLhB,GMiLgCkD,KAAKxD,MAAM6F,WAC3BzF,UAAWH,EAAQ6F,iBAE3BtK,EAAMuK,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAAgB,kBAACX,GAAA,EAAD,CAClCY,IAAKD,EACL5F,IAAK2F,EAAKX,cNtLtB,GMsLkDW,EAAKX,cAAiB,KAC5DlF,UAAW5E,EAAM4K,OAAS,EAAInG,EAAQoG,YAAcpG,EAAQqG,cAE1DL,EAAKX,cAE0D,KAD7DW,EAAK5M,KAAKoM,OAAO,GAAGC,cAAgB,IACnCO,EAAK3M,QAAU2M,EAAK3M,QAAQmM,OAAO,GAAGC,cAAgB,SAO3E,kBAACa,GAAA,EAAD,CACIlI,QAA6B,SAApBmF,KAAKxD,MAAMtJ,KAChB,2BAAI8E,EAAM,GAAGnC,KAAO,KAAOmC,EAAM,GAAGlC,QAAUkC,EAAM,GAAGlC,QAAU,KACjE,2BAAIkK,KAAKxD,MAAMwG,WACnBC,UACI,kBAAC,IAAMC,SAAP,KAEQlD,KAAKxD,MAAMiD,YAAYvI,QAAQiM,OAAO,EAAG5B,IAAoBvB,KAAKxD,MAAMiD,YAAYvI,QAAQ0L,OAASrB,EAAiB,MAAQ,KAI1I3E,UAAW5E,EAAM4K,OAAS,GAAK5K,EAAM4K,OAAS,EAAInG,EAAQ2G,UAAY3G,EAAQ4G,aAGlF,0BAAMzG,UAAWH,EAAQ6G,MAEjBtD,KAAKxD,MAAMiD,YAAY8D,UACnBvD,KAAKwD,cAAc,IAAItD,KAAKuD,SAASzD,KAAKxD,MAAMiD,YAAY8D,aAC1D,MAIU,SAApBvD,KAAKxD,MAAMtJ,OAAoB8M,KAAKxD,MAAMkH,kBAAoB1D,KAAKR,gBAAkBQ,KAAKxD,MAAMiD,YAAYvI,QAAQ0L,OAAS,EACzH,kBAAC,KAAD,CAA2BhH,MAAM,UAAUgB,UAAWH,EAAQkH,eAAkB,KAGhE,UAApB3D,KAAKxD,MAAMtJ,OAAqB8M,KAAKR,gBACrCQ,KAAKxD,MAAMoH,UAAUC,MAAK,SAAApB,GAAI,OAAIA,EAAK1O,QAAU,EAAKyI,MAAMlJ,KAAKS,SAC7D,kBAAC,KAAD,CACI6H,MAAM,UACNgB,UAAWH,EAAQkH,eAClB,MAIb,S,GAhIMG,IAAMC,WAsIjBlI,iBAnJf,SAAyB9I,GACrB,MAAO,CACH+I,WAAY/I,EAAMO,KAAKwI,WACvBrI,MAAOV,EAAMiJ,KAAKvI,MAClBH,KAAMP,EAAMO,KAAKA,SAIE,SAACuB,GAAD,MAAe,CACtCmP,SAAU,SAACvQ,GAAD,OAAWoB,EAASsB,EAAe1C,KAC7CwQ,UAAW,SAACxQ,GAAD,OAAWoB,EAASoC,GAAgBxD,QAyIpCoI,CAA6CqI,eAAY1F,MA9NzD,SAAAlE,GAAK,MAAK,CACrBmH,SAAU,CACN9E,SAAU,WACV,iBAAkB,CACdhC,gBAAiB,sCAGzB2I,KAAM,CACFa,SAAU,OACVC,WAAY,uBACZzH,SAAU,WACV0H,MAAO,OACPzF,IAAK,OACLhD,MAAOtB,EAAMM,QAAQ0J,KAAKrB,WAE9BJ,YAAa,CACTrF,WAAY,QACZ,gBAAiB,CACbA,WAAY,SAGpBsF,aAAc,CACVtF,WAAY,QACZ,gBAAiB,CACbA,WAAY,SAGpB4F,UAAW,CACP5F,WAAY,OAEhB6F,WAAY,CACR7F,WAAY,OAEhBmG,aAAc,CACVhH,SAAU,WACV0H,MAAO,OACPzF,IAAK,QAET0D,eAAgB,CACZ9E,YAAa,GAEjBoE,eAAgB,CACZ2C,SAAU,MAoLsD/F,CAAmBa,M,oBC/MpF,SAASmF,GAAqBlR,GAEjC,MAAO,CACHJ,KPiB8B,yBOhB9BC,QAAS,CACLG,SAKL,SAASmR,KACZ,MAAO,CACHvR,KPSoC,gCOLrC,SAASwR,GAAmBjR,EAAOkR,GACtC,OAAO,SAAC9P,GACJA,EAPG,CACH3B,KPSoC,iCDlBb,SAACO,GAAD,OAC3BG,IAAMI,IAAN,UAAaT,EAAb,SAA8BC,EAAYC,IQetCmR,CAAgBnR,GACX4B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS2P,GAAqBnR,IAC3BsR,GAAcA,EAAatR,MAEjCmC,OAAM,SAAAlB,GACkB,MAAjBA,EAAME,QACNK,EAASD,SAOtB,SAASiQ,GAAmBvR,GAM/B,MAAO,CACHJ,KPjBwB,mBOkBxBC,QAAS,CACLG,KARUA,EAAKA,KASfkB,OARO,CACX0C,QAAS5D,EAAK4D,QACd1C,OAAQ,QAWT,SAASsQ,GAAkBxR,GAK9B,MAAO,CACHJ,KP9BgC,2BO+BhCC,QAAS,CACLqB,OAPO,CACX0C,QAAS5D,EAAK4D,QACd1C,OAAQ,QAUT,SAASuQ,KACZ,MAAO,CACH7R,KPzCgC,4BO6CjC,SAAS8R,KACZ,MAAO,CACH9R,KP5C8B,yBO6C9BC,QAAS,CACLqB,OAAQ,OAKb,SAASyQ,GAAexR,EAAOsD,GAClC,OAAO,SAAClC,GACJA,EAhBG,CACH3B,KPzCgC,6BDjBR,SAACO,EAAOsD,GAAR,OAC5BnD,IAAM0E,IAAN,UAAa/E,EAAb,SAA8BwD,EAAMvD,EAAYC,IQyE5CyR,CAAiBzR,EAAOsD,GACnB1B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAASgQ,GAAmBxR,IAC5BwB,EAAS6P,GAAmBjR,OAE/B+B,OAAM,SAAAlB,GAC2B,MAA1BA,EAAMjB,SAASmB,OACfK,EAASD,KAGTC,EAASiQ,GAAkBxQ,EAAMjB,SAASC,WAOvD,SAASqG,GAAoBrG,GAMhC,MAAO,CACHJ,KP5EyB,oBO6EzBC,QAAS,CACLG,KARUA,EAAKA,KASfkB,OARO,CACX0C,QAAS5D,EAAK4D,QACd1C,OAAQ,QAWT,SAAS2Q,GAAuB7R,GAKnC,MAAO,CACHJ,KPzFiC,4BO0FjCC,QAAS,CACLqB,OAPO,CACX0C,QAAS5D,EAAK4D,QACd1C,OAAQ,QAUT,SAAS4Q,KACZ,MAAO,CACHlS,KPpGiC,6BOwGlC,SAASmS,GAAgB5R,EAAOH,GACnC,OAAO,SAACuB,GACJA,EAPG,CACH3B,KPpGiC,8BDnBR,SAACO,EAAOH,GAAR,OAC7BM,IAAM0E,IAAN,UAAa/E,EAAb,eAAoCD,EAAM,CACtCI,QAAS,CACL,eAAgB,sBAChB,cAAgB,UAAhB,OAA2BD,MQ0H/B6R,CAAkB7R,EAAOH,GACpB+B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS8E,GAAoBtG,OAEhCmC,OAAM,SAAAlB,GAC2B,MAA1BA,EAAMjB,SAASmB,OACfK,EAASD,KAGTC,EAASsQ,GAAuB7Q,EAAMjB,SAASC,WAM5D,SAASiS,KACZ,MAAO,CACHrS,KPpHgC,4BOwHjC,SAASsS,GAAiBlS,GAC7B,MAAO,CACHJ,KP3H0B,qBO4H1BC,QAAS,CACL6E,MAAO1E,IAKZ,SAASmS,KACZ,MAAO,CACHvS,KPlIwB,oBOsIzB,SAASwS,GAAejS,EAAOM,GAClC,OAAO,SAACc,GACJA,EAtBG,CACH3B,KPpHgC,6BDpBV,SAACO,EAAOM,GAAR,OAC1BH,IAAMI,IAAN,UAAaT,EAAb,kBAA+BQ,GAASP,EAAYC,IQ6JhDkS,CAAelS,EAAOM,GACjBsB,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAAS2Q,GAAiBnS,OAE7BmC,OAAM,SAAAlB,GACHO,EAASD,SAKlB,SAASgR,KACZ,MAAO,CACH1S,KPnJ4C,gCOuJ7C,SAAS2S,GAAiCvS,GAM7C,MAAO,CACHJ,KP7J4C,uCO8J5CC,QAAS,CACLqB,OARO,CACX0C,QAAS5D,EAAK4D,QACd1C,OAAQ,QAWT,SAASsR,GAA6BxS,GACzC,MAAO,CACHJ,KPxKsC,iCOyKtCC,QAAS,CACL4S,iBAAkBzS,IAKvB,SAAS0S,KACZ,MAAO,CACH9S,KP9KoC,gCOkLrC,SAAS+S,GAA0BlS,GACtC,OAAO,SAACc,GACJA,EApCG,CACH3B,KPnJ4C,iCDrBV,SAACa,GAAD,OACtCH,IAAMI,IAAN,UAAaT,EAAb,iBAA8BQ,GAAS,CACnCL,QAAS,CACL,eAAgB,sBQyMpBwS,CAA2BnS,GACtBsB,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EAASiR,GAA6BzS,OAEzCmC,OAAM,SAAAlB,GACHO,EAASgR,GAAiCvR,EAAMjB,SAASC,WAKlE,SAAe6S,GAAtB,qC,gDAAO,WAA+BpP,EAAMqP,GAArC,gBAAAC,EAAA,sDAEG5S,EAAQU,aAAa2C,QAAQ,SAEnChD,EAAkBL,EAAOsD,GACpB1B,KAAKjC,GACLiC,MAAK,SAAAhC,GACF+S,EAAU/S,EAASiT,WAPxB,4C,sBCxPP,IAwCIC,IAAU,EAERC,GAAchI,MAAW,SAAClE,GAAD,MAAY,CACvCiE,MAAO,CACH5D,gBAAiB,UACjBiB,MAAO,UACP6C,UAAU,aAAD,OAAenE,EAAMM,QAAQ8D,WAAWC,OACjD,WAAY,CACRhC,SAAU,WACViC,KAAM,EACNC,MAAO,EACPvB,MAAO,OACPW,OAAQ,OACRa,aAAc,MACdC,UAAW,oCACXC,OAAQ,yBACRC,QAAS,OAGjB,oBAAqB,CACjB,KAAM,CACFC,UAAW,YACXC,QAAS,GAEb,OAAQ,CACJD,UAAW,aACXC,QAAS,OAxBDX,CA2BhBY,MAYEqH,G,YAEF,WAAYjK,GAAQ,IAAD,+BACf,8CAAMA,KAyBV4J,UAAY,SAAC5R,GACT,EAAKkS,SAAS,CAACJ,OAAQ9R,KA3BR,EA8BnB8K,UAAY,SAACC,GAAD,OAAOA,EAAI,GAAM,IAAMA,EAAKA,GA9BrB,EAwCnBiE,cAAgB,SAACD,GAEb,IAAM5D,EAAO,IAAIO,KAAKuD,SAASF,IACzBxC,EAAM,IAAIb,KAGVmB,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE7F,OAHgB,IAAInB,KAAKP,EAAKsB,WAAWC,SAAS,EAAG,EAAG,EAAG,KAAO,IAAIhB,KAAKa,EAAIE,WAAWC,SAAS,EAAG,EAAG,EAAG,GAGzF,EAAKD,QAAQtB,GAEzBA,EAAKgB,mBAAqBI,EAAIJ,iBACtBU,EAAO1B,EAAKU,YAAc,IAAMV,EAAKW,UAAY,KAAO,EAAKW,QAAQtB,GACpE0B,EAAO1B,EAAKU,YAAc,IAAMV,EAAKW,UAAY,KAAOX,EAAKgB,kBAjD7E,EAAK5N,MAAQ,CACTuT,QAAQ,GAJG,E,mFASC,IAAD,OACZtG,KAAKxD,MAAMzF,MACVoP,GAAgBnG,KAAKxD,MAAMzF,KAAKhD,MAAOiM,KAAKoG,WAEhDO,GAAOC,GAAG,uBAAuB,SAACtT,GAC3B,EAAKkJ,MAAMzF,MAAQzD,EAAKyD,OAAS,EAAKyF,MAAMzF,KAAKhD,QAChDoS,GAAgB,EAAK3J,MAAMzF,KAAKhD,MAAO,EAAKqS,WAC5C,EAAK5J,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC/B,EAAK+I,MAAMyH,UAAU,EAAKzH,MAAM/I,a,6CAMxCkT,GAAOE,mBAAmB,yB,8BAStBlH,GACJ,IAAIC,EAAID,EAAKE,WACTC,EAAIH,EAAKI,aAGb,OAAOH,EAAI,KADXE,EAAIE,KAAKV,UAAUQ,M,+BAoBd,IAAD,OAEIrD,EAAYuD,KAAKxD,MAAjBC,QAEF1F,EAAOiJ,KAAKxD,MAAMzF,KAExB,OAAGA,GAEKwP,IAAWvG,KAAKxD,MAAMsK,cAAgB/P,EAAKhD,QAC3CoS,GAAgBpP,EAAKhD,MAAOiM,KAAKoG,WACjCG,IAAU,GAIV,kBAAC/E,GAAA,EAAD,CACI5E,UAAWoD,KAAKxD,MAAMuK,YAActK,EAAQuK,gBAAkBvK,EAAQgF,SACtEtE,QAAS6C,KAAKxD,MAAMuK,YAAc,kBAAM,EAAKvK,MAAMuK,YAAYhQ,EAAKhD,QAAS,KAC7EwH,SAAUyE,KAAKxD,MAAMuK,YACrBrF,SAAU1B,KAAKxD,MAAMkF,UAErB,kBAACC,GAAA,EAAD,KAEQ3B,KAAKjN,MAAMuT,OAAS,yBAAK1J,UAAWH,EAAQoF,iBACxC,kBAAC,GAAD,CACIoF,QAAQ,SACRC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBnK,QAAQ,OAGJlG,EAAK+K,cAAgB,kBAACC,GAAA,EAAD,CACbjF,IR3LxB,GQ2LwC/F,EAAK+K,cACrBlF,UAAWH,EAAQuF,SAEvB,kBAACD,GAAA,EAAD,CAAQnF,UAAWH,EAAQuF,QACtBjL,EAAKlB,KAAKoM,OAAO,GAAGC,cAAgB,IAAMnL,EAAKjB,QAAUiB,EAAKjB,QAAQmM,OAAO,GAAGC,cAAgB,OAI5G,yBAAKtF,UAAWH,EAAQoF,iBAEzB9K,EAAK+K,cAAgB,kBAACC,GAAA,EAAD,CACbjF,IRtMpB,GQsMoC/F,EAAK+K,cACrBlF,UAAWH,EAAQuF,SAEvB,kBAACD,GAAA,EAAD,CAAQnF,UAAWH,EAAQuF,QACtBjL,EAAKlB,KAAKoM,OAAO,GAAGC,cAAgB,IAAMnL,EAAKjB,QAAUiB,EAAKjB,QAAQmM,OAAO,GAAGC,cAAgB,OAMzH,kBAACa,GAAA,EAAD,CACIlI,QAAS,2BAAI9D,EAAKlB,KAAO,KAAOkB,EAAKjB,QAAUiB,EAAKjB,QAAU,KAC9DmN,UACI,kBAAC,IAAMC,SAAP,KACKlD,KAAKjN,MAAMuT,OAASvP,EAAKhD,MAAS,cAAgBiM,KAAKwD,cAAczM,EAAKsQ,cAKnFrH,KAAKxD,MAAM8K,YAActH,KAAKxD,MAAM8K,aAAevQ,EAAKhD,MAAQ,kBAAC,KAAD,CAC5D6H,MAAM,UACN2L,aAAa,QACb3K,UAAWH,EAAQ+K,QAClB,OAKT,S,GAlIS1D,IAAMC,WAuIpBlI,iBAjJS,SAAC9I,GAAD,MAAY,CAChCU,MAAOV,EAAMiJ,KAAKvI,MAClBqT,YAAa/T,EAAMiJ,KAAKjI,UAGD,SAACc,GAAD,MAAe,CACtCmP,SAAU,SAACvQ,GAAD,OAAWoB,EAASsB,EAAe1C,KAC7CwQ,UAAW,SAACxQ,GAAD,OAAWoB,EAASoC,GAAgBxD,QA0IpCoI,CAA6C2C,MAxN7C,SAAAlE,GAAK,MAAK,CACrBmH,SAAU,CACN9E,SAAU,WACV,iBAAkB,CACdhC,gBAAiB,sCAGzBqM,gBAAiB,CACbrK,SAAU,WACV8K,OAAQ,UACR,iBAAkB,CACd9M,gBAAiB,sCAGzB2I,KAAM,CACFa,SAAU,OACVC,WAAY,uBACZzH,SAAU,WACV0H,MAAO,OACPzF,IAAK,OACLhD,MAAOtB,EAAMM,QAAQ0J,KAAKrB,WAE9BjB,OAAQ,CAEJ0F,YAAapN,EAAMM,QAAQ0J,KAAKqD,UAEpCH,MAAO,CACH,SAAU,CACN7K,SAAU,WACVuC,UAAW,SAGnB2C,gBAAiB,CACbnG,QAAS,OACT,QAAS,CACLkM,OAAQtN,EAAM4D,QAAQ,QAqL0BM,CAAmBiI,K,8CClMzEoB,G,sLAEO,IAAD,OACIpL,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,kBAACqL,GAAA,EAAD,CACIC,OAAO,OACPC,KAAMhI,KAAKxD,MAAMtC,YACjB+N,QAAS,kBAAM,EAAKzL,MAAMrC,qBAAoB,IAC9CyC,UAAW,WAAaH,EAAQhC,OAChCwC,QAA8B,OAArB+C,KAAKxD,MAAMc,MAAiB,YAAc,YACnDb,QAAS,CACLkC,MAAOlC,EAAQgB,cAMnB,yBAAKb,UAAgC,OAArBoD,KAAKxD,MAAMc,MAAiBb,EAAQtB,QAAUsB,EAAQuB,iBAClE,kBAACd,EAAA,EAAD,CAAYC,QAAS,kBAAM,EAAKX,MAAMrC,qBAAoB,IAAQyC,UAAWH,EAAQlB,QACjF,kBAAC,KAAD,OAEJ,kBAAC2M,GAAA,EAAD,CAAStL,UAAWH,EAAQ2B,WAEhC,kBAAC+J,GAAA,EAAD,CACIC,WAAS,EACTxM,MAAM,UACNgB,UAAWH,EAAQ6B,WACnBnB,QAAS6C,KAAKxD,MAAM6L,kBAJxB,gBAOA,kBAACC,GAAA,EAAD,CAAM1L,UAAWH,EAAQiB,YAEjBsC,KAAKxD,MAAM+L,SACPvI,KAAKxD,MAAM+L,SAASC,MAAK,SAACC,EAAOC,GAAR,OACrBC,WAAWD,EAAME,YAAcD,WAAWF,EAAMG,eAC/CpG,KAAI,SAAC5J,EAAMiQ,GAAP,OACD,kBAAC,GAAD,CACIlG,IAAKkG,EACL3V,KAAM0F,EAAK1F,KACX8P,UAAWpK,EAAKb,MAChB0H,YAAa7G,EAAKkQ,SAASlG,OAAS,EAAIhK,EAAKkQ,SAASlQ,EAAKkQ,SAASlG,OAAS,GAAK,CAAC1L,QAAS,IAC5Fc,MAAOY,EAAKZ,MAAM+Q,QAAO,SAAAC,GAAK,OAAIA,EAAMjV,QAAU,EAAKyI,MAAM5F,aAC7D8K,SAAU,EAAKlF,MAAMyM,oBAAsBrQ,EAAKxC,QAChD+G,QAAS,WACL,EAAKX,MAAMrC,qBAAoB,GAC/B,EAAKqC,MAAM0M,iBAAiBtQ,EAAKxC,QAAS,EAAKoG,MAAM+L,WAEzD7E,gBAAiB9K,EAAK8K,gBACtBE,UAAWhL,EAAKgL,UAChBvB,WAA0B,UAAdzJ,EAAK1F,KAAmB0F,EAAKuQ,MAAQ,UAExD,MAIjB,yBAAKvM,UAAU,gBACX,kBAACsL,GAAA,EAAD,MACA,kBAAC,GAAD,CACInR,KAAMiJ,KAAKxD,MAAMzF,KACjB+P,YAAa9G,KAAKxD,MAAM5F,YAE5B,kBAAC0R,GAAA,EAAD,CAAM1L,UAAWH,EAAQoB,aACrB,kBAAC2D,GAAA,EAAD,CAAUjG,QAAM,EAAC4B,QAAS6C,KAAKxD,MAAM4M,oBACjC,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACtG,GAAA,EAAD,CAAclI,QAAQ,gBAE1B,kBAAC2G,GAAA,EAAD,CAAUjG,QAAM,EAAC4B,QAAS6C,KAAKxD,MAAM8M,qBACjC,kBAACD,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACtG,GAAA,EAAD,CAAclI,QAAQ,aAElBmF,KAAKxD,MAAM+M,aAAevJ,KAAKxD,MAAM+M,YAAYC,SAAS5G,OAAS,EAAI,kBAAC,KAAD,CACnE2E,aAAcvH,KAAKxD,MAAM+M,YAAYC,SAAS5G,OAC9ChH,MAAM,UACNgB,UAAWH,EAAQ8B,QAClB,MAGb,kBAACiD,GAAA,EAAD,CAAUjG,QAAM,EAAC4B,QAAS6C,KAAKxD,MAAMiN,mBACjC,kBAACJ,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACtG,GAAA,EAAD,CAAclI,QAAQ,oB,GAjF5BiJ,IAAMC,WA4FblI,iBA3Gf,SAAyB9I,GACrB,MAAO,CACH+I,WAAY/I,EAAMqJ,MAAMN,WACxB4N,OAAQ3W,EAAMqJ,MAAMsN,OACpBtN,MAAOrJ,EAAMqJ,MAAMA,MACnBxF,UAAW7D,EAAMiJ,KAAKjI,MACtBwV,YAAaxW,EAAM4W,SAASJ,YAC5BrP,YAAanH,EAAMqJ,MAAMlC,gBAIjC,SAA4BrF,GACxB,OAAOyH,YAAmBC,EAAgB1H,KA+F/BgH,CAA6CqI,OAAY1F,KAAWnB,GAAXmB,CAAmBqJ,MCf5ExK,GAnHA,SAAA/C,GAAK,MAAK,CAErB2E,QAAS,CACLhB,OAAQ,sBACRH,QAAS,OACT8L,UAAW,aACXjM,UAAW,SACXL,MAAO,QAGXuM,SAAU,CACN1L,MAAO,QACPE,MAAO,OACPP,QAAS,iBACT8L,UAAW,aACXE,SAAU,aACVC,UAAW,OACXpP,gBAAiBL,EAAMM,QAAQC,QAAQC,KACvCc,MAAO,QACP0B,MAAO,OACPtC,SAAU,QACV8D,aAAc,OACdkL,wBAAyB,EACzB5F,WAAY,SACZzH,SAAU,YAGdsN,WAAY,CACR9L,MAAO,OACPE,MAAO,OACPP,QAAS,iBACT8L,UAAW,aACXE,SAAU,aACVC,UAAW,OACXpP,gBAAiB,QACjBiB,MAAOtB,EAAMM,QAAQ0J,KAAKzJ,QAC1ByC,MAAO,OACPtC,SAAU,QACV8D,aAAc,OACdoL,oBAAqB,EACrB9F,WAAY,SACZzH,SAAU,YAEd2G,KAAM,CACF3G,SAAU,WACVwN,OAAQ,MACR9F,MAAO,MACPF,SAAU,QAEdiG,iBAAkB,CACd/L,MAAO,OACPT,WAAY,QAEhBQ,QAAS,CACLd,MAAO,MACPX,SAAU,WACV+B,WAAY,oGACZkJ,OAAQ,cACR3J,OAAQ,OAEZoM,YAAa,CACTzC,OAAQ,EACRjL,SAAU,WACViC,IAAK,MACLC,KAAM,MACNK,UAAW,wBACXvE,gBAAiB,UACjBmD,QAAS,SACTsG,WAAY,uBACZD,SAAU,OACVvI,MAAO,WAEXoG,OAAQ,CACJ/G,YAAa,QAEjBqP,SAAU,CACN9M,WAAY,QAEhB+M,iBAAkB,CACd7O,QAAS,OACT4B,MAAO,OACPkN,WAAY,SACZC,eAAgB,YAEpBC,mBAAoB,CAChBhP,QAAS,OACT4B,MAAO,OACPkN,WAAY,SACZC,eAAgB,cAEpBE,aAAa,CACTC,YAAa,GACbjO,SAAU,WACV,iBAAkB,CACdjB,QAAS,UAGjBmP,QAAS,CACL/M,QAAS,EACTnB,SAAU,WACVkC,KAAM,EACND,IAAK,MACLM,UAAW,mBACXxD,QAAS,OACT,UAAW,CACPf,gBAAiB,2BAGzBmQ,KAAM,CACF,OAAQ,CACJhN,QAAS,M,yCCpFrB,SAAS0F,GAAc7D,GAEnB,IAAMoB,EAAM,IAAIb,KAEVmB,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAE9H,OAHgB,IAAInB,KAAKP,EAAKsB,WAAWC,SAAS,EAAG,EAAG,EAAG,KAAO,IAAIhB,KAAKa,EAAIE,WAAWC,SAAS,EAAG,EAAG,EAAG,GAGzF,QAEZvB,EAAKgB,mBAAqBI,EAAIJ,iBACtBU,EAAO1B,EAAKU,YAAc,IAAMV,EAAKW,UACpCe,EAAO1B,EAAKU,YAAc,IAAMV,EAAKW,UAAY,KAAOX,EAAKgB,iB,IAK3EoK,G,YAEF,WAAYvO,GAAQ,IAAD,+BACf,8CAAMA,KAsDVwO,sBAAwB,SAAC1V,EAAG4B,GACxB,EAAKwP,SAAS,CACVuE,WAAY3V,EAAE4V,cACdC,aAAcjU,EAAQM,MA1DX,EA6DnB4T,uBAAyB,WACrB,EAAK1E,SAAS,CACVuE,WAAY,KACZE,aAAc,QA7DlB,EAAKpY,MAAQ,CACTkY,WAAY,KACZE,aAAc,MALH,E,mFAWf,IAAMzQ,EAAY2Q,SAASC,eAAe,sBACvC5Q,GAAWA,EAAU6Q,SAAS,EAAG7Q,EAAU8Q,cAC9CxL,KAAKoL,2B,2CAIL,IAAM1Q,EAAY2Q,SAASC,eAAe,sBACvC5Q,GAAWA,EAAU6Q,SAAS,EAAG7Q,EAAU8Q,gB,8BAG1C7L,GACJ,IAzCWJ,EAyCPK,EAAID,EAAKE,WACTC,EAAIH,EAAKI,aAGb,OAAOH,EAAI,KADXE,GA5CWP,EA4CGO,GA5CO,GAAM,IAAMP,EAAKA,K,iCAgD/BkM,EAAK5C,GACZ,GAAa,IAAVA,EAAY,CACX,IAGI6C,EAAS,KAIb,OAP2B,IAAIxL,KAAKuD,SAASgI,EAAIlI,YAAYrC,SAAS,EAAG,EAAG,EAAG,KACvD,IAAIhB,KAAKuD,SAASzD,KAAKxD,MAAM5D,KAAKkQ,SAASD,EAAM,GAAGtF,YAAYrC,SAAS,EAAG,EAAG,EAAG,KAKtGwK,EAASlI,GAAc,IAAItD,KAAKuD,SAASgI,EAAIlI,cAC1CmI,EAIP,OAAOlI,GADoB,IAAItD,KAAKuD,SAASgI,EAAIlI,e,gCAK/CkI,EAAK5C,GACX,QAAGA,EAAQ,EAAI7I,KAAKxD,MAAM5D,KAAKkQ,SAASlG,SACd6I,EAAI/L,OAAO3L,QACdiM,KAAKxD,MAAM5D,KAAKkQ,SAASD,EAAM,GAAGnJ,OAAO3L,Q,+BAmB1D,IAAD,OAEG0I,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,yBAAKjF,GAAG,qBAAqBoF,UAAWH,EAAQwC,SAC5C,8BAEQe,KAAKxD,MAAM5D,KAAKkQ,SAAStG,KAAI,SAACmJ,EAAMC,GAAP,OAAkB,yBAAKhP,UAAW,EAAKiP,WAAWF,EAAMC,GAAUnP,EAAQ2N,iBAAkB,KAAMzH,IAAKiJ,GAC/H,EAAKC,WAAWF,EAAMC,GAAU,yBAAKhP,UAAWH,EAAQ2B,SACrD,kBAACpB,EAAA,EAAD,CAAY8O,UAAU,IAAI7O,QAAQ,QAAQL,UAAWH,EAAQ4N,aACxD,EAAKwB,WAAWF,EAAMC,KAEtB,KACT,yBAAKhP,UAAW+O,EAAKjM,OAAO3L,QAAU,EAAKyI,MAAM5F,UAAY6F,EAAQ8N,iBAAmB9N,EAAQiO,oBAExF,EAAKqB,UAAUJ,EAAMC,IAAWD,EAAKjM,OAAO3L,QAAU,EAAKyI,MAAM5F,UAAY,yBAAKgG,UAAWH,EAAQuF,QAE7F2J,EAAKjM,OAAOoC,cAAgB,kBAACC,GAAA,EAAD,CACpBjF,IXjI5B,GWiI4C6O,EAAKjM,OAAOoC,gBAEhC,kBAACC,GAAA,EAAD,KACK4J,EAAKjM,OAAO7J,KAAKoM,OAAO,GAAGC,cAAgB,IAAMyJ,EAAKjM,OAAO5J,QAAU6V,EAAKjM,OAAO5J,QAAQmM,OAAO,GAAGC,cAAgB,MAG7H,0BAAMtF,UAAWH,EAAQ6N,WAEtC,yBAAK1N,UAAW+O,EAAKjM,OAAO3L,QAAU,EAAKyI,MAAM5F,UAAY6F,EAAQkO,aAAe,MAE5EgB,EAAKjM,OAAO3L,QAAU,EAAKyI,MAAM5F,UAAY,kBAACsG,EAAA,EAAD,CACzCN,UAAWH,EAAQoO,QACnB1N,QAAS,SAAC7H,GAAD,OAAO,EAAK0V,sBAAsB1V,EAAGqW,KAE9C,kBAAC,KAAD,OACY,KAEpB,yBACIhJ,IAAKiJ,EACLhP,UAAW+O,EAAKjM,OAAO3L,QAAU,EAAKyI,MAAM5F,UAAY6F,EAAQoN,SAAWpN,EAAQwN,YAElF0B,EAAKzU,QACN,0BAAM0F,UAAWH,EAAQ6G,MAAO,EAAKrC,QAAQ,IAAIf,KAAKuD,SAASkI,EAAKpI,qBAMxF,kBAACyI,GAAA,EAAD,CACIhE,KAAMiE,QAAQjM,KAAKjN,MAAMkY,YACzBiB,SAAUlM,KAAKjN,MAAMkY,WACrBhD,QAASjI,KAAKoL,uBACdxO,UAAWH,EAAQqO,MAEnB,kBAACqB,GAAA,EAAD,CACIhP,QAAS,WACL,EAAKX,MAAM4P,oBAAoB,EAAKrZ,MAAMoY,cAC1C,EAAKC,2BAHb,iB,GA3HDtH,IAAMC,WAwIdlI,iBAnKf,SAAyB9I,GACrB,MAAO,CACH6D,UAAW7D,EAAMiJ,KAAKjI,UAI9B,SAA4Bc,GACxB,OAAOyH,YAAmBC,EAAgB1H,KA4J/BgH,CAA6C2C,KAAWnB,GAAXmB,CAAmBuM,KCnHhE1N,GA5DA,SAAA/C,GAAK,cAAK,CACrB+R,UAAW,CACPpO,OAAQ,OACRvC,QAAS,QAEbuD,SAAO,GACH8K,UAAW,IADR,cAEFzP,EAAMc,YAAYC,KAAK,MAAQ,CAC5B0O,UAAW,GACX9O,YAAa,IAJd,yBAMO,GANP,0BAOQ,QAPR,6BAPS,KAOT,2BASSX,EAAMgS,YAAYC,OAAO,SAAU,CAC3CC,OAAQlS,EAAMgS,YAAYE,OAAOC,MACjCC,SAAUpS,EAAMgS,YAAYI,SAASC,iBAXtC,GAcPC,cAAY,GACR7C,UAAW,IADH,cAEPzP,EAAMc,YAAYC,KAAK,MAAQ,CAC5B0O,UAAW,KAHP,yBAKE,GALF,0BAMG,QANH,4BAOK,GAPL,2BAQIzP,EAAMgS,YAAYC,OAAO,SAAU,CAC3CC,OAAQlS,EAAMgS,YAAYE,OAAOK,QACjCH,SAAUpS,EAAMgS,YAAYI,SAASI,kBAVjC,GAaZC,QAAS,CACL5I,SAAU,OACV6I,KAAM,WAEVC,iBAAkB,CACd3P,MAAO,OACPW,OAAQ,OACRvC,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZ0C,UAAW,SACXhS,SAAU,EACViS,WAAY7S,EAAMgS,YAAYC,OAAO,SAAU,CAC3CC,OAAQlS,EAAMgS,YAAYE,OAAOC,MACjCC,SAAUpS,EAAMgS,YAAYI,SAASC,iBAG7CrI,KAAM,CACF1I,MAAO,WAEXwR,kBAAmB,CACfnP,OAAQ,OACRoP,SAAU,SACV3R,QAAS,OACT4R,cAAe,Y,oDClCRjQ,GAxBA,SAAA/C,GAAK,MAAK,CACrBiT,WAAY,CACRrS,SAAU,EACVP,gBAAiB,QACjBe,QAAS,OACT8O,WAAY,SACZlP,UAAW,OACXwC,QAAS,SACTR,MAAO,oBACP9C,OAAQ,KAEZgT,UAAW,CACP,iBAAkB,CACdC,aAAc,4CAElBnQ,MAAO,OAEX/B,OAAQ,CACJK,MAAO,UACP6L,OAAQ,UACRjK,WAAY,UCddkQ,G,YAEF,WAAYlR,GAAQ,IAAD,+BACf,8CAAMA,KA0CVmR,aAAe,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAAQ,MAAO,IAAIjL,OAAS,GAxC3D,EAAK7P,MAAQ,CACTmE,QAAS,IAGb,EAAK4W,cAAgB,EAAKA,cAAcC,KAAnB,iBAPN,E,wEAYV,IAAD,OAEItR,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,yBAAKG,UAAW,eAAiBH,EAAQ8Q,YACrC,kBAACS,GAAA,EAAD,CACIC,MAAO,CAAErG,OAAQ,GACjBsG,YAAY,wBACZtG,OAAO,SACPhL,UAAWH,EAAQ+Q,UACnBW,QAAS,SAAC7Y,GAAD,OAAO,EAAK8Y,WAAW9Y,IAChC+Y,SAAU,SAAC/Y,GAAD,OAAO,EAAKoR,SAAS,CAACxP,QAAS5B,EAAEgZ,OAAOC,SAElDC,aAAa,MACbhX,GAAG,cACHiX,WAAW,kCACXF,MAAOvO,KAAKjN,MAAMmE,UAEtB,kBAAC,KAAD,CAAMiG,QAAS6C,KAAK8N,cAAelR,UAAWH,EAAQlB,Y,iCAKvDjG,GACU,KAAdA,EAAEoZ,QAAgB1O,KAAK8N,gBACrB9N,KAAK0G,SAAS,CACfxP,QAAS5B,EAAEgZ,OAAOC,U,sCAOnBvO,KAAK2N,aAAa3N,KAAKjN,MAAMmE,WAC5B8I,KAAKxD,MAAMmS,kBAAkB3O,KAAKjN,MAAMmE,QAAS8I,KAAKxD,MAAMoS,kBAC5D5O,KAAK0G,SAAS,CAACxP,QAAS,U,GAlDX4M,IAAMC,WAwDhBvF,QAAWnB,GAAXmB,CAAmBkP,I,kDCTnB7R,oBA1Cf,SAAyB9I,GACrB,MAAO,CACHgJ,iBAAkBhJ,EAAMiJ,KAAKD,iBAC7BtH,WAAY1B,EAAMiJ,KAAKvH,eAI/B,SAA4BI,GACxB,OAAOyH,YAAmBC,EAAgB1H,KAkC/BgH,EA/Bf,SAAsBW,GAElB,IAAMqS,EAAc,WAChBrS,EAAMsS,QAAQ,UAAU,IAG5B,OACI,kBAACC,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZC,QAAS4G,EACTG,kBAAgB,sBAChBC,mBAAiB,6BAEjB,kBAACC,GAAA,EAAD,CAAa1X,GAAG,uBAAuB,WACvC,kBAAC2X,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5X,GAAG,6BAAtB,sCAIJ,kBAAC6X,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAASX,EAAM7H,OAAQiH,MAAM,WAArC,MAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS0R,EAAajT,MAAM,UAAU0T,WAAS,GAAvD,e,8FCNVC,G,YAEF,WAAY/S,GAAQ,IAAD,+BACf,8CAAMA,KAiBVgT,aAAe,SAAAC,GACX,GAAIA,GAASA,EAAM7M,OAAS,EAAG,CAC3B,IAAM8M,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAC5B,EAAKlJ,SAAS,CAAE5J,IAAK4S,EAAOhE,YAEhCgE,EAAOG,cAAcJ,EAAM,MAxBhB,EA6BnBK,cAAgB,SAAAC,GAAK,OAAI,EAAKC,SAAWD,GA7BtB,EA+BnBE,aAAe,SAACC,GAAD,OAAU,EAAKxJ,SAAS,CAAEwJ,UA/BtB,EAqFnBrB,YAAc,WACV,EAAKnI,SAAS,CACV5J,IAAK,OAET,EAAKN,MAAMsS,SAAQ,IAtFnB,EAAK/b,MAAQ,CACT+J,IAAK,KACLoT,KAAM,CACFC,KAAM,IACN7S,MAAO,IACP8S,OAAQ,GAEZ9b,MAAO,IAGX,EAAK+b,WAAa,EAAKA,WAAWtC,KAAhB,iBAClB,EAAKyB,aAAe,EAAKA,aAAazB,KAAlB,iBAdL,E,6EAiCLgC,EAAOG,GACjB,IAAMI,EAASjF,SAASkF,cAAc,UAChCC,EAAST,EAAMU,aAAeV,EAAMzS,MACpCoT,EAASX,EAAMY,cAAgBZ,EAAM9R,OAiB3C,OAhBAqS,EAAOhT,MAAQ4S,EAAK5S,MACpBgT,EAAOrS,OAASiS,EAAKjS,OACTqS,EAAOM,WAAW,MAE1BC,UACAd,EACAG,EAAKY,EAAIN,EACTN,EAAKa,EAAIL,EACTR,EAAK5S,MAAQkT,EACbN,EAAKjS,OAASyS,EACd,EACA,EACAR,EAAK5S,MACL4S,EAAKjS,QAGF,IAAI+S,SAAQ,SAACC,EAASC,GACzBZ,EAAOa,QAAO,SAAAC,GACV,GAAKA,EAAL,CAKA,IAAI9d,EAAO,IAAI+d,SACf/d,EAAKge,OAAO,OAAQF,EAAM,qBAE1BH,EAAQ3d,QAPJie,QAAQjd,MAAM,qBAQnB,mB,+JAOJ0L,KAAKgQ,S,gCACEhQ,KAAKwR,cACPxR,KAAKgQ,SACLhQ,KAAKjN,MAAMmd,MACb7a,MAAK,SAAA/B,GACH,EAAKkJ,MAAMiV,kBAAkBne,GAC7B,EAAKub,iB,6BAGR7O,KAAK0G,SAAS,CACfpS,MAAO,4B,qIAWN,IAEGmI,EAAYuD,KAAKxD,MAAjBC,QAFJ,EAGmCuD,KAAKjN,MAApCmd,EAHJ,EAGIA,KAAMwB,EAHV,EAGUA,gBAAiB5U,EAH3B,EAG2BA,IAE/B,OACI,kBAACiS,GAAA,EAAD,CACI/G,KAAMhI,KAAKxD,MAAMwL,KACjBC,QAASjI,KAAK6O,YACdG,kBAAgB,wBAChBC,mBAAiB,8BACjBjU,SAAS,KACToN,WAAW,GAEX,kBAAC8G,GAAA,EAAD,CAAa1X,GAAG,yBAAyB,oBACzC,kBAAC2X,GAAA,EAAD,KAEQnP,KAAKxD,MAAMlI,OAAS0L,KAAKjN,MAAMuB,MAC3B,kBAAC,KAAD,CAAOqd,SAAS,SACX3R,KAAKxD,MAAMlI,MAAQ0L,KAAKxD,MAAMlI,MAAQ0L,KAAKjN,MAAMuB,OAC3C,KAGd0L,KAAKjN,MAAM+J,IAMP,KANa,kBAAC,KAAD,CACduR,SAAUrO,KAAKwP,aACfoC,cAAe,CAAC,WAChBC,WAAY,EACZC,wBAAwB,EACxBC,cAAetV,EAAQuV,OAG9BlV,GACG,kBAAC,KAAD,CACIA,IAAKA,EACLoT,KAAMA,EACN+B,cAAY,EACZnC,cAAe9P,KAAK8P,cACpBzB,SAAUrO,KAAKiQ,eAGtByB,GACG,yBAAK3U,IAAI,OAAOkR,MAAO,CAAEjT,SAAU,QAAU8B,IAAK4U,KAI1D,kBAACrC,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAAS6C,KAAKqQ,WAAYzU,MAAM,WAAxC,QACA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS6C,KAAK6O,YAAajT,MAAM,UAAU0T,WAAS,GAA5D,gB,GA7IUxL,IAAMC,WAoJrBlI,iBA9Jf,SAAyB9I,GACrB,MAAO,CACHU,MAAOV,EAAMiJ,KAAKvI,UAI1B,SAA4BoB,GACxB,OAAOyH,YAAmBC,EAAgB1H,KAuJ/BgH,CAA6C2C,MA5K7C,SAAAlE,GAAK,MAAK,CACrB0X,KAAM,CACFtW,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZ,MAAO,CACHpG,WAAY,qBACZD,SAAU,OACVvI,MAAOtB,EAAMM,QAAQ0J,KAAKzJ,QAC1BqX,aAAc,OAmKkC1T,CAAmB+Q,K,cC9HzE4C,G,YAEF,WAAY3V,GAAQ,IAAD,+BACf,8CAAMA,KA+BV4V,aAAe,kBAAM,EAAKrf,MAAMgB,MAAM6O,QAAU,GAhC7B,EAiCnByP,gBAAkB,kBAAM,EAAKtf,MAAMoC,SAASyN,QAAU,GAjCnC,EAkCnB0P,YAAc,kBAAM,EAAKvf,MAAMoC,WAAa,EAAKpC,MAAMwf,sBAlCpC,EAoCnB1D,YAAc,WACV,EAAKrS,MAAMsS,QAAQ,WAAW,GAC9B,EAAKtS,MAAMwI,sBACX,EAAK0B,SAAS,CACV8L,YAAa,MAxCF,EA4CnBnC,WAAa,WAET,IAAIoC,EAAU,GAEd,GAAG,EAAK1f,MAAMoC,SAASyN,OAAS,EAAG,CAC/B,IAAI,EAAKyP,kBAML,YALA,EAAK3L,SAAS,CACV8L,YAAa,0CACbrd,SAAU,GACVod,qBAAsB,KAIzB,IAAK,EAAKD,cAMX,YALA,EAAK5L,SAAS,CACV8L,YAAa,yBACbrd,SAAU,GACVod,qBAAsB,KAIzB,IAAK,EAAKH,eAIX,YAHA,EAAK1L,SAAS,CACV8L,YAAa,yCAIhBC,EAAU,CACX5c,KAAM,EAAK9C,MAAM8C,KACjBC,QAAS,EAAK/C,MAAM+C,QACpB/B,MAAO,EAAKhB,MAAMgB,MAClBoB,SAAU,EAAKpC,MAAMoC,eAGxBsd,EAAU,CACX5c,KAAM,EAAK9C,MAAM8C,KACjBC,QAAS,EAAK/C,MAAM+C,QACpB/B,MAAO,EAAKhB,MAAMgB,OAGtB,EAAK2S,SAAS,CAAC8L,YAAa,KAC5B,EAAKhW,MAAMyI,eAAe,EAAKzI,MAAM/I,MAAOgf,IArF7B,EAyFnBC,iBAAmB,SAAC3f,GAAD,OAAW,EAAK2T,SAAS,CACxCiM,oBAAqB5f,KA1FN,EA6FnB0e,kBAAoB,SAACne,GACjB,EAAKkJ,MAAM6I,gBAAgB,EAAK7I,MAAM/I,MAAOH,IA9F9B,EAgNnB8a,WAAa,SAACwE,EAAYC,GACtB,OAAQD,GACJ,IAAK,OACD,EAAKlM,SAAS,CAAE7Q,KAAMgd,EAAMvE,OAAOC,QACnC,MACJ,IAAK,UACD,EAAK7H,SAAS,CAAE5Q,QAAS+c,EAAMvE,OAAOC,QACtC,MACJ,IAAK,QACD,EAAK7H,SAAS,CAAE3S,MAAO8e,EAAMvE,OAAOC,QACpC,MACJ,IAAK,WACD,EAAK7H,SAAS,CAAEvR,SAAU0d,EAAMvE,OAAOC,QACvC,MACJ,IAAK,uBACD,EAAK7H,SAAS,CAAE6L,qBAAsBM,EAAMvE,OAAOC,UA5N3D,EAAKxb,MAAQ,CACT8C,KAAM,GACNC,QAAS,GACT/B,MAAO,GACPoB,SAAU,GACVod,qBAAsB,GACtBC,YAAa,GACbG,qBAAqB,EACrBG,IAAK,IAGT,EAAKzC,WAAa,EAAKA,WAAWtC,KAAhB,iBAClB,EAAKgF,SAAW,EAAKA,SAAShF,KAAd,iBAfD,E,wEAoBVhX,GACLiJ,KAAK0G,SAAS,CACV7Q,KAAMkB,EAAKlB,KACXC,QAASiB,EAAKjB,QACd/B,MAAOgD,EAAKhD,U,0CAKhBiM,KAAKxD,MAAMkI,mBAAmB1E,KAAKxD,MAAM/I,MAAOuM,KAAK+S,Y,+BAoEhD,IAAD,OAEItW,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,kBAACsS,GAAA,EAAD,CACI/G,KAAMhI,KAAKxD,MAAMwL,KACjBC,QAASjI,KAAK6O,YACdG,kBAAgB,uBAChBC,mBAAiB,6BACjBjU,SAAS,KACToN,WAAW,GAEX,kBAAC8G,GAAA,EAAD,CAAa1X,GAAG,wBAAwB,cACxC,kBAAC2X,GAAA,EAAD,MAEQnP,KAAKxD,MAAMhI,QAAYwL,KAAKjN,MAAMyf,YAAY5P,OAAS,EAGxC,KAFX,kBAAC,KAAD,CAAO+O,SAAuC,OAA7B3R,KAAKxD,MAAMhI,OAAOA,OAAkB,UAAY,QAASoI,UAAWH,EAAQlH,OACxFyK,KAAKxD,MAAMhI,OAAO0C,SAI3B8I,KAAKjN,MAAMyf,YACP,kBAAC,KAAD,CAAOb,SAAS,QAAQ/U,UAAWH,EAAQlH,OACtCyK,KAAKjN,MAAMyf,aACL,KAEnB,gCACI,kBAACQ,GAAA,EAAD,CAASjb,MAAM,kCAEPiI,KAAKxD,MAAMlJ,KAAKwO,cAAgB,kBAAC,KAAD,CACxBlF,UAAWH,EAAQuF,OACnBlF,IjB/LhB,GiB+LgCkD,KAAKxD,MAAMlJ,KAAKwO,cAChC3E,QAAS,kBAAM,EAAKuV,kBAAiB,MAEzC,kBAAC,KAAD,CAAQ9V,UAAWH,EAAQuF,OAAQ7E,QAAS,kBAAM,EAAKuV,kBAAiB,MAE/D1S,KAAKjN,MAAM8C,KAAOmK,KAAKjN,MAAM8C,KAAKoM,OAAO,GAAGC,cAAgB,IAAM,IAClElC,KAAKjN,MAAM+C,QAAUkK,KAAKjN,MAAM+C,QAAQmM,OAAO,GAAGC,cAAgB,OAM3F,kBAAC8L,GAAA,EAAD,CACIpG,OAAO,QACPpQ,GAAG,qBACHyb,MAAM,OACN7K,WAAS,EACTmG,MAAOvO,KAAKjN,MAAM8C,KAClBwY,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,OAAQ9Y,IACzCkZ,aAAa,QAEjB,kBAACR,GAAA,EAAD,CACIpG,OAAO,QACPpQ,GAAG,wBACHyb,MAAM,UACN7K,WAAS,EACTmG,MAAOvO,KAAKjN,MAAM+C,QAClBuY,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,UAAW9Y,IAC5CkZ,aAAa,QAEjB,kBAACR,GAAA,EAAD,CACIpG,OAAO,QACPpQ,GAAG,sBACHyb,MAAM,QACN7K,WAAS,EACTmG,MAAOvO,KAAKjN,MAAMgB,MAClBsa,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,QAAS9Y,IAC1CkZ,aAAa,MACb7G,UAAQ,IAEZ,kBAAC3K,EAAA,EAAD,CAAY8O,UAAU,KAAK7O,QAAQ,KAAKL,UAAWH,EAAQwW,OAA3D,oBACA,kBAACjF,GAAA,EAAD,CACIpG,OAAO,QACPpQ,GAAG,yBACHyb,MAAM,eACN7K,WAAS,EACTmG,MAAOvO,KAAKjN,MAAMoC,SAClBkZ,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,WAAY9Y,IAC7CpC,KAAK,WACL0J,UAAWH,EAAQyW,gBAEvB,kBAAClF,GAAA,EAAD,CACIpG,OAAO,QACPpQ,GAAG,sCACHyb,MAAM,mBACN7K,WAAS,EACTmG,MAAOvO,KAAKjN,MAAMwf,qBAClBlE,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,uBAAwB9Y,IACzDpC,KAAK,cAGb,kBAACmc,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAAS6C,KAAKqQ,WAAYzU,MAAM,WAAxC,QAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS6C,KAAK6O,YAAajT,MAAM,UAAU0T,WAAS,GAA5D,UAKJ,kBAAC,GAAD,CACItH,KAAMhI,KAAKjN,MAAM4f,oBACjB7D,QAAS9O,KAAK0S,iBACdjB,kBAAmBzR,KAAKyR,yB,GA5MhB3N,IAAMC,WA0OnBlI,gBAvPf,SAAyB9I,GACrB,MAAO,CACH+I,WAAY/I,EAAMO,KAAKwI,WACvBxI,KAAMP,EAAMO,KAAKA,KACjBkB,OAAQzB,EAAMO,KAAKkB,OACnBf,MAAOV,EAAMiJ,KAAKvI,UAI1B,SAA4BoB,GACxB,OAAOyH,YAAmBC,EAAgB1H,KA6O/BgH,CAA6C2C,MArR7C,SAAAlE,GAAK,MAAK,CACrB0H,OAAQ,CACJ1E,MAAO,IACPW,OAAQ,IACRkG,SAAU,UACVnF,OAAQ,YACR0I,YAAapN,EAAMM,QAAQC,QAAQC,KACnC2M,OAAQ,UACR9K,SAAU,YAEdwW,KAAM,CACF7V,MAAO,QAEX8V,MAAO,CACH,iBAAkB,CACd3F,aAAc,6CAGtBwF,MAAM,CACF9O,SAAU,OACV4F,UAAW,QAEfmJ,cAAe,CACXnJ,UAAW,QAEfxU,MAAO,CACH2c,aAAc,WA2PsC1T,CAAmB2T,K,yCCvQxE,SAASkB,GAAiB5f,GAC7B,OAAO,SAACoB,GACJA,EAPG,CACH3B,KlB+CkC,+BDwBT,SAACO,GAAD,OAC7BG,IAAMI,IAAN,UAAaT,EAAb,aAAkCC,EAAYC,ImBjE1C6f,CAAkB7f,GACb4B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EApBL,CACH3B,KlBuD4B,uBkBtD5BC,QAAS,CACLG,KAiBgCD,QAE/BmC,OAAM,SAAAlB,QA4BZ,SAASif,GAAyB9f,EAAOM,GAC5C,OAAO,SAACc,GACJA,EAbG,CACH3B,KlBoB2C,wCDwBT,SAACO,EAAOM,GAAR,OACtCH,IAAMI,IAAN,UAAaT,EAAb,qBAAkCQ,GAASP,EAAYC,ImBhCnD+f,CAA2B/f,EAAOM,GAC7BsB,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EA1BL,CACH3B,KlB4BqC,gCkB3BrCC,QAAS,CACLG,KAuBwCD,QAEvCmC,OAAM,SAAAlB,QAsBZ,SAASmf,GAAoBhgB,GAChC,OAAO,SAACoB,GACJA,EAPG,CACH3B,KlBZqC,kCDuBT,SAACO,GAAD,OAChCG,IAAMI,IAAN,UAAaT,EAAb,gBAAqCC,EAAYC,ImBL7CigB,CAAqBjgB,GAChB4B,KAAKjC,GACLiC,MAAK,SAAAhC,GACFwB,EApBL,CACH3B,KlBJ+B,0BkBK/BC,QAAS,CACLG,KAiBmCD,QAElCmC,OAAM,SAAAlB,Q,oFCnBJkK,aA9EA,SAAAlE,GAAK,MAAK,CACrBqZ,SAAU,CACNjY,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZT,UAAW,QAEfhT,KAAM,CACF0Q,OAAQ,WAEZnT,MAAO,CACHyV,UAAW,WAmEJvL,EA/Df,SAAiBhC,GAAQ,IACb+R,EAAiB/R,EAAjB+R,MAAO1F,EAAUrM,EAAVqM,MAEPpM,EAAYD,EAAZC,QAER,OACI,yBACImX,OAAQrF,IAAU1F,EAClBrR,GAAE,0BAAqBqR,GACvBmG,kBAAA,qBAA+BnG,IAE9B0F,IAAU1F,GAAS,6BAEZrM,EAAMlI,MACF,kBAAC,KAAD,CAAOqd,SAAS,QAAQ/U,UAAWH,EAAQnI,OACtCkI,EAAMlI,OACA,KAEnB,6BACI,kBAAC,KAAD,CACIsT,OAAO,QACPpQ,GAAG,uBACHyb,MAAM,mBACN7K,WAAS,EACTmG,MAAO/R,EAAMzI,MACbsa,SAAU,SAAC/Y,GAAD,OAAOkH,EAAM4R,WAAW9Y,EAAG,mBACrCkZ,aAAa,QAGbhS,EAAMqX,WAAarX,EAAMzI,MAAM6O,QAAU,EAAI,yBAAKhG,UAAU,cAEpDJ,EAAMqX,UAAUrR,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAAC,GAAD,CACjClG,IAAKkG,EACL9R,KAAMA,EACN6F,UAAWH,EAAQ1F,KACnBgQ,YAAavK,EAAMsX,WACnBpS,SAAUlF,EAAMzI,QAAUgD,EAAKhD,YAGlC,KAGTyI,EAAMqX,WACqB,IAA3BrX,EAAMqX,UAAUjR,QAChBpG,EAAMzI,MAAM6O,QAAU,EAAI,kBAAC,KAAD,KACtB,kBAAC,KAAD,CACIK,UAAW,oFAGL,KAGdzG,EAAMV,WAAa,yBAAKc,UAAWH,EAAQkX,UACvC,kBAAC,KAAD,CAAkB/X,MAAM,aACnB,W,8BCmElB4C,aApIA,SAAAlE,GAAK,MAAK,CACrBqZ,SAAU,CACNjY,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZT,UAAW,QAEfhT,KAAM,CACF0Q,OAAQ,WAEZsM,KAAM,CACFC,UAAW,QACXrW,UAAW,QAEfsV,MAAO,CACH9O,SAAU,OACV4F,UAAW,QAEfkK,KAAM,CACFhZ,YAAa,OAEjB3G,MAAO,CACHyV,UAAW,OA8GJvL,EA1Gf,SAAkBhC,GAAQ,IACd+R,EAAiB/R,EAAjB+R,MAAO1F,EAAUrM,EAAVqM,MAEPpM,EAAYD,EAAZC,QAER,OACI,yBACImX,OAAQrF,IAAU1F,EAClBrR,GAAE,0BAAqBqR,GACvBmG,kBAAA,qBAA+BnG,IAE9B0F,IAAU1F,GAAS,6BAEZrM,EAAMlI,MACF,kBAAC,KAAD,CAAOqd,SAAS,QAAQ/U,UAAWH,EAAQnI,OACtCkI,EAAMlI,OACA,KAGfkI,EAAM0X,WACF,kBAAC,KAAD,CAAOvC,SAAS,QAAQ/U,UAAWH,EAAQnI,OACtCkI,EAAM0X,YACA,KAEnB,6BACI,kBAAC,KAAD,CACItM,OAAO,QACPpQ,GAAG,wBACHyb,MAAM,QACN7K,WAAS,EACTmG,MAAO/R,EAAMwG,UACbqL,SAAU,SAAC/Y,GAAD,OAAOkH,EAAM4R,WAAW9Y,EAAG,UACrCkZ,aAAa,QAGbhS,EAAM2X,cAAcvR,OAAS,EAAI,6BAC7B,kBAAC,KAAD,CAAYhG,UAAWH,EAAQwW,MAAOnH,UAAU,KAAK7O,QAAQ,MAA7D,cAEIT,EAAM2X,cAAc3R,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAACuL,GAAA,EAAD,CACrCzR,IAAKkG,EACLjM,UAAWH,EAAQwX,KACnBjS,OACIjL,EAAK+K,cAAgB,kBAACC,GAAA,EAAD,CACbjF,IpBjFxB,GoBiFwC/F,EAAK+K,gBACpB,kBAACC,GAAA,EAAD,MAEIhL,EAAKlB,KAAOkB,EAAKlB,KAAKoM,OAAO,GAAGC,cAAgB,IAAM,IACtDnL,EAAKjB,QAAUiB,EAAKjB,QAAQmM,OAAO,GAAGC,cAAgB,KAIvE+Q,MAAOlc,EAAKlB,KAAO,IAAMkB,EAAKjB,QAC9BmH,QAAQ,WACRoX,SAAU,kBAAM7X,EAAM8X,mBAAmBvd,EAAKhD,cAGjD,KAEb,kBAAC,KAAD,CACI6T,OAAO,QACPpQ,GAAG,wBACHyb,MAAM,sBACN7K,WAAS,EACTmG,MAAO/R,EAAMzI,MACbsa,SAAU,SAAC/Y,GAAD,OAAOkH,EAAM4R,WAAW9Y,EAAG,oBACrCkZ,aAAa,QAGbhS,EAAM+X,YAAc,yBAAK3X,UAAWH,EAAQsX,MAEpCvX,EAAM+X,YAAY/L,MAAK,SAACgM,EAAUC,GAAX,OACvBD,EAAS3e,KAAO4e,EAAS5e,MAAQ,EAAI,KAChCkT,QAAO,SAAA2L,GAAO,OAAKA,EAAQ7e,KAAO,IAAM6e,EAAQ5e,SAAS6e,cACrDC,SAASpY,EAAMzI,MAAM4gB,kBACzB5L,QAAO,SAAA2L,GAAO,OAAKlY,EAAMqY,WAAWH,MACpClS,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAAC,GAAD,CAClBlG,IAAKkG,EACL9R,KAAMA,EACN6F,UAAWH,EAAQ1F,KACnBgQ,YAAa,kBAAMvK,EAAMsY,cAAc/d,IACvC2K,UAAU,QAGjB,KAGTlF,EAAM+X,aACuB,IAA7B/X,EAAM+X,YAAY3R,OAAe,kBAAC,KAAD,KAC7B,kBAAC,KAAD,CACIK,UAAW,oFAGL,KAGdzG,EAAMV,WAAa,yBAAKc,UAAWH,EAAQkX,UACvC,kBAAC,KAAD,CAAkB/X,MAAM,aACnB,WCzGjC,IAYMmZ,G,YAEF,WAAYvY,GAAQ,IAAD,+BACf,8CAAMA,KAwBV4R,WAAa,SAAC9Y,EAAGpC,GACb,OAAQA,GACJ,IAAK,iBACD,IAAIa,EAAQuB,EAAEgZ,OAAOC,MAClBxa,EAAM6O,QAAU,EACf,EAAKpG,MAAM+W,yBAAyB,EAAK/W,MAAM/I,MAAOM,GAGtD,EAAKyI,MAAMwY,mBAEf,EAAKtO,SAAS,CAAEuO,aAAclhB,IAC9B,MACJ,IAAK,kBACD,EAAK2S,SAAS,CAAEwO,cAAe5f,EAAEgZ,OAAOC,QACxC,MACJ,IAAK,QACD,IAAIxW,EAAQzC,EAAEgZ,OAAOC,MACrB,EAAK7H,SAAS,CAAC1D,UAAWjL,MA1CnB,EAiDnB8W,YAAc,WACV,EAAKrS,MAAMsS,QAAQ,YAAY,GAC/B,EAAKpI,SAAS,CACVuO,aAAc,GACdC,cAAe,GACflS,UAAW,GACXmR,cAAe,GACfgB,WAAY,IAEhB,EAAK3Y,MAAM/F,eACX,EAAK+F,MAAMiJ,kBA3DI,EA8DnB2P,cAAgB,WACZ,GAA6B,IAA1B,EAAKriB,MAAMoiB,WACV,EAAK3Y,MAAM7F,QAAQ,EAAK5D,MAAMkiB,aAAc,EAAKzY,MAAMsS,aAEvD,CAIA,IAHA,IAAI9W,EAAQ,GACRD,EAAQ,EAAKhF,MAAMiQ,UAEdzD,EAAI,EAAGA,EAAI,EAAKxM,MAAMohB,cAAcvR,OAAQrD,IACjDvH,EAAMjD,KAAK,EAAKhC,MAAMohB,cAAc5U,GAAGxL,OAGxCgE,EAAM6K,OAAS,EACd,EAAK8D,SAAS,CACV2O,cAAe,yCAGfrd,EAAM4K,OAAS,EACnB,EAAK8D,SAAS,CACV2O,cAAe,oCAInB,EAAK7Y,MAAM1E,SAASC,EAAOC,EAAO,EAAKwE,MAAMsS,SAC7C,EAAKpI,SAAS,CACV2O,cAAe,QAI3B,EAAK3O,SAAS,CACVuO,aAAc,GACdC,cAAe,GACflS,UAAW,GACXmR,cAAe,MA/FJ,EAqInBmB,aAAe,SAAChgB,EAAGigB,GACf,EAAK7O,SAAS,CAACyO,WAAYI,KAnI3B,EAAKxiB,MAAQ,CACTkiB,aAAc,GACdC,cAAe,GACflS,UAAW,GACXmR,cAAe,GACfgB,WAAY,EACZE,cAAe,MAInB,EAAKjH,WAAa,EAAKA,WAAWL,KAAhB,iBAClB,EAAK+F,WAAa,EAAKA,WAAW/F,KAAhB,iBAClB,EAAKyH,oBAAsB,EAAKA,oBAAoBzH,KAAzB,iBAC3B,EAAK0H,yBAA2B,EAAKA,yBAAyB1H,KAA9B,iBAChC,EAAK2H,kBAAoB,EAAKA,kBAAkB3H,KAAvB,iBAjBV,E,mFAsBf/N,KAAKxD,MAAM6W,iBAAiBrT,KAAKxD,MAAM/I,S,iCA6EhCM,GACPiM,KAAKxD,MAAM+W,yBAAyBvT,KAAKxD,MAAM/I,MAAOM,GACtDiM,KAAK0G,SAAS,CAACuO,aAAclhB,M,0CAGbgD,GAChBiJ,KAAK0G,SAAS,CACVyN,cAAc,GAAD,oBAAMnU,KAAKjN,MAAMohB,eAAjB,CAAgCpd,Q,+CAI5BhD,GACrBiM,KAAK0G,SAAS,CACVyN,cAAenU,KAAKjN,MAAMohB,cAAcpL,QAAO,SAAAhS,GAAI,OAAIA,EAAKhD,QAAUA,S,wCAI5DgD,GACd,IAAI,IAAIwI,EAAI,EAAGA,EAAIS,KAAKjN,MAAMohB,cAAcvR,OAAQrD,IAChD,GAAGS,KAAKjN,MAAMohB,cAAc5U,GAAGxL,QAAUgD,EAAKhD,MAC1C,OAAO,EAIf,OAAO,I,gCAGD8U,GACN,MAAO,CACHrR,GAAG,cAAD,OAAgBqR,GAClB,gBAAgB,mBAAhB,OAAoCA,M,+BAYxC,OACI,kBAACkG,GAAA,EAAD,CACI/G,KAAMhI,KAAKxD,MAAMwL,KACjBC,QAASjI,KAAK6O,YACdG,kBAAgB,wBAChBC,mBAAiB,8BACjBjU,SAAS,KACToN,WAAW,GAEX,kBAAC8G,GAAA,EAAD,CAAa1X,GAAG,yBAAyB,gBACzC,kBAAC2X,GAAA,EAAD,KACI,kBAACwG,GAAA,EAAD,CACIpH,MAAOvO,KAAKjN,MAAMoiB,WAClB9G,SAAUrO,KAAKsV,aACfrY,QAAQ,aAER,kBAAC2Y,GAAA,EAAD,eAAK3C,MAAM,YAAejT,KAAK6V,UAAU,KACzC,kBAACD,GAAA,EAAD,eAAK3C,MAAM,aAAgBjT,KAAK6V,UAAU,MAE9C,kBAAC,GAAD,CACItH,MAAOvO,KAAKjN,MAAMoiB,WAClBtM,MAAO,EACPvU,MAAO0L,KAAKxD,MAAMlI,MAClBP,MAAOiM,KAAKjN,MAAMkiB,aAClB7G,WAAYpO,KAAKoO,WACjByF,UAAW7T,KAAKxD,MAAMqX,UACtBC,WAAY9T,KAAK8T,WACjBhY,WAAYkE,KAAKxD,MAAMV,aAE3B,kBAAC,GAAD,CACIyS,MAAOvO,KAAKjN,MAAMoiB,WAClBtM,MAAO,EACPvU,MAAO0L,KAAKxD,MAAM6Y,cAClBthB,MAAOiM,KAAKjN,MAAMmiB,cAClBlS,UAAWhD,KAAKjN,MAAMiQ,UACtBoL,WAAYpO,KAAKoO,WACjBmG,YAAavU,KAAKxD,MAAM+X,YACxBO,cAAe9U,KAAKwV,oBACpBlB,mBAAoBtU,KAAKyV,yBACzB3Z,WAAYkE,KAAKxD,MAAMV,WACvBqY,cAAenU,KAAKjN,MAAMohB,cAC1BU,WAAY7U,KAAK0V,kBACjBxB,WAAYlU,KAAKjN,MAAMsiB,iBAG/B,kBAAChG,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAAS6C,KAAKoV,cAAexZ,MAAM,WAA3C,OACA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS6C,KAAK6O,YAAajT,MAAM,UAAU0T,WAAS,GAA5D,gB,GA9LQxL,IAAMC,WAqMnBlI,iBA5Nf,SAAyB9I,GACrB,MAAO,CACHU,MAAOV,EAAMiJ,KAAKvI,MAClBa,MAAOvB,EAAMqJ,MAAM1F,aACnB2F,aAActJ,EAAMqJ,MAAMC,aAC1BwX,UAAW9gB,EAAM4W,SAASmM,iBAC1BvB,YAAaxhB,EAAM4W,SAASA,SAC5B7N,WAAY/I,EAAM4W,SAAS7N,eAIR,SAACjH,GAAD,MAAe,CACtC8B,QAAS,SAACC,EAAWC,GAAZ,OAA0BhC,EAAS8B,EAAQC,EAAWC,KAC/DJ,aAAc,kBAAM5B,ElBoEb,CACH3B,KH9DsB,iBG+DtBC,QAAS,CACLuD,aAAc,SkBtEtBoB,SAAU,SAACC,EAAOC,EAAOnB,GAAf,OAA6BhC,EAASiD,GAASC,EAAOC,EAAOnB,KACvE6O,eAAgB,SAACjS,EAAOM,GAAR,OAAkBc,EAAS6Q,GAAejS,EAAOM,KACjE0R,eAAgB,kBAAM5Q,EdgKf,CACH3B,KPlIwB,sBqB9B5BmgB,iBAAkB,SAAA5f,GAAK,OAAIoB,EAASwe,GAAiB5f,KACrD8f,yBAA0B,SAAC9f,EAAOM,GAAR,OAAkBc,EAAS0e,GAAyB9f,EAAOM,KACrFihB,iBAAkB,kBAAMngB,EHwBjB,CACH3B,KlBe0B,2BqBiKnB2I,CAA6C2C,MAhO7C,SAAAlE,GAAK,MAAK,KAgOmCkE,CAAmBuW,KCjIhEvW,aApGA,SAAAlE,GAAK,MAAK,CACrB0H,OAAQ,CACJ1E,MAAO,IACPW,OAAQ,IACRkG,SAAU,UACVnF,OAAQ,YACR0I,YAAapN,EAAMM,QAAQC,QAAQC,KACnC2M,OAAQ,UACR9K,SAAU,YAEdoZ,SAAU,CACNra,QAAS,OACT8O,WAAY,UAEhBwL,KAAM,CACFpL,YAAa,IAEjBqJ,KAAM,CACFlK,UAAW,GAEfkM,QAAS,CACL,WAAY,CACRzY,WAAY,oBA8ETgB,EAzEf,SAAwBhC,GASpB,IAPA,IAAMqS,EAAc,WAChBrS,EAAMsS,QAAQ,aAAa,IAGvBrS,EAAYD,EAAZC,QAEJyZ,EAAiB,GACb3W,EAAI,EAAGA,EAAI/C,EAAMmN,SAAS/G,OAAQrD,IACtC2W,EAAenhB,KAAKyH,EAAMmN,SAASpK,GAAGxL,OAG1C,OACI,kBAACgb,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZC,QAAS4G,EACTG,kBAAgB,yBAChBC,mBAAiB,gCAEjB,kBAACE,GAAA,EAAD,KACI,yBAAKvS,UAAWH,EAAQsZ,UAEhBvZ,EAAMlJ,KAAKwO,cAAgB,kBAAC,KAAD,CACnBlF,UAAWH,EAAQuF,OACnBlF,ItB9DR,GsB8DwBN,EAAMlJ,KAAKwO,gBAE/B,kBAAC,KAAD,CAAQlF,UAAWH,EAAQuF,SAElBxF,EAAMlJ,KAAKuC,KAAO2G,EAAMlJ,KAAKuC,KAAKoM,OAAO,GAAGC,cAAgB,IAAM,IAClE1F,EAAMlJ,KAAKwC,QAAU0G,EAAMlJ,KAAKwC,QAAQmM,OAAO,GAAGC,cAAgB,KAInF,yBAAKtF,UAAWH,EAAQuZ,MACpB,kBAAC,KAAD,CAAYlK,UAAU,KAAK7O,QAAQ,MAAMT,EAAMlJ,KAAKuC,KAAO,IAAM2G,EAAMlJ,KAAKwC,SAC5E,kBAAC,KAAD,CAAYmH,QAAQ,SAApB,UAAoCT,EAAMlJ,KAAKS,OAE3CmiB,EAAetB,SAASpY,EAAMlJ,KAAKS,OAAS,kBAACqgB,GAAA,EAAD,CACxCnX,QAAQ,WACRrB,MAAM,UACNua,KAAK,QACLlD,MAAM,eACNrW,UAAWH,EAAQwX,OAClB,QAKrB,kBAAC5E,GAAA,EAAD,CAAezS,UAAWH,EAAQwZ,SAE1BC,EAAetB,SAASpY,EAAMlJ,KAAKS,OAAS,6BACxC,kBAACoU,GAAA,EAAD,CAAQhL,QAAS,WACbX,EAAM4Z,iBACNvH,KACDjT,MAAM,WAHT,cAMA,kBAACuM,GAAA,EAAD,CAAQhL,QAASX,EAAM6Z,oBAAqBza,MAAM,aAAlD,WAGK,kBAACuM,GAAA,EAAD,CAAQhL,QAASX,EAAM8Z,iBAAkB1a,MAAM,WAA/C,eAIb,kBAACuM,GAAA,EAAD,CAAQhL,QAAS0R,EAAaS,WAAS,GAAvC,cCnEDiH,OA3Bf,SAA6B/Z,GAEzB,OACI,kBAACuS,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZC,QAAS,kBAAMzL,EAAMsS,QAAQ,WAAW,IACxCE,kBAAgB,8BAChBC,mBAAiB,qCAEjB,kBAACC,GAAA,EAAD,CAAa1X,GAAG,+BAA+B,kBAC/C,kBAAC2X,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5X,GAAG,qCAAtB,kDAIJ,kBAAC6X,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAASX,EAAM6Z,oBAAqBza,MAAM,WAAlD,MAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS,kBAAMX,EAAMsS,QAAQ,WAAW,IAAQlT,MAAM,UAAU0T,WAAS,GAAjF,aCEVkH,G,YAEF,WAAYha,GAAQ,IAAD,+BACf,8CAAMA,KAaVia,aAAe,SAACnhB,GAAD,OAAO,EAAKoR,SAAS,CAACgQ,YAAaphB,EAAEgZ,OAAOC,SAdxC,EAgBnBO,QAAU,SAAC5b,EAAM8U,GACD,cAAT9U,EACC,EAAKwT,SAAS,CAACiQ,aAAc3O,IAEhB,YAAT9U,GACJ,EAAKwT,SAAS,CAACkQ,wBAAyB5O,KAlB5C,EAAKjV,MAAQ,CACT2jB,YAAa,GACbG,aAAc,KACdF,cAAc,EACdC,yBAAyB,GAG7B,EAAKH,aAAe,EAAKA,aAAa1I,KAAlB,iBAVL,E,wEAyBV,IAAD,SACqB/N,KAAKxD,MAAtB+R,EADJ,EACIA,MAAO1F,EADX,EACWA,MAEPpM,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,yBACImX,OAAQrF,IAAU1F,EAClBrR,GAAE,0BAAqBqR,GACvBmG,kBAAA,qBAA+BnG,IAE9B0F,IAAU1F,GAAS,6BAChB,kBAAC,KAAD,CACIT,WAAS,EACTmG,MAAOvO,KAAKjN,MAAM2jB,YAClBrI,SAAUrO,KAAKyW,aACfvI,YAAY,sBACZtR,UAAWH,EAAQqa,SAGnB9W,KAAKxD,MAAMmN,UAAY3J,KAAKxD,MAAMmN,SAAS/G,OAAS,EAAI,yBAAKhG,UAAWH,EAAQsX,MAExE/T,KAAKxD,MAAMmN,SAASnB,MAAK,SAACgM,EAAUC,GAAX,OACrBD,EAAS3e,KAAO4e,EAAS5e,MAAQ,EAAI,KAAGkT,QAAO,SAAA2L,GAAO,OACrDA,EAAQ7e,KAAO,IAAM6e,EAAQ5e,SAAS6e,cAClCC,SAAS,EAAK7hB,MAAM2jB,YAAY/B,kBACpCnS,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAAC,GAAD,CACtBlG,IAAKkG,EACL9R,KAAMA,EACN6F,UAAWH,EAAQ1F,KACnBgQ,YAAa,WACT,EAAKL,SAAS,CAACmQ,aAAc9f,IAC7B,EAAK+X,QAAQ,aAAa,UAIjC,kBAAC,KAAD,KACL,kBAAC,KAAD,CACI7L,UAAW,kCAKnBjD,KAAKxD,MAAMV,WAAa,yBAAKc,UAAWH,EAAQkX,UAC5C,kBAAC,KAAD,CAAkB/X,MAAM,aACnB,KAGToE,KAAKjN,MAAM8jB,aAAe,kBAAC,GAAD,CACtB7O,KAAMhI,KAAKjN,MAAM4jB,aACjB7H,QAAS9O,KAAK8O,QACdxb,KAAM0M,KAAKjN,MAAM8jB,aACjBlN,SAAU3J,KAAKxD,MAAMmN,SACrByM,eAAgB,kBAAM,EAAK5Z,MAAM4Z,eAAe,EAAKrjB,MAAM8jB,aAAa9iB,QACxEsiB,oBAAqB,kBAAM,EAAKvH,QAAQ,WAAW,MAClD,KAET,kBAAC,GAAD,CACI9G,KAAMhI,KAAKjN,MAAM6jB,wBACjB9H,QAAS9O,KAAK8O,QACduH,oBAAqB,WACjB,EAAK7Z,MAAM6Z,oBAAoB,EAAKtjB,MAAM8jB,cAC1C,EAAK/H,QAAQ,WAAW,Y,GAzF1BhL,IAAMC,WAmGjBvF,SAvHA,SAAAlE,GAAK,MAAK,CACrBqZ,SAAU,CACNjY,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZT,UAAW,QAEfgK,KAAM,CACFC,UAAW,QACXrW,UAAW,QAEfoZ,OAAO,CACH7J,UAAW,UAEf4J,OAAQ,CACJ/M,UAAW,OACXmI,aAAc,WAuGP1T,CAAmBgY,I,mFCtH5Bpc,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCmH,SAAU,CACN9E,SAAU,WACV,iBAAkB,CACdhC,gBAAiB,sCAGzB2I,KAAM,CACFa,SAAU,OACVC,WAAY,uBACZzH,SAAU,WACV0H,MAAO,OACPzF,IAAK,OACLhD,MAAOtB,EAAMM,QAAQ0J,KAAKrB,WAE9BjB,OAAQ,CAEJ0F,YAAapN,EAAMM,QAAQ0J,KAAKqD,UAEpCpM,OAAQ,CACJuC,QAAS,OAKF,SAASkZ,GAAkBxa,GAEtC,IAAMzF,EAAOyF,EAAMlJ,KAAKoM,OAClBrC,EAASjD,KAEf,OAAGrD,EAEK,kBAACyK,GAAA,EAAD,CACI5E,UAAWS,EAAOoE,UAElB,kBAACE,GAAA,EAAD,KAEQ5K,EAAK+K,cAAgB,kBAACC,GAAA,EAAD,CACbjF,IzBhDR,GyBgDwB/F,EAAK+K,cACrBlF,UAAWS,EAAO2E,SAEtB,kBAACD,GAAA,EAAD,CAAQnF,UAAWS,EAAO2E,QACrBjL,EAAKlB,KAAKoM,OAAO,GAAGC,cAAgB,IAAMnL,EAAKjB,QAAUiB,EAAKjB,QAAQmM,OAAO,GAAGC,cAAgB,MAIjH,kBAACa,GAAA,EAAD,CACIlI,QAAS,2BAAI9D,EAAKlB,KAAO,KAAOkB,EAAKjB,QAAUiB,EAAKjB,QAAU,KAC9DmN,UACI,kBAAC,IAAMC,SAAP,KACK1G,EAAMlJ,KAAK4D,WAIxB,kBAACgG,EAAA,EAAD,CAAYN,UAAWS,EAAO9B,OAAQ4B,QAASX,EAAMya,cACjD,kBAAC,KAAD,CAAUrb,MAAM,aAEpB,kBAACsB,EAAA,EAAD,CAAYN,UAAWS,EAAO9B,OAAQ4B,QAASX,EAAM0a,eACjD,kBAAC,KAAD,QAIJ,KCXD1Y,aAvDA,SAAAlE,GAAK,MAAK,CACrBqZ,SAAU,CACNjY,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZT,UAAW,QAEfgK,KAAM,CACFC,UAAW,QACXrW,UAAW,QAEfoZ,OAAO,CACH7J,UAAW,aA2CJ1O,EAvCf,SAAwBhC,GAAQ,IACpB+R,EAAiB/R,EAAjB+R,MAAO1F,EAAUrM,EAAVqM,MAEPpM,EAAYD,EAAZC,QAER,OACI,yBACImX,OAAQrF,IAAU1F,EAClBrR,GAAE,0BAAqBqR,GACvBmG,kBAAA,qBAA+BnG,IAE9B0F,IAAU1F,GAAS,yBAAKjM,UAAWH,EAAQsX,MAEpCvX,EAAM+M,aAAe/M,EAAM+M,YAAYC,SAAS5G,OAAS,EAAI,yBAAKhG,UAAU,cAEpEJ,EAAM+M,YAAYC,SAAShH,KAAI,SAAC2U,EAAYtO,GAAb,OAAuB,kBAACmO,GAAD,CAClDrU,IAAKkG,EACLvV,KAAM6jB,EACNF,aAAc,kBAAMza,EAAM4a,iBAAiBD,EAAWzX,OAAO3L,QAC7DmjB,cAAe,kBAAM1a,EAAM6a,kBAAkBF,EAAWzX,OAAO3L,cAGlE,kBAAC,KAAD,KACL,kBAAC,KAAD,CACIkP,UAAW,qCAKnBzG,EAAMV,WAAa,yBAAKc,UAAWH,EAAQkX,UACvC,kBAAC,KAAD,CAAkB/X,MAAM,aACnB,UCoEd4C,aA5GA,SAAAlE,GAAK,MAAK,CACrBqZ,SAAU,CACNjY,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZT,UAAW,QAEfhT,KAAM,CACF0Q,OAAQ,WAEZnT,MAAO,CACHyV,UAAW,WAiGJvL,EA7Ff,SAA0BhC,GAEtB,IAAMqS,EAAc,WAChBrS,EAAMsS,SAAQ,IAGVrS,EAAYD,EAAZC,QAER,OACI,kBAACsS,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZC,QAAS4G,EACTG,kBAAgB,2BAChBC,mBAAiB,iCACjBjU,SAAS,KACToN,WAAW,GAEX,kBAAC8G,GAAA,EAAD,CAAa1X,GAAG,4BAA4B,eAC5C,kBAAC2X,GAAA,EAAD,KACI,6BAEQ3S,EAAM8a,WACF,kBAAC,KAAD,CAAO3F,SAAS,UAAU/U,UAAWH,EAAQnI,OACxCkI,EAAM8a,YACA,KAGf9a,EAAMlI,MACF,kBAAC,KAAD,CAAOqd,SAAS,QAAQ/U,UAAWH,EAAQnI,OACtCkI,EAAMlI,OACA,KAEnB,kBAAC,KAAD,CACIsT,OAAO,QACPpQ,GAAG,0BACHyb,MAAM,mBACN7K,WAAS,EACTmG,MAAO/R,EAAMzI,MACbsa,SAAU,SAAC/Y,GAAD,OAAOkH,EAAM4R,WAAW9Y,EAAG,UACrCkZ,aAAa,QAGbhS,EAAM+X,aAAe/X,EAAMzI,MAAM6O,QAAU,EAAI,yBAAKhG,UAAU,cAEtDJ,EAAM+X,YAAY/R,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAAC,GAAD,CACnClG,IAAKkG,EACL9R,KAAMA,EACN6F,UAAWH,EAAQ1F,KACnBgQ,YAAavK,EAAMsX,WACnBpS,SAAUlF,EAAMzI,QAAUgD,EAAKhD,YAGlC,KAGTyI,EAAM+X,aACuB,IAA7B/X,EAAM+X,YAAY3R,QAClBpG,EAAMzI,MAAM6O,QAAU,EAAI,kBAAC,KAAD,KACtB,kBAAC,KAAD,CACIK,UAAW,6FAGL,KAGdzG,EAAMV,WAAa,yBAAKc,UAAWH,EAAQkX,UACvC,kBAAC,KAAD,CAAkB/X,MAAM,aACnB,KAEb,kBAAC,KAAD,CACIgM,OAAO,QACPpQ,GAAG,4BACHyb,MAAM,gBACN7K,WAAS,EACTmG,MAAO/R,EAAMtF,QACbmX,SAAU,SAAC/Y,GAAD,OAAOkH,EAAM4R,WAAW9Y,EAAG,YACrCkZ,aAAa,MACb+I,UAAW,OAIvB,kBAAClI,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAASX,EAAMgb,qBAAsB5b,MAAM,WAAnD,QAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS0R,EAAajT,MAAM,UAAU0T,WAAS,GAAvD,c,UCpEhB,IAUMmI,G,YAEF,WAAYjb,GAAQ,IAAD,+BACf,8CAAMA,KA+GV4R,WAAa,SAAC9Y,EAAGpC,GACb,OAAQA,GACJ,IAAK,QACD,IAAIa,EAAQuB,EAAEgZ,OAAOC,MAClBxa,EAAM6O,QAAU,EACf,EAAKpG,MAAMkJ,eAAe,EAAKlJ,MAAM/I,MAAOM,GAG5C,EAAKyI,MAAMiJ,iBAEf,EAAKiB,SAAS,CAAE3S,UAChB,MACJ,IAAK,UACD,IAAImD,EAAU5B,EAAEgZ,OAAOC,MACpBrX,EAAQ0L,OAAS,IAChB,EAAK8D,SAAS,CAACgR,cAAexgB,MA/H3B,EAuInBygB,oBAAsB,SAACriB,EAAGsiB,GACP,cAAXA,GAGJ,EAAKlR,SAAS,CACVmR,SAAU,CACN3kB,KAAM,GACNgE,QAAS,GACT8Q,MAAM,MA/IC,EAoJnB6G,YAAc,WACV,EAAKrS,MAAMsS,QAAQ,YAAY,IArJhB,EAoKnBwG,aAAe,SAAChgB,EAAGigB,GACf,EAAK7O,SAAS,CAACyO,WAAYI,KArKZ,EAwKnBuC,0BAA4B,SAAC9P,GAAD,OACxB,EAAKtB,SAAS,CACVqR,kBAAmB/P,EACnBgQ,QAAS,GACT1jB,MAAO,GACPP,MAAO,GACP2jB,cAAe,MA9KJ,EAkLnBtB,eAAiB,SAACriB,GACd,EAAKyI,MAAM4Z,eAAeriB,GAC1B,EAAK8a,eApLU,EAuLnBwH,oBAAsB,SAACtf,GACnB,EAAKyF,MAAM6Z,oBAAoBtf,GAC/B,EAAK8X,eAtLL,EAAK9b,MAAQ,CACToiB,WAAY,EACZ4C,mBAAmB,EACnBhkB,MAAO,GACP2jB,cAAe,GACfpjB,MAAO,GACP0jB,QAAS,GACTH,SAAU,CACN3kB,KAAM,GACNgE,QAAS,GACT8Q,MAAM,IAId,EAAKoG,WAAa,EAAKA,WAAWL,KAAhB,iBAClB,EAAK+F,WAAa,EAAKA,WAAW/F,KAAhB,iBAClB,EAAK+J,0BAA4B,EAAKA,0BAA0B/J,KAA/B,iBACjC,EAAKyJ,qBAAuB,EAAKA,qBAAqBzJ,KAA1B,iBAC5B,EAAKkK,uBAAyB,EAAKA,uBAAuBlK,KAA5B,iBAC9B,EAAKmK,wBAA0B,EAAKA,wBAAwBnK,KAA7B,iBAC/B,EAAKoK,mBAAqB,EAAKA,mBAAmBpK,KAAxB,iBAvBX,E,mFA6Bf/N,KAAKxD,MAAM6W,iBAAiBrT,KAAKxD,MAAM/I,OACvCuM,KAAKxD,MAAMiX,oBAAoBzT,KAAKxD,MAAM/I,OAC1CuM,KAAKmY,uB,2CAIY,IAAD,OAChBnY,KAAKxD,MAAMmK,OAAOC,GAAG,mBAAmB,SAAAtT,GACjC,EAAKkJ,MAAM5F,YAActD,EAAKoM,QAC7B,EAAKgH,SAAS,CACVsR,QAAS1kB,EAAK4D,QACd5C,MAAO,GACPP,MAAO,GACP2jB,cAAe,KAEnB,EAAKI,2BAA0B,GAC/B,EAAKM,mBAAmB,UAAW9kB,EAAK4D,UAEpC,EAAKsF,MAAM5F,YAActD,EAAK+kB,UAClC,EAAK7b,MAAMiX,oBAAoB,EAAKjX,MAAM/I,UAGlDuM,KAAKxD,MAAMmK,OAAOC,GAAG,oBAAoB,SAAAtT,GAClC,EAAKkJ,MAAM5F,YAActD,EAAKoM,QAC7B,EAAKgH,SAAS,CACVpS,MAAOhB,EAAKgB,MACZ0jB,QAAS,QAIrBhY,KAAKxD,MAAMmK,OAAOC,GAAG,uBAAuB,SAAAtT,GACxC,EAAKkJ,MAAM6W,iBAAiB,EAAK7W,MAAM/I,OACvC,EAAK+I,MAAMiX,oBAAoB,EAAKjX,MAAM/I,OACvC,EAAK+I,MAAM5F,YAActD,EAAK+kB,UAC7B,EAAKD,mBAAmB,UAAW9kB,EAAK4D,YAGhD8I,KAAKxD,MAAMmK,OAAOC,GAAG,uBAAuB,SAAAtT,GACrC,EAAKkJ,MAAM5F,YAActD,EAAK+kB,WAC7B,EAAK7b,MAAMiX,oBAAoB,EAAKjX,MAAM/I,OAC1C,EAAK2kB,mBAAmB,OAAQ9kB,EAAK4D,e,6CAM7C,IAAMigB,EAAa,CACf,OAAUnX,KAAKxD,MAAM5F,UACrB,SAAYoJ,KAAKjN,MAAMgB,MACvB,QAAWiM,KAAKjN,MAAM2kB,eAG1B1X,KAAKxD,MAAMmK,OAAO2R,KAAK,kBAAmBnB,K,6CAGvBzX,GACnB,IAAMpM,EAAO,CACT,OAAUoM,EACV,SAAYM,KAAKxD,MAAM5F,WAG3BoJ,KAAKxD,MAAMmK,OAAO2R,KAAK,oBAAqBhlB,K,8CAGxBoM,GACpB,IAAMpM,EAAO,CACT,OAAUoM,EACV,SAAYM,KAAKxD,MAAM5F,WAG3BoJ,KAAKxD,MAAMmK,OAAO2R,KAAK,qBAAsBhlB,K,yCAG9BJ,EAAMI,GACrB0M,KAAK0G,SAAS,CACVmR,SAAU,CACN3kB,KAAMA,EACNgE,QAAS5D,EACT0U,MAAM,O,iCA6CPjU,GACPiM,KAAKxD,MAAMkJ,eAAe1F,KAAKxD,MAAM/I,MAAOM,GAC5CiM,KAAK0G,SAAS,CAAC3S,Y,gCAGT8U,GACN,MAAO,CACHrR,GAAG,cAAD,OAAgBqR,GAClB,gBAAgB,mBAAhB,OAAoCA,M,+BA4BnC,IAAD,OAEIpM,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,kBAACsS,GAAA,EAAD,CACI/G,KAAMhI,KAAKxD,MAAMwL,KACjBC,QAASjI,KAAK6O,YACdG,kBAAgB,wBAChBC,mBAAiB,8BACjBjU,SAAS,KACToN,WAAW,GAEX,kBAAC8G,GAAA,EAAD,CAAa1X,GAAG,yBACX,WACD,kBAAC,KAAD,CACIoF,UAAWH,EAAQsa,OACnB5Z,QAAS,kBAAM,EAAK2a,2BAA0B,KAE9C,kBAAC,KAAD,QAGR,kBAAC3I,GAAA,EAAD,KACI,kBAACwG,GAAA,EAAD,CACIpH,MAAOvO,KAAKjN,MAAMoiB,WAClB9G,SAAUrO,KAAKsV,aACfrY,QAAQ,aAER,kBAAC2Y,GAAA,EAAD,eAAK3C,MAAM,QAAWjT,KAAK6V,UAAU,KAEjC7V,KAAKxD,MAAM+M,aAAevJ,KAAKxD,MAAM+M,YAAYC,SAAS5G,OAAS,EAC/D,kBAACgT,GAAA,EAAD,eAAK3C,MAAO,kBAAC,KAAD,CACR1L,aAAcvH,KAAKxD,MAAM+M,YAAYC,SAAS5G,OAC9ChH,MAAM,UACNgB,UAAWH,EAAQ8B,OAHX,gBAIcyB,KAAK6V,UAAU,KAC3C,kBAACD,GAAA,EAAD,eAAK3C,MAAM,eAAkBjT,KAAK6V,UAAU,MAGtD,kBAAC,GAAD,CACItH,MAAOvO,KAAKjN,MAAMoiB,WAClBtM,MAAO,EACPc,SAAU3J,KAAKxD,MAAMmN,SACrByM,eAAgBpW,KAAKoW,eACrBC,oBAAqBrW,KAAKqW,oBAC1Bva,WAAYkE,KAAKxD,MAAMV,aAE3B,kBAAC,GAAD,CACIyS,MAAOvO,KAAKjN,MAAMoiB,WAClBtM,MAAO,EACPU,YAAavJ,KAAKxD,MAAM+M,YACxBzN,WAAYkE,KAAKxD,MAAM+b,mBACvBnB,iBAAkBpX,KAAKiY,uBACvBZ,kBAAmBrX,KAAKkY,0BAE5B,kBAAC,GAAD,CACIlQ,KAAMhI,KAAKjN,MAAMglB,kBACjBjJ,QAAS9O,KAAK8X,0BACd1J,WAAYpO,KAAKoO,WACjBra,MAAOiM,KAAKjN,MAAMgB,MAClBwgB,YAAavU,KAAKxD,MAAMqX,UACxBC,WAAY9T,KAAK8T,WACjBhY,WAAYkE,KAAKxD,MAAMgc,eACvBthB,QAAS8I,KAAKjN,MAAM2kB,cACpBpjB,MAAO0L,KAAKjN,MAAMuB,MAClBgjB,WAAYtX,KAAKjN,MAAMilB,QACvBR,qBAAsBxX,KAAKwX,wBAGnC,kBAACnI,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAAS6C,KAAK6O,YAAajT,MAAM,UAAU0T,WAAS,GAA5D,UAEJ,kBAACmJ,GAAA,EAAD,CACIzQ,KAAMhI,KAAKjN,MAAM8kB,SAAS7P,KAC1B0Q,iBAAkB,IAClBzQ,QAASjI,KAAK2X,oBACdzQ,aAAc,CACVC,SAAU,SACVC,WAAY,SAGhB,kBAAC,KAAD,CACIa,QAASjI,KAAK2X,oBACdhG,SAAU3R,KAAKjN,MAAM8kB,SAAS3kB,MAChC8M,KAAKjN,MAAM8kB,SAAS3gB,e,GAlRb4M,IAAMC,WAyRpBlI,iBAhTf,SAAyB9I,GACrB,MAAO,CACHU,MAAOV,EAAMiJ,KAAKvI,MAClBkW,SAAU5W,EAAM4W,SAASA,SACzBJ,YAAaxW,EAAM4W,SAASJ,YAC5BgP,mBAAoBxlB,EAAM4W,SAAS7N,WACnC+X,UAAW9gB,EAAMO,KAAKugB,UACtB2E,eAAgBzlB,EAAMO,KAAKwI,WAC3BlF,UAAW7D,EAAMiJ,KAAKjI,MACtBqI,MAAOrJ,EAAMqJ,MAAMA,UAIA,SAACvH,GAAD,MAAe,CACtCwe,iBAAkB,SAAC5f,GAAD,OAAWoB,EAASwe,GAAiB5f,KACvDggB,oBAAqB,SAAChgB,GAAD,OAAWoB,EAAS4e,GAAoBhgB,KAC7DiS,eAAgB,SAACjS,EAAOM,GAAR,OAAkBc,EAAS6Q,GAAejS,EAAOM,KACjE0R,eAAgB,kBAAM5Q,ErBkJf,CACH3B,KPlIwB,sB4BhB5ByD,QAAS,SAACC,EAAWC,EAAWZ,GAAvB,OAAsCpB,EAAS8B,EAAQC,EAAWC,EAAWZ,KACtF+N,SAAU,SAACvQ,GAAD,OAAWoB,EAASsB,EAAe1C,QA6RlCoI,CAA6C2C,MA3T7C,SAAAlE,GAAK,MAAK,CACrByc,OAAQ,CACJ5Y,MAAO,SAEXI,MAAO,CACH,SAAU,CACN8F,MAAO,aAqTyC7F,CAAmBiZ,K,qBCvUzErd,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCmH,SAAU,CACN9E,SAAU,WACV,iBAAkB,CACdhC,gBAAiB,sCAGzBge,OAAQ,CACJnb,WAAY,QACZ,gBAAiB,CACbA,WAAY,SAGpBzF,MAAO,CACHoM,SAAU,OACV3G,WAAY,MACZob,WAAY,SAKL,SAASC,GAAarc,GAEjC,IAAMxE,EAAQwE,EAAMxE,MACdqF,EAASjD,KAEf,OAAGpC,EAAM4K,OAAS,EAEV,kBAACpB,GAAA,EAAD,CAAU5E,UAAWS,EAAOoE,UACxB,kBAACU,GAAA,EAAD,CAAaC,IAAK,GAEV5F,EAAM6F,WAAa,kBAACN,GAAA,EAAD,CACXjF,I7BzCR,G6ByCwBN,EAAM6F,aAE9BrK,EAAMuK,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAAgB,kBAACX,GAAA,EAAD,CAClCY,IAAKD,EACL5F,IAAK2F,EAAKX,c7B7Cd,G6B6C0CW,EAAKX,cAAiB,KAC5DlF,UAAWS,EAAOsb,QAEhBlW,EAAKX,cAE0D,KAD7DW,EAAK5M,KAAKoM,OAAO,GAAGC,cAAgB,IACnCO,EAAK3M,QAAU2M,EAAK3M,QAAQmM,OAAO,GAAGC,cAAgB,SAKvE,kBAACa,GAAA,EAAD,CACIlI,QAAS,uBAAG+B,UAAWS,EAAOtF,OAAQyE,EAAMwG,aAEhD,kBAAC9F,EAAA,EAAD,CAAYtB,MAAM,UAAUkd,aAAW,OAAO3b,QAASX,EAAMuc,oBACzD,kBAAC,KAAD,QAIJ,KC5BDC,OA3Bf,SAA0Bxc,GAEtB,OACI,kBAACuS,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZC,QAAS,kBAAMzL,EAAMsS,QAAQ,QAAQ,IACrCE,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAACC,GAAA,EAAD,CAAa1X,GAAG,4BAA4B,eAC5C,kBAAC2X,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5X,GAAG,kCAAtB,+CAIJ,kBAAC6X,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAASX,EAAMyc,iBAAkBrd,MAAM,WAA/C,MAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS,kBAAMX,EAAMsS,QAAQ,QAAQ,IAAQlT,MAAM,UAAU0T,WAAS,GAA9E,aCQV4J,G,YAEF,WAAY1c,GAAQ,IAAD,+BACf,8CAAMA,KAcV2c,oBAAsB,SAACjmB,EAAM8U,GACzB,OAAQ9U,GACJ,IAAK,OACD,EAAKwT,SAAS,CAAC0S,qBAAsBpR,IACrC,MACJ,IAAK,UACD,EAAKtB,SAAS,CAACkQ,wBAAyB5O,MAlBhD,EAAKjV,MAAQ,CACTqmB,sBAAsB,EACtBxC,yBAAyB,GAG7B,EAAKuC,oBAAsB,EAAKA,oBAAoBpL,KAAzB,iBARZ,E,mFAYf/N,KAAKxD,MAAM6c,oB,+BAgBN,IAAD,OACI5c,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,yBAAKG,UAAWH,EAAQ6c,aAEmD,IAAnEtZ,KAAKxD,MAAM+c,wBAAwBvZ,KAAKxD,MAAM+L,UAAU3F,QACkC,SAAtF5C,KAAKxD,MAAM+L,SAAS1E,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAY,EAAKoG,MAAMid,gBAAcvmB,KAC7E,yBAAK0J,UAAWH,EAAQid,kBACpB,kBAAC,GAAD,CACI3iB,KAAMiJ,KAAKxD,MAAM+c,wBAAwBvZ,KAAKxD,MAAM+L,UAAU,KAElE,kBAACrL,EAAA,EAAD,CAAYC,QAAS6C,KAAKxD,MAAMmd,gBAC5B,kBAAC,KAAD,OAEJ,kBAAC3N,GAAA,EAAD,CACIxU,GAAG,eACHwQ,KAAMiE,QAAQjM,KAAKxD,MAAMyO,YACzBiB,SAAUlM,KAAKxD,MAAMyO,WACrBhD,QAASjI,KAAKxD,MAAM6c,iBAGpB,kBAAClN,GAAA,EAAD,CACIvP,UAAWH,EAAQmd,SACnBzc,QAAS,kBAAM,EAAKgc,oBAAoB,QAAQ,KAFpD,eAIA,kBAAChN,GAAA,EAAD,CACIhP,QAAS,kBAAM,EAAKgc,oBAAoB,WAAW,KADvD,oBAIC,kBAACN,GAAD,CACL7gB,MAAOgI,KAAKxD,MAAM+c,wBAAwBvZ,KAAKxD,MAAM+L,UACrDvF,UAAWhD,KAAKxD,MAAM+L,SAASQ,QAAO,SAAAyQ,GAAK,OAAIA,EAAMpjB,UAAY,EAAKoG,MAAMid,gBAAc,GAAG1hB,MAC7FghB,mBAAoB/Y,KAAKxD,MAAMuc,mBAC/B1W,WAAYrC,KAAKxD,MAAM+L,SAAS1E,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAY,EAAKoG,MAAMid,gBAActQ,QAGrG,kBAAC,GAAD,CACInB,KAAMhI,KAAKjN,MAAMqmB,qBACjBtK,QAAS9O,KAAKmZ,oBACdF,iBAAkB,WACd,EAAKzc,MAAMyc,mBACX,EAAKE,oBAAoB,QAAQ,MAGzC,kBAAC,GAAD,CACInR,KAAMhI,KAAKjN,MAAM6jB,wBACjB9H,QAAS9O,KAAKmZ,oBACd9C,oBAAqB,WACjB,EAAK7Z,MAAM6Z,sBACX,EAAK8C,oBAAoB,WAAW,W,GAhFlCrV,IAAMC,WAwFjBvF,SAjHA,SAAAlE,GAAK,YAAK,CACrBgf,aAAW,GACP3e,gBAAiB,QACjB8D,UAAW,+BACXjE,OAAQ,GACRc,UAAW,IAJJ,cAKNhB,EAAMc,YAAYC,KAAK,MAAQ,CAC5BC,UAAW,KANR,wBAQE,QARF,2BASK,UATL,GAWXoe,iBAAkB,CACdhe,QAAS,OACT4B,MAAO,OACPkN,WAAY,UAEhBM,KAAM,CACF,OAAQ,CACJhN,QAAS,OA8FNU,CAAmB0a,I,yECxFnBW,OA3Bf,SAA2Brd,GAEvB,OACI,kBAACuS,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZC,QAAS,kBAAMzL,EAAMsS,QAAQ,UAAU,IACvCE,kBAAgB,4BAChBC,mBAAiB,mCAEjB,kBAACC,GAAA,EAAD,CAAa1X,GAAG,6BAA6B,gBAC7C,kBAAC2X,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5X,GAAG,kCAAtB,gDAIJ,kBAAC6X,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAASX,EAAMsd,kBAAmBle,MAAM,WAAhD,MAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS,kBAAMX,EAAMsS,QAAQ,UAAU,IAAQlT,MAAM,UAAU0T,WAAS,GAAhF,a,qBCYDyK,OA/Bf,SAA0Bvd,GAEtB,OACI,kBAACuS,GAAA,EAAD,CACI/G,KAAMxL,EAAMwL,KACZhN,SAAS,KACTiN,QAAS,kBAAMzL,EAAMsS,QAAQ,SAAS,IACtCE,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAACC,GAAA,EAAD,CAAa1X,GAAG,4BAA4B,eAC5C,kBAAC2X,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5X,GAAG,kCAAtB,6CAGQgF,EAAMwd,QAAU,qDAAuD,OAInF,kBAAC3K,GAAA,EAAD,KACI,kBAAClH,GAAA,EAAD,CAAQhL,QAASX,EAAMyd,iBAAkBre,MAAM,WAA/C,OAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS,kBAAMX,EAAMsS,QAAQ,SAAS,IAAQlT,MAAM,UAAU0T,WAAS,GAA/E,a,qBCGV4K,G,YAEF,WAAY1d,GAAQ,IAAD,+BACf,8CAAMA,KAiBVqS,YAAc,WACV,EAAKrS,MAAMsS,QAAQ,kBAAkB,IAnBtB,EAsBnBuB,WAAa,WACT,EAAK7T,MAAM2d,uBAAuB,EAAKpnB,MAAMiF,QApB7C,EAAKjF,MAAQ,CACTiF,MAAO,GACP8e,OAAQ,IAGZ,EAAKzG,WAAa,EAAKA,WAAWtC,KAAhB,iBARH,E,mFAaf/N,KAAK0G,SAAS,CACV1O,MAAOgI,KAAKxD,MAAM4d,a,0CAYNrjB,GAChBiJ,KAAK0G,SAAS,CACV1O,MAAM,GAAD,oBAAMgI,KAAKjN,MAAMiF,OAAjB,CAAwBjB,Q,+CAIZhD,GACrBiM,KAAK0G,SAAS,CACV1O,MAAOgI,KAAKjN,MAAMiF,MAAM+Q,QAAO,SAAAhS,GAAI,OAAIA,EAAKhD,QAAUA,S,wCAI5CgD,GACd,IAAI,IAAIwI,EAAI,EAAGA,EAAIS,KAAKjN,MAAMiF,MAAM4K,OAAQrD,IACxC,GAAGS,KAAKjN,MAAMiF,MAAMuH,GAAGxL,QAAUgD,EAAKhD,MAClC,OAAO,EAIf,OAAO,I,+BAGF,IAAD,OAEI0I,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,kBAACsS,GAAA,EAAD,CACI/G,KAAMhI,KAAKxD,MAAMwL,KACjBC,QAASjI,KAAK6O,YACdG,kBAAgB,8BAChBC,mBAAiB,oCACjBjU,SAAS,KACToN,WAAS,GAET,kBAAC,KAAD,CAAa5Q,GAAG,+BAA+B,wBAC/C,kBAAC2X,GAAA,EAAD,KACI,kBAAC,KAAD,CAAYvS,UAAWH,EAAQwW,MAAOnH,UAAU,KAAK7O,QAAQ,MAA7D,YACA,yBAAKL,UAAWH,EAAQsX,MAEhB/T,KAAKjN,MAAMiF,MAAMwK,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAACuL,GAAA,EAAD,CAClCzR,IAAKkG,EACLjM,UAAWH,EAAQwX,KACnBrY,MAAO7E,EAAKhD,QAAU,EAAKyI,MAAMgL,MAAQ,UAAY,UACrDxF,OACIjL,EAAK+K,cAAgB,kBAAC,KAAD,CACjBhF,IlC5GhB,GkC4GgC/F,EAAK+K,gBACpB,kBAAC,KAAD,MAEI/K,EAAKlB,KAAOkB,EAAKlB,KAAKoM,OAAO,GAAGC,cAAgB,IAAM,IACtDnL,EAAKjB,QAAUiB,EAAKjB,QAAQmM,OAAO,GAAGC,cAAgB,KAInE+Q,MAAOlc,EAAKlB,KAAO,IAAMkB,EAAKjB,QAC9BmH,QAAQ,WACRoX,SACItd,EAAKhD,QAAU,EAAKyI,MAAMgL,OAC1BzQ,EAAKhD,QAAU,EAAKyI,MAAMsK,YACtB,kBAAM,EAAK2O,yBAAyB1e,EAAKhD,QAAS,WAKtE,kBAAC,KAAD,CACI6T,OAAO,QACPpQ,GAAG,uBACHyb,MAAM,sBACN7K,WAAS,EACTmG,MAAOvO,KAAKjN,MAAM+jB,OAClBzI,SAAU,SAAC/Y,GAAD,OAAO,EAAKoR,SAAS,CAACoQ,OAAQxhB,EAAEgZ,OAAOC,SACjDC,aAAa,QAGbxO,KAAKxD,MAAM+X,YAAc,yBAAK3X,UAAWH,EAAQ8X,aAEzCvU,KAAKxD,MAAM+X,YAAY/L,MAAK,SAACgM,EAAUC,GAAX,OACxBD,EAAS3e,KAAO4e,EAAS5e,MAAQ,EAAI,KACpCkT,QAAO,SAAA2L,GAAO,OAAKA,EAAQ7e,KAAO,IAAM6e,EAAQ5e,SAAS6e,cACrDC,SAAS,EAAK7hB,MAAM+jB,OAAOnC,kBAC/B5L,QAAO,SAAA2L,GAAO,OAAK,EAAKgB,kBAAkBhB,MAC1ClS,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAAC,GAAD,CAClBlG,IAAKkG,EACL9R,KAAMA,EACN6F,UAAWH,EAAQ1F,KACnBgQ,YAAa,kBAAM,EAAKyO,oBAAoBze,IAC5C2K,UAAU,QAGjB,KAGT1B,KAAKxD,MAAM+X,aACuB,IAAlCvU,KAAKxD,MAAM+X,YAAY3R,OAAe,kBAAC,KAAD,KAClC,kBAAC,KAAD,CACIK,UAAW,yEAGL,MAGtB,kBAACoM,GAAA,EAAD,CAAezS,UAAWH,EAAQwZ,SAC9B,kBAAC9N,GAAA,EAAD,CAAQhL,QAAS6C,KAAKqQ,WAAYzU,MAAM,WAAxC,QAGA,kBAACuM,GAAA,EAAD,CAAQhL,QAAS6C,KAAK6O,YAAaS,WAAS,GAA5C,e,GArIcxL,IAAMC,WA+IzBvF,SAlKA,SAAAlE,GAAK,MAAK,CACrB2Y,MAAO,CACH9O,SAAU,OACV4F,UAAW,QAEfkK,KAAM,CACFhZ,YAAa,EACbiX,aAAc,GAElB6B,KAAM,CACFrY,QAAS,OACT2e,SAAU,QAEd9F,YAAa,CACTP,UAAW,QACXrW,UAAW,WAmJJa,CAAmB0b,IC9B5BI,G,YAEF,WAAY9d,GAAQ,IAAD,+BACf,8CAAMA,KAwEVmb,oBAAsB,SAACriB,EAAGsiB,GACP,cAAXA,GAGJ,EAAKlR,SAAS,CACVmR,SAAU,CACN3kB,KAAM,GACNgE,QAAS,GACT8Q,MAAM,MAjFC,EAsFnBuS,sBAAwB,kBAAM,EAAK7T,SAAS,CACxC3O,MAAO,EAAKyE,MAAMid,aAAa1hB,MAC/ByiB,YAAa,EAAKznB,MAAMynB,cAxFT,EAgGnBV,kBAAoB,WAChB,EAAKtd,MAAMsd,kBAAkB,EAAKtd,MAAMid,aAAarjB,SACrD,EAAK0Y,QAAQ,UAAU,IAlGR,EAqGnBmL,iBAAmB,WACf,IAAM3mB,EAAO,CACT,QAAW,EAAKkJ,MAAMid,aAAarjB,QACnC,KAAQ,EAAKoG,MAAMsK,aAEvB,EAAKtK,MAAMmK,OAAO2R,KAAK,cAAehlB,IA1GvB,EAuHnBwb,QAAU,SAAC5b,EAAM8U,GACb,OAAQ9U,GACJ,IAAK,SACD,EAAKwT,SAAS,CAAC+T,sBAAuBzS,IACtC,MACJ,IAAK,QACD,EAAKtB,SAAS,CAACgU,qBAAsB1S,IACrC,MACJ,IAAK,QACD,EAAKtB,SAAS,CAACiM,oBAAqB3K,IACpC,MACJ,IAAK,YACD,EAAKtB,SAAS,CAACiQ,aAAc3O,IAC7B,MACJ,IAAK,UACD,EAAKtB,SAAS,CAACkQ,wBAAyB5O,IACxC,MACJ,IAAK,iBACD,EAAKtB,SAAS,CAACiU,wBAAyB3S,MAzIjC,EAgJnByJ,kBAAoB,SAACne,GACjB,EAAKkJ,MAAMzC,iBAAiB,EAAKyC,MAAM/I,MAAOH,EAAM,EAAKkJ,MAAMid,aAAarjB,UAjJ7D,EAoJnB+jB,uBAAyB,SAACniB,GAItB,IAFA,IAAI4iB,EAAc,GAEVrb,EAAI,EAAGA,EAAIvH,EAAM4K,OAAQrD,IAC7Bqb,EAAY7lB,KAAKiD,EAAMuH,GAAGxL,OAE9B,EAAKyI,MAAM7D,mBAAmB,EAAK6D,MAAMid,aAAarjB,QAAS,CAAC4B,MAAO4iB,IACvE,EAAK9L,QAAQ,kBAAkB,IAzJ/B,EAAK/b,MAAQ,CACTynB,YAAY,EACZziB,MAAO,GACP0iB,uBAAuB,EACvB5D,aAAc,KACdF,cAAc,EACdC,yBAAyB,EACzB8D,sBAAsB,EACtB/H,qBAAqB,EACrBgI,yBAAyB,EACzB9C,SAAU,CACN3kB,KAAM,GACNgE,QAAS,GACT8Q,MAAM,IAId,EAAKuS,sBAAwB,EAAKA,sBAAsBxM,KAA3B,iBAC7B,EAAK8M,kBAAoB,EAAKA,kBAAkB9M,KAAvB,iBACzB,EAAK+L,kBAAoB,EAAKA,kBAAkB/L,KAAvB,iBACzB,EAAKkM,iBAAmB,EAAKA,iBAAiBlM,KAAtB,iBACxB,EAAKqK,mBAAqB,EAAKA,mBAAmBrK,KAAxB,iBAxBX,E,mFA6Bf/N,KAAKmY,uB,2CAGY,IAAD,OAChBnY,KAAKxD,MAAMmK,OAAOC,GAAG,mBAAmB,SAAAtT,GACjC,EAAKkJ,MAAMsK,cAAgBxT,EAAKoM,SAC/B,EAAK0Y,mBAAmB,UAAW9kB,EAAK4D,SACxC,EAAK4X,QAAQ,aAAa,OAGlC9O,KAAKxD,MAAMmK,OAAOC,GAAG,oBAAoB,SAAAtT,GAClC,EAAKkJ,MAAMsK,cAAgBxT,EAAKoM,SAC/B,EAAK0Y,mBAAmB,QAAS9kB,EAAKgB,OACtC,EAAKwa,QAAQ,aAAa,OAGlC9O,KAAKxD,MAAMmK,OAAOC,GAAG,cAAc,SAAAtT,GAC5B,EAAKkJ,MAAMsK,cAAgBxT,EAAKyD,OAC/B,EAAKqhB,mBAAmB,UAAW9kB,EAAK4D,SACxC,EAAK4X,QAAQ,SAAS,GACtB,EAAKtS,MAAMvG,WAAW,OAEvB3C,EAAK0E,MAAM4c,SAAS,EAAKpY,MAAMsK,cAC9B,EAAKtK,MAAMyH,UAAU,EAAKzH,MAAM/I,UAGxCuM,KAAKxD,MAAMmK,OAAOC,GAAG,qBAAqB,SAAAtT,GACnC,EAAKkJ,MAAMsK,cAAgBxT,EAAKyD,OAC/B,EAAKqhB,mBAAmB,QAAS9kB,EAAKgB,OACtC,EAAKwa,QAAQ,SAAS,S,yCAKf5b,EAAMI,GACrB0M,KAAK0G,SAAS,CACVmR,SAAU,CACN3kB,KAAMA,EACNgE,QAAS5D,EACT0U,MAAM,O,0CAwBdhI,KAAKxD,MAAMnE,iBAAiB2H,KAAKxD,MAAMid,aAAarjB,QAAS4J,KAAKjN,MAAMgF,OACxEiI,KAAKua,0B,2CAgBYlC,GACjB,IAAMlB,EAAa,CACf,OAAUnX,KAAKxD,MAAMsK,YACrB,SAAYuR,EACZ,QAAW,IAGfrY,KAAKxD,MAAMmK,OAAO2R,KAAK,kBAAmBnB,K,+BA4CpC,IAAD,OACG1a,EAAYuD,KAAKxD,MAAjBC,QAER,GAAGuD,KAAKxD,MAAMid,aAAa,CACvB,IAAIzhB,EAAK,aAAOgI,KAAKxD,MAAMid,aAAazhB,OAExC,OACI,kBAAC,KAAD,CACIiF,QAA8B,OAArB+C,KAAKxD,MAAMc,MAAiB,YAAc,aACnDyK,OAAO,QACPC,KAAMhI,KAAKxD,MAAMwL,KACjBC,QAAS,kBAAM,EAAKzL,MAAMse,cAAa,IACvCle,UAAWH,EAAQhC,OACnBgC,QAAS,CACLkC,MAAOlC,EAAQgB,cAGnB,yBAAKb,UAAWH,EAAQse,UAEiB,UAAjC/a,KAAKxD,MAAMid,aAAavmB,KAAmB,yBAAK0J,UAAWH,EAAQ/B,WAC/D,yBAAKkC,UAAWH,EAAQoF,iBACpB,kBAAC,KAAD,CAAS9J,MAAM,0BAEPiI,KAAKxD,MAAMid,aAAatQ,MAAQ,kBAACpH,GAAA,EAAD,CACxBnF,UAAWH,EAAQuF,OACnBlF,InC9U5B,GmC8U4CkD,KAAKxD,MAAMid,aAAatQ,MACxChM,QAAS,kBAAM,EAAK2R,QAAQ,SAAS,MAEzC,kBAAC/M,GAAA,EAAD,CAAQnF,UAAWH,EAAQuF,OAAQ7E,QAAS,kBAAM,EAAK2R,QAAQ,SAAS,KACnE9O,KAAKxD,MAAMid,aAAa1hB,MAAMkK,OAAO,GAAGC,iBAMxDlC,KAAKjN,MAAMynB,WAGI,yBAAK5d,UAAWH,EAAQue,gBACpC,kBAAChN,GAAA,EAAD,CACIO,MAAOvO,KAAKjN,MAAMgF,MAClBsW,SAAU,SAAC/Y,GAAD,OAAO,EAAKoR,SAAS,CAAC3O,MAAOzC,EAAEgZ,OAAOC,SAChD3G,OAAO,QACPpQ,GAAG,oBACHyb,MAAM,QACN7K,WAAS,EACToG,aAAa,QAEjB,kBAACtR,EAAA,EAAD,CACIC,QAAS6C,KAAK6a,kBACdjf,MAAM,UACNgB,UAAWH,EAAQwe,SAEnB,kBAAC,KAAD,OAEJ,kBAAC/d,EAAA,EAAD,CACIC,QAAS6C,KAAKua,sBACd3d,UAAWH,EAAQwe,SAEnB,kBAAC,KAAD,QAxBiB,kBAACje,EAAA,EAAD,CAAYC,QAAQ,KAAK6O,UAAU,KAAKlP,UAAWH,EAAQ1E,OAC/EiI,KAAKxD,MAAMid,aAAa1hB,MACzB,kBAACmF,EAAA,EAAD,CAAYN,UAAWH,EAAQye,QAAS/d,QAAS6C,KAAKua,uBAAuB,kBAAC,KAAD,QA2BrF,kBAACvd,EAAA,EAAD,CAAYC,QAAQ,KAAK6O,UAAU,KAAKlP,UAAWH,EAAQ0e,WAA3D,WAEI,kBAACje,EAAA,EAAD,CAAYC,QAAS,kBAAM,EAAK2R,QAAQ,kBAAkB,IAAOlS,UAAWH,EAAQye,SAAS,kBAAC,KAAD,QAEjG,kBAAC5S,GAAA,EAAD,CAAM1L,UAAWH,EAAQ2d,UAEjBpiB,EAAMwQ,MAAK,SAAC4S,EAAOC,GAAR,OACPD,EAAMvlB,KAAOwlB,EAAMxlB,MAAQ,EAAI,KAAG2M,KAAI,SAACzL,EAAM8R,GAAP,OAAiB,kBAAC,GAAD,CACvDlG,IAAKkG,EACL9R,KAAMA,EACNgQ,YAAa,WACNhQ,EAAKhD,QAAU,EAAKyI,MAAMsK,cACzB,EAAKJ,SAAS,CAACmQ,aAAc9f,IAC7B,EAAK+X,QAAQ,aAAa,KAGlCxH,WAAY,EAAK9K,MAAMid,aAAajS,YAIhD,kBAACU,GAAA,EAAD,MAEIlQ,EAAM4K,OAAS,EAAI,kBAACuF,GAAA,EAAD,CACfvL,UAAWH,EAAQ6e,UACnBne,QAAS,kBAAM,EAAK2R,QAAQ,SAAS,KAFtB,eAKP,KAGZ9O,KAAKxD,MAAMsK,cAAgB9G,KAAKxD,MAAMid,aAAajS,MAAQ,kBAACW,GAAA,EAAD,CACvDvL,UAAWH,EAAQ6e,UACnBne,QAAS,kBAAM,EAAK2R,QAAQ,UAAU,KAFiB,gBAK/C,KAGZ9O,KAAKjN,MAAM8jB,aAAe,kBAAC,GAAD,CACtB7O,KAAMhI,KAAKjN,MAAM4jB,aACjB7H,QAAS9O,KAAK8O,QACdxb,KAAM0M,KAAKjN,MAAM8jB,aACjBlN,SAAU3J,KAAKxD,MAAMmN,SACrByM,eAAgB,kBAAM,EAAK5Z,MAAM4Z,eAAe,EAAKrjB,MAAM8jB,aAAa9iB,QACxEsiB,oBAAqB,kBAAM,EAAKvH,QAAQ,WAAW,IACnDwH,iBAAkB,kBAAM,EAAKkB,qBAAqB,EAAKzkB,MAAM8jB,aAAa9iB,UACzE,KAET,kBAAC,GAAD,CACIiU,KAAMhI,KAAKjN,MAAM6jB,wBACjB9H,QAAS9O,KAAK8O,QACduH,oBAAqB,WACjB,EAAK7Z,MAAM6Z,oBAAoB,EAAKtjB,MAAM8jB,cAC1C,EAAK/H,QAAQ,WAAW,GACxB,EAAKA,QAAQ,aAAa,OAG7B,MAGjB,kBAAC,GAAD,CACI9G,KAAMhI,KAAKjN,MAAM0nB,sBACjB3L,QAAS9O,KAAK8O,QACdgL,kBAAmB9Z,KAAK8Z,oBAE5B,kBAAC,GAAD,CACI9R,KAAMhI,KAAKjN,MAAM2nB,qBACjB5L,QAAS9O,KAAK8O,QACdmL,iBAAkBja,KAAKia,iBACvBD,QAASha,KAAKxD,MAAMsK,cAAgB9G,KAAKxD,MAAMid,aAAajS,QAEhE,kBAAC,GAAD,CACIQ,KAAMhI,KAAKjN,MAAM4f,oBACjB7D,QAAS,SAAC9G,GAAD,OAAU,EAAK8G,QAAQ,QAAS9G,IACzCyJ,kBAAmBzR,KAAKyR,oBAE5B,kBAAC,GAAD,CACIzJ,KAAMhI,KAAKjN,MAAM4nB,wBACjB7L,QAAS9O,KAAK8O,QACdsL,SAAUpiB,EACVwP,MAAOxH,KAAKxD,MAAMid,aAAajS,MAC/BV,YAAa9G,KAAKxD,MAAMsK,YACxByN,YAAavU,KAAKxD,MAAMmN,SACxBwQ,uBAAwBna,KAAKma,yBAEjC,kBAAC,KAAD,CACInS,KAAMhI,KAAKjN,MAAM8kB,SAAS7P,KAC1B0Q,iBAAkB,IAClBzQ,QAASjI,KAAK2X,oBACdzQ,aAAc,CACVC,SAAU,SACVC,WAAY,SAGhB,kBAAC,KAAD,CACIa,QAASjI,KAAK2X,oBACdhG,SAAU3R,KAAKjN,MAAM8kB,SAAS3kB,MAChC8M,KAAKjN,MAAM8kB,SAAS3gB,WAMlC,OAAO,S,GAzUS4M,IAAMC,WA8UnBlI,iBA3VS,SAAC9I,GAAD,MAAY,CAChC+T,YAAa/T,EAAMiJ,KAAKjI,MACxB4V,SAAU5W,EAAM4W,SAASA,SACzBlW,MAAOV,EAAMiJ,KAAKvI,UAGK,SAACoB,GAAD,MAAe,CACtCwD,iBAAkB,SAACb,EAAIO,GAAL,OAAelD,EAASwD,GAAiBb,EAAIO,KAC/DkM,UAAW,SAACxQ,GAAD,OAAWoB,EAASoC,GAAgBxD,KAC/CsG,iBAAkB,SAACtG,EAAOH,EAAMsF,GAAd,OAAuB/D,EAASkF,GAAiBtG,EAAOH,EAAMsF,KAChFD,mBAAoB,SAACC,EAAMZ,GAAP,OAAiBnD,EAAS8D,GAAmBC,EAAMZ,QAiV5D6D,CAA6CqI,OAAY1F,MA/bzD,SAAAlE,GAAK,MAAK,CACrBG,OAAO,aACH6C,MAHY,KAIXhD,EAAMc,YAAYC,KAAK,MAAQ,CAC5BiC,MAAOie,MAGf9d,YAAY,aACRH,MATY,IAUZyM,UAAW,IACVzP,EAAMc,YAAYC,KAAK,MAAQ,CAC5B0O,UAAW,GACXzM,MAAOie,MAGfC,aAAa,cACT9f,QAAS,OACT8O,WAAY,SACZ1M,QAASxD,EAAM4D,QAAQ,EAAG,IACvB5D,EAAMyD,OAAO5C,QAJR,CAKRsP,eAAgB,aAChBgD,aAAc,YACdgO,kBAAmBnhB,EAAMM,QAAQ0J,KAAKqD,WAE1CoT,SAAU,GAGV/Y,OAAQ,CACJ1E,MAAO,IACPW,OAAQ,IACRkG,SAAU,OACVnF,OAAQ,YACR0I,YAAapN,EAAMM,QAAQC,QAAQC,KACnC2M,OAAQ,UACR9K,SAAU,WACVhC,gBAAiBL,EAAMM,QAAQqI,WAEnCpB,gBAAiB,CACbnG,QAAS,OACT+O,eAAgB,SAChB3M,QAAS,UAEb/F,MAAO,CACHmV,UAAW,SACXtF,OAAQ,cACRjL,SAAU,WACViO,YAAa,GACbpP,aAAc,GACdE,QAAS,SACT,iBAAkB,CACdA,QAAS,UAGjB0e,SAAU,CACNtc,QAAS,EACTkW,UAAW,IACXrW,UAAW,QAEfwd,UAAW,CACPvC,WAAY,IACZhO,YAAa,GACbjO,SAAU,WACVnB,aAAc,GACdE,QAAS,SACTT,YAAa,OACb,iBAAkB,CACdS,QAAS,UAGjBwf,QAAS,CACLtf,MAAOtB,EAAMM,QAAQ0J,KAAKqD,SAC1BhL,SAAU,WACV0H,OAAQ,GACRzF,IAAK,MACLM,UAAW,mBACXpB,QAAS,EACTpC,QAAS,OACT,UAAW,CACPA,QAAS,QACTf,gBAAiB,gBAGzBqgB,eAAgB,CACZtf,QAAS,OACT8O,WAAY,SACZ1M,QAAS,UAEbmd,QAAS,CACLnd,QAAS,GAEbpD,UAAW,CACPgB,QAAS,OACT4R,cAAe,SACf7C,eAAgB,UAEpB6Q,UAAW,CACP1f,MAAO,UA+VyD4C,CAAmB8b,MC1b9E3T,GAAS+U,KpCvCE,IoCyClBC,G,YAEF,WAAYnf,GAAO,IAAD,+BACd,8CAAMA,KAiJVof,kBAAoB,kBAAM,EAAKC,aAAa,YAAY,IAlJtC,EAoJlBC,eAAiB,SAAC/oB,GAAD,OAAW,EAAK2T,SAAS,CACtCqV,aAAchpB,KArJA,EAiQlBipB,qBAAuB,kBAAM,EAAKtV,SAAS,CAACqV,cAAe,EAAKhpB,MAAMgpB,gBAjQpD,EAmQlBE,sBAAwB,SAAC3mB,GACrB,EAAKoR,SAAS,CAACuE,WAAY3V,EAAE4V,iBApQf,EAsQlBgR,uBAAyB,WACrB,EAAKxV,SAAS,CAACuE,WAAY,QAvQb,EA0QlBmL,eAAiB,SAACriB,GACd,IAAI6E,EAAO,EAAK4D,MAAMJ,MAAMyH,MAAK,SAAA2V,GAAK,OAAIA,EAAMxhB,MAAM6L,MAAK,SAAApB,GAAI,OAAIA,EAAK1O,QAAU,EAAKyI,MAAM5F,aAAW7C,QAAUA,KAC/G6E,EACC,EAAK3C,WAAW2C,EAAKxC,SAGrB,EAAKoG,MAAM7F,QAAQ5C,EAAO,KAAM,EAAKkC,aA7QzC,EAAKlD,MAAQ,CACT0mB,aAAc,KACdsC,cAAc,EACdI,kBAAkB,EAClBC,mBAAmB,EACnBC,mBAAmB,EACnBC,oBAAoB,EACpBrR,WAAY,MAGhB,EAAK4Q,aAAe,EAAKA,aAAa9N,KAAlB,iBACpB,EAAKwO,YAAc,EAAKA,YAAYxO,KAAjB,iBACnB,EAAK9X,WAAa,EAAKA,WAAW8X,KAAhB,iBAClB,EAAKyO,YAAc,EAAKA,YAAYzO,KAAjB,iBACnB,EAAK0O,cAAgB,EAAKA,cAAc1O,KAAnB,iBACrB,EAAKwL,wBAA0B,EAAKA,wBAAwBxL,KAA7B,iBAC/B,EAAKkL,iBAAmB,EAAKA,iBAAiBlL,KAAtB,iBACxB,EAAKsI,oBAAsB,EAAKA,oBAAoBtI,KAAzB,iBApBb,E,mFAwBE,IAAD,OACf/N,KAAKxD,MAAMwH,SAAShE,KAAKxD,MAAM/I,OAC/BuM,KAAKxD,MAAMyH,UAAUjE,KAAKxD,MAAM/I,OAChCuM,KAAKxD,MAAMkgB,YAAY1c,KAAKxD,MAAM/I,OAClCuM,KAAKmY,qBAELwE,OAAO/M,iBAAiB,UAAU,kBAAM,EAAKgN,iBAAiB,aAC9DD,OAAO/M,iBAAiB,WAAW,kBAAM,EAAKgN,iBAAiB,cAC/DD,OAAO/M,iBAAiB,gBAAgB,WACpC,EAAKgN,iBAAiB,cAE1BD,OAAO/M,iBAAiB,UAAU,WAC9B,EAAKgN,iBAAiB,cAG1B5c,KAAK4c,iBAAiB,Y,6CAItB5c,KAAK4c,iBAAiB,a,2CAGL,IAAD,OAChBjW,GAAOC,GAAG,gBAAgB,SAACtT,GACpBA,EAAK0E,MAAM4c,SAAS,EAAKpY,MAAM5F,aAC3BtD,EAAKsF,OAAS,EAAK7F,MAAM0mB,cAAgBnmB,EAAKoM,SAAW,EAAKlD,MAAM5F,UAChE,EAAK4F,MAAMJ,MAAMyH,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAY9C,EAAKsF,QACrD,EAAK4jB,YAAYlpB,EAAKsF,MAAMvD,MAAK,WAC7B,EAAKmH,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC/B,EAAK+I,MAAMyH,UAAU,EAAKzH,MAAM/I,UAIpC,EAAK+oB,YAAYlpB,EAAKsF,KAAM,SAASvD,MAAK,WACtC,EAAKmH,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC/B,EAAK+I,MAAMyH,UAAU,EAAKzH,MAAM/I,WAKxC,EAAK+I,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC/B,EAAK+I,MAAMyH,UAAU,EAAKzH,MAAM/I,YAI5CkT,GAAOC,GAAG,mBAAmB,SAACtT,GACvBA,EAAK0E,MAAM4c,SAAS,EAAKpY,MAAM5F,aAC9B,EAAK4F,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC/B,EAAK+I,MAAMyH,UAAU,EAAKzH,MAAM/I,WAGxCkT,GAAOC,GAAG,gBAAgB,SAACtT,GACpBA,EAAK0E,MAAM4c,SAAS,EAAKpY,MAAM5F,aAC9B,EAAK4F,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC5B,EAAKV,MAAM0mB,eAAiBnmB,EAAKsF,MAChC,EAAK3C,WAAW,UAI5B0Q,GAAOC,GAAG,mBAAmB,SAACtT,GACvBA,EAAK0E,MAAM4c,SAAS,EAAKpY,MAAM5F,aAC9B,EAAK4F,MAAMwH,SAAS,EAAKxH,MAAM/I,OAC/B,EAAK+I,MAAM6W,iBAAiB,EAAK7W,MAAM/I,OACpC,EAAKV,MAAM0mB,eAAiBnmB,EAAKsF,MAChC,EAAK3C,WAAW,UAI5B0Q,GAAOC,GAAG,iBAAiB,SAACtT,GACrBA,EAAK0E,MAAM4c,SAAS,EAAKpY,MAAM5F,aAC9B,EAAK4F,MAAMyH,UAAU,EAAKzH,MAAM/I,OAC7B,EAAKV,MAAM0mB,eAAiBnmB,EAAKupB,OAChC,EAAK5mB,WAAW,Y,uCAMfzB,GACbmS,GAAO2R,KAAK,qBAAsB,CAC9BvhB,KAAMiJ,KAAKxD,MAAM5F,UACjBpC,a,iCAIG+C,EAAQgR,GAAU,IAAD,OAElB3P,EAAO2P,EAAS1E,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAYmB,KAErC,SAAdqB,EAAK1F,MACA0F,EAAK8K,iBAAmB9K,EAAKkQ,SAASlG,OAAS,GAAKhK,EAAKkQ,SAASlQ,EAAKkQ,SAASlG,OAAS,GAAGlD,OAAO3L,QAAUiM,KAAKxD,MAAM5F,UACxHoJ,KAAKwc,YAAYjlB,EAAQ,QACpBlC,MAAK,kBAAM,EAAKqR,SAAS,CACtB+S,aAAcliB,EACdwkB,cAAc,OAItB/b,KAAK0G,SAAS,CACV+S,aAAcliB,EACdwkB,cAAc,IAKEnjB,EAAKgL,UAAUC,MAAK,SAAApB,GAAI,OAAIA,EAAK1O,QAAU,EAAKyI,MAAM5F,cACxDgC,EAAKkQ,SAASlQ,EAAKkQ,SAASlG,OAAS,GAAGlD,OAAO3L,QAAUiM,KAAKxD,MAAM5F,UACtFoJ,KAAKwc,YAAYjlB,EAAQ,SACpBlC,MAAK,kBAAM,EAAKqR,SAAS,CACtB+S,aAAcliB,EACdwkB,cAAc,OAItB/b,KAAK0G,SAAS,CACV+S,aAAcliB,EACdwkB,cAAc,M,6EAYZxkB,EAAQrE,G,kFAChB8M,KAAKxD,MAAMlD,SAAS/B,EAAQrE,G,2IAG1BuY,EAAKvY,GAEb,IAAMgE,EAAU,CACZ,KAAQhE,EACR,OAAU8M,KAAKxD,MAAM5F,UACrB,KAAQoJ,KAAKjN,MAAM0mB,aACnB,QAAWhO,GAGf9E,GAAO2R,KAAK,eAAgBphB,K,oCAIlBuU,GAAK,IAAD,OAGR7S,EADS,uBAAOoH,KAAKxD,MAAMsgB,QAAlB,aAA6B9c,KAAKxD,MAAMJ,QAChCyH,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBAElElI,QAAQwL,IAAInkB,EAAKkQ,SAASlQ,EAAKkQ,SAASlG,OAAS,IAEjD+D,GAAO2R,KAAK,iBAAkB,CAC1BphB,QAASuU,EACT7S,KAAMA,EAAKxC,QACXlD,KAAM0F,EAAK1F,S,yCAKfyT,GAAO2R,KAAK,cAAe,CACvB,QAAWtY,KAAKjN,MAAM0mB,iB,0CAIV1iB,GAAM,IAAD,OACrB,GAAGA,EAAK,CACJ,IAAM6B,EAAOoH,KAAKxD,MAAMJ,MAAMyH,MAAK,SAAA2V,GAAK,OAAIA,EAAMxhB,MAAM6L,MAAK,SAAApB,GAAI,OAAIA,EAAK1O,QAAUgD,EAAKhD,YACzFwd,QAAQwL,IAAIhmB,GACZwa,QAAQwL,IAAInkB,GACZ,IAAItF,EAAO,GAEPA,EADDsF,EACQ,CACH,KAAQA,EAAKxC,QACb,QAAWW,EAAKhD,MAChB,KAAQiM,KAAKxD,MAAM5F,WAIhB,CACH,KAAQ,KACR,QAAWG,EAAKhD,MAChB,KAAQiM,KAAKxD,MAAM5F,WAG3B+P,GAAO2R,KAAK,iBAAkBhlB,OAE7B,CACD,IACMohB,EADO1U,KAAKxD,MAAMJ,MAAMyH,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBACpDzhB,MAAM6L,MAAK,SAAApB,GAAI,OAAIA,EAAK1O,QAAU,EAAKyI,MAAM5F,aAAW7C,MAEvET,EAAO,CACT,KAAQ0M,KAAKjN,MAAM0mB,aACnB,QAAW/E,EACX,KAAQ1U,KAAKxD,MAAM5F,WAGvB+P,GAAO2R,KAAK,iBAAkBhlB,M,wCAIpBkE,GACdmP,GAAO2R,KAAK,eAAgB,CACxB,QAAW9gB,M,mCAINwlB,EAAOjqB,GAChB,OAAQiqB,GACJ,IAAK,SACDhd,KAAK0G,SAAS,CAACyV,iBAAkBppB,IACjC,MACJ,IAAK,UACDiN,KAAK0G,SAAS,CAAC0V,kBAAmBrpB,IAClC,MACJ,IAAK,WACDiN,KAAK0G,SAAS,CAAC2V,kBAAmBtpB,IAClC,MACJ,IAAK,WACDiN,KAAK0G,SAAS,CAAC4V,mBAAoBvpB,IACnC,MACJ,QACI,U,8CAIYwV,GAAU,IAAD,OACzBkR,EAAelR,EAASQ,QAAO,SAAAyQ,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBAAc,GACvF,OAAGA,EACQA,EAAazhB,MAAM+Q,QAAO,SAAAC,GAAK,OAAIA,EAAMjV,QAAU,EAAKyI,MAAM5F,aAClE,K,+BAsBD,IAAD,OAEG6F,EAAYuD,KAAKxD,MAAjBC,QAEJwgB,EAAY,GAIhB,OAHGjd,KAAKxD,MAAMJ,OAAS4D,KAAKxD,MAAMsgB,SAC9BG,EAAS,uBAAOjd,KAAKxD,MAAMsgB,QAAlB,aAA6B9c,KAAKxD,MAAMJ,SAGjD,yBAAKQ,UAAW,aAAeH,EAAQ4P,WACnC,kBAAC,GAAD,CACIvX,QAASkL,KAAKxD,MAAM1H,QACpBuT,iBAAkBrI,KAAK4b,kBACvB1S,iBAAkBlJ,KAAK/J,WACvBgT,kBAAmBjJ,KAAKjN,MAAM0mB,aAC9BhQ,kBAAmB,kBAAM,EAAKoS,aAAa,UAAU,IACrDzS,mBAAoB,kBAAM,EAAKyS,aAAa,WAAW,IACvDvS,oBAAqB,kBAAM,EAAKuS,aAAa,YAAY,IACzDtT,SAAU0U,EACVlmB,KAAMiJ,KAAKxD,MAAM0gB,WAIe,OAA5Bld,KAAKjN,MAAM0mB,aAAwB,yBAAK7c,UAAWoD,KAAKjN,MAAMgpB,aAAetf,EAAQmQ,aAAenQ,EAAQwC,SACxG,yBAAKrC,UAAWH,EAAQ2Q,mBACpB,kBAAC,GAAD,CACImM,wBAAyBvZ,KAAKuZ,wBAC9BhR,SAAU0U,EACVxD,aAAczZ,KAAKjN,MAAM0mB,aACzBV,mBAAoB/Y,KAAKgc,qBACzBrC,eAAgB3Z,KAAKic,sBACrB5C,gBAAiBrZ,KAAKkc,uBACtBjD,iBAAkBjZ,KAAKiZ,iBACvB5C,oBAAqBrW,KAAKqW,oBAC1BpL,WAAYjL,KAAKjN,MAAMkY,aAE3B,kBAAC,GAAD,CACIrS,KAAMqkB,EAAUlU,QAAO,SAAAyQ,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBAAc,GAC3ErN,oBAAqBpM,KAAKyc,gBAG1BQ,EAAUpZ,MAAK,SAAA2V,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBAAgB,kBAAC,GAAD,CACjEA,aAAczZ,KAAKjN,MAAM0mB,aACzB7K,iBAAkBqO,EAAUlU,QAAO,SAAAyQ,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBAAc,GAAGvmB,KAC1Fyb,kBAAmB3O,KAAKuc,YACxBY,kBAAmBnd,KAAKwc,cACvB,OAIjB,yBAAK5f,UAAWH,EAAQwQ,kBACpB,yBAAKrQ,UAAU,aACX,kBAAC,KAAD,CAAoBA,UAAWH,EAAQsQ,UACvC,kBAAC/P,EAAA,EAAD,CAAYogB,QAAQ,IAAIxgB,UAAWH,EAAQ6H,MAA3C,0CAKhB,kBAAC,GAAD,CACI0D,KAAMhI,KAAKjN,MAAMgpB,aACjBjB,aAAc9a,KAAK8b,eACnBrC,aAAcwD,EAAUlU,QAAO,SAAAyQ,GAAK,OAAIA,EAAMpjB,UAAY,EAAKrD,MAAM0mB,gBAAc,GACnF7iB,UAAWoJ,KAAKxD,MAAM5F,UACtBymB,iBAAkBrd,KAAK/J,WACvB6jB,kBAAmB9Z,KAAK8Z,kBACxB1D,eAAgBpW,KAAKoW,eACrBC,oBAAqBrW,KAAKqW,oBAC1B1P,OAAQA,GACR1Q,WAAY+J,KAAK/J,aAErB,kBAAC,GAAD,CAAc+R,KAAMhI,KAAKjN,MAAMopB,iBAAkBrN,QAAS9O,KAAK6b,eAC9D7b,KAAKxD,MAAM0gB,SACR,kBAAC,GAAD,CACIlV,KAAMhI,KAAKjN,MAAMqpB,kBACjBtN,QAAS9O,KAAK6b,eACb,KACT,kBAAC,GAAD,CACI7T,KAAMhI,KAAKjN,MAAMspB,kBACjBvN,QAAS9O,KAAK6b,eAElB,kBAAC,GAAD,CACI7T,KAAMhI,KAAKjN,MAAMupB,mBACjBxN,QAAS9O,KAAK6b,aACdlV,OAAQA,GACR0W,iBAAkBrd,KAAK/J,WACvBmgB,eAAgBpW,KAAKoW,eACrBC,oBAAqBrW,KAAKqW,2B,GA5WtBvS,IAAMC,WAoXflI,iBAzYS,SAAC9I,GAAD,MAAY,CAChC+I,WAAY/I,EAAMqJ,MAAMN,WACxB4N,OAAQ3W,EAAMqJ,MAAMsN,OACpBtN,MAAOrJ,EAAMqJ,MAAMA,MACnB0gB,OAAQ/pB,EAAMqJ,MAAM0gB,OACpBlmB,UAAW7D,EAAMiJ,KAAKjI,MACtBmpB,SAAUnqB,EAAMO,KAAKA,KACrBG,MAAOV,EAAMiJ,KAAKvI,UAGK,SAACoB,GAAD,MAAe,CACtCmP,SAAU,SAACvQ,GAAD,OAAWoB,EAASsB,EAAe1C,KAC7C6F,SAAU,SAACV,EAAM1F,GAAP,OAAgB2B,EAASyE,GAASV,EAAM1F,KAClDmgB,iBAAkB,SAAC5f,GAAD,OAAWoB,EAASwe,GAAiB5f,KACvDwQ,UAAW,SAACxQ,GAAD,OAAWoB,EAASoC,GAAgBxD,KAC/CipB,YAAa,SAACjpB,GAAD,OAAWoB,EAAS6P,GAAmBjR,KACpDkD,QAAS,SAACC,EAAWC,EAAWZ,GAAvB,OAAsCpB,EAAS8B,EAAQC,EAAWC,EAAWZ,QAyX3E4F,CAA6C2C,KAAWnB,GAAXmB,CAAmBmd,K,UCrUhEte,GAzFA,SAAA/C,GAAK,YAAK,CACrBgjB,aAAa,aACT5hB,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZvM,OAAQ,QACP3D,EAAMc,YAAYC,KAAK,MAAQ,CAC5B4C,OAAQ,OACR3C,UAAW,OACXkP,WAAY,aACZ8C,cAAe,WAGvBxS,MAAI,GACAwC,MAAO,OACP5B,QAAS,QACT8B,WAAYlD,EAAM4D,QAAQ,GAC1BjD,YAAaX,EAAM4D,QAAQ,IAJ3B,cAKC5D,EAAMc,YAAYK,GAAG,IAAyB,EAAnBnB,EAAM4D,QAAQ,IAAU,CAChDZ,MAAO,IACPE,WAAY,OACZvC,YAAa,SARjB,cAUCX,EAAMc,YAAYC,KAAK,MAAQ,CAC5BiC,MAAO,OACPsK,OAAQ,EACR1M,SAAU,EACVQ,QAAS,OACT4R,cAAe,WAfnB,GAkBJ3O,MAAM,aACFoL,UAAWzP,EAAM4D,QAAQ,GACzBxC,QAAS,OACT4R,cAAe,SACf9C,WAAY,SACZ1M,QAAQ,GAAD,OAAKxD,EAAM4D,QAAQ,GAAnB,cAA2B5D,EAAM4D,QAAQ,GAAzC,cAAiD5D,EAAM4D,QAAQ,GAA/D,OACN5D,EAAMc,YAAYC,KAAK,MAAQ,CAC5B0O,UAAWzP,EAAM4D,QAAQ,GACzBY,aAAc,EACd5D,SAAU,EACVuP,eAAgB,WAGxB0I,KAAM,CACF7V,MAAO,QAEX8V,MAAO,CACH,iBAAkB,CACd3F,aAAc,6CAGtB8P,OAAQ,CACJxT,UAAWzP,EAAM4D,QAAQ,IAE7Bsf,iBAAkB,CACdlgB,MAAO,QAEXmgB,UAAW,CACPngB,MAAO,OACPogB,eAAgB,OAChB9hB,MAAOtB,EAAMM,QAAQC,QAAQC,KAC7B8d,WAAY,UAEhBrjB,MAAO,CACH+H,MAAO,OACPyM,UAAW,QAEf/H,OAAQ,CACJ1E,MAAO,QACPW,OAAQ,QACRkG,SAAU,UACVnF,OAAQ,YACR0I,YAAapN,EAAMM,QAAQC,QAAQC,MAEvC6Y,SAAU,CACNjY,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZ5C,OAAQ,UAEZ/F,gBAAiB,CACfkI,UAAW,QAEb4T,YAAa,CACT/E,WAAY,O,qDClDdgF,G,YAEF,aAAe,IAAD,wBACV,iDAsFJxP,WAAa,SAACwE,EAAYC,GACtB,OAAQD,GACJ,IAAK,QACD,EAAKlM,SAAS,CAAE3S,MAAO8e,EAAMvE,OAAOC,QACpC,EAAK/R,MAAMqhB,gBACX,MACJ,IAAK,WACD,EAAKnX,SAAS,CAAEvR,SAAU0d,EAAMvE,OAAOC,UA9FrC,OAGV,EAAKxb,MAAQ,CACTgB,MAAO,GACPoB,SAAU,GACV2oB,YAAa,GACbC,WALkB,UAQtB,EAAKC,QAAU,EAAKA,QAAQjQ,KAAb,iBAVL,E,qEAaRzY,GACFA,EAAE2oB,iBACFje,KAAKxD,MAAMtH,UAAU8K,KAAKjN,MAAMgB,MAAOiM,KAAKjN,MAAMoC,UAClD6K,KAAKxD,MAAMqhB,kB,gCAIR7d,KAAKjN,MAAMgB,MAAM6O,QAAU,GAC1B5C,KAAKxD,MAAMkgB,YAAY1c,KAAKjN,MAAMgB,S,+BAIhC,IAAD,OAEG0I,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,yBAAKG,UAAWH,EAAQ6gB,cACpB,0BAAM1gB,UAAWH,EAAQ3B,MACrB,kBAACojB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAOvhB,UAAWH,EAAQkC,OACtB,kBAAC3B,EAAA,EAAD,CAAY8O,UAAU,KAAK7O,QAAQ,MAAnC,WAII+C,KAAKjN,MAAM+qB,aAAe9d,KAAKxD,MAAM/H,WACjC,kBAAC,KAAD,CAAOkd,SAAS,OAAO/U,UAAWH,EAAQlH,OACrCyK,KAAKjN,MAAM+qB,aAAe9d,KAAKxD,MAAM/H,YAE1C,KAGJuL,KAAKxD,MAAM0gB,SAAY,4BAAQtgB,UAAWH,EAAQoF,iBAE1C7B,KAAKxD,MAAM0gB,SAASpb,cAAgB,kBAAC,KAAD,CAC5BlF,UAAWH,EAAQuF,OACnBlF,ItCrFpB,GsCqFoCkD,KAAKxD,MAAM0gB,SAASpb,gBAExC,kBAAC,KAAD,CAAQlF,UAAWH,EAAQuF,SAElBhC,KAAKxD,MAAM0gB,SAASrnB,KAAOmK,KAAKxD,MAAM0gB,SAASrnB,KAAKoM,OAAO,GAAGC,cAAgB,IAAM,IACpFlC,KAAKxD,MAAM0gB,SAASpnB,QAAUkK,KAAKxD,MAAM0gB,SAASpnB,QAAQmM,OAAO,GAAGC,cAAgB,KAIrG,kBAAClF,EAAA,EAAD,CAAY8O,UAAU,KAAK7O,QAAQ,KAAKL,UAAWH,EAAQkhB,aAA3D,YACc3d,KAAKxD,MAAM0gB,SAASrnB,OAE1B,KAEhB,0BAAMuoB,SAAU,SAAC9oB,GAAD,OAAO,EAAKvB,MAAMuB,IAAIsH,UAAWH,EAAQ0W,MACrD,kBAACkL,GAAA,EAAD,CAAaC,UAAQ,EAAClW,WAAS,EAACR,OAAO,UACnC,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,sBAApB,SACA,kBAACC,GAAA,EAAD,CACInP,WAAS,EACT1S,UAAWH,EAAQ2W,MACnB/E,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,QAAS9Y,IAC1CopB,OAAQ1e,KAAKge,QACbxmB,GAAG,wBAGX,kBAAC6mB,GAAA,EAAD,CAAaC,UAAQ,EAAClW,WAAS,EAACR,OAAO,UACnC,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,yBAApB,YACA,kBAACC,GAAA,EAAD,CAAOvrB,KAAK,WAAW0J,UAAWH,EAAQ2W,MAAO/E,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,WAAY9Y,IAAIkC,GAAG,2BAEzG,kBAAC2Q,GAAA,EAAD,CAAQjV,KAAK,SAASkV,WAAS,EAACnL,QAAQ,YAAYrB,MAAM,UAAUgB,UAAWH,EAAQ8gB,QAAvF,WAEJ,wBAAI3gB,UAAWH,EAAQ+gB,kBAAvB,0BAAgE,kBAAC,KAAD,CAAM5gB,UAAWH,EAAQghB,UAAWkB,GAAG,aAAvC,mB,GAlFpE7a,IAAMC,WAwGXlI,gBAxHf,SAAyB9I,GACrB,MAAO,CACHgJ,iBAAkBhJ,EAAMiJ,KAAKD,iBAC7BtH,WAAY1B,EAAMiJ,KAAKvH,WACvByoB,SAAUnqB,EAAMO,KAAKyS,qBAI7B,SAA4BlR,GACxB,MAAO,CACHK,UAAW,SAACnB,EAAOoB,GAAR,OAAqBN,EAASK,EAAUnB,EAAOoB,KAC1DunB,YAAa,SAAC3oB,GAAD,OAAWc,EAASoR,GAA0BlS,KAC3D8pB,cAAe,kBAAMhpB,E/BsNlB,CACH3B,KP9KoC,qCsCmE7B2I,CAA6C2C,KAAWnB,GAAXmB,CAAmBof,KCrEhEvgB,GAtEA,SAAA/C,GAAK,YAAK,CACrBgjB,aAAa,aACT5hB,QAAS,OACT+O,eAAgB,SAChBD,WAAY,SACZvM,OAAQ,QACP3D,EAAMc,YAAYC,KAAK,MAAQ,CAC5B4C,OAAQ,OACR3C,UAAW,OACXkP,WAAY,aACZ8C,cAAe,WAGvBxS,MAAI,GACAwC,MAAO,OACP5B,QAAS,QACT8B,WAAYlD,EAAM4D,QAAQ,GAC1BjD,YAAaX,EAAM4D,QAAQ,IAJ3B,cAKC5D,EAAMc,YAAYK,GAAG,IAAyB,EAAnBnB,EAAM4D,QAAQ,IAAU,CAChDZ,MAAO,IACPE,WAAY,OACZvC,YAAa,SARjB,cAUCX,EAAMc,YAAYC,KAAK,MAAQ,CAC5BiC,MAAO,OACPsK,OAAQ,EACR1M,SAAU,EACVQ,QAAS,OACT4R,cAAe,WAfnB,GAkBJ3O,MAAM,aACFoL,UAAWzP,EAAM4D,QAAQ,GACzBxC,QAAS,OACT4R,cAAe,SACf9C,WAAY,SACZ1M,QAAQ,GAAD,OAAKxD,EAAM4D,QAAQ,GAAnB,cAA2B5D,EAAM4D,QAAQ,GAAzC,cAAiD5D,EAAM4D,QAAQ,GAA/D,OACN5D,EAAMc,YAAYC,KAAK,MAAQ,CAC5B0O,UAAWzP,EAAM4D,QAAQ,GACzBY,aAAc,EACd5D,SAAU,EACVuP,eAAgB,WAGxB0I,KAAM,CACF7V,MAAO,QAEX8V,MAAO,CACH,iBAAkB,CACd3F,aAAc,6CAGtB8P,OAAQ,CACJxT,UAAWzP,EAAM4D,QAAQ,IAE7Bsf,iBAAkB,CACdlgB,MAAO,QAEXmgB,UAAW,CACPngB,MAAO,OACPogB,eAAgB,OAChB9hB,MAAOtB,EAAMM,QAAQC,QAAQC,KAC7B8d,WAAY,UAEhBrjB,MAAO,CACH+H,MAAO,OACPyM,UAAW,U,ICrCb6U,G,YAEF,aAAe,IAAD,+BACV,iDA4DJxQ,WAAa,SAACwE,EAAYC,GACtB,OAAQD,GACJ,IAAK,OACD,EAAKlM,SAAS,CAAE7Q,KAAMgd,EAAMvE,OAAOC,QACnC,MACJ,IAAK,UACD,EAAK7H,SAAS,CAAE5Q,QAAS+c,EAAMvE,OAAOC,QACtC,MACJ,IAAK,QACD,EAAK7H,SAAS,CAAE3S,MAAO8e,EAAMvE,OAAOC,QACpC,MACJ,IAAK,WACD,EAAK7H,SAAS,CAAEvR,SAAU0d,EAAMvE,OAAOC,QACvC,MACJ,IAAK,uBACD,EAAK7H,SAAS,CAAE6L,qBAAsBM,EAAMvE,OAAOC,UA5EjD,EAmFd+D,YAAc,kBAAM,EAAKvf,MAAMoC,WAAa,EAAKpC,MAAMwf,sBAnFzC,EAoFdH,aAAe,kBAAM,EAAKrf,MAAMgB,MAAM6O,QAAU,GApFlC,EAqFdyP,gBAAkB,kBAAM,EAAKtf,MAAMoC,SAASyN,QAAU,GArFxC,EAuFdic,aAAe,SAACvpB,GACZA,EAAE2oB,iBAEF,EAAKvX,SAAS,CAACoY,YAAa,KAExB,EAAK1M,eAIL,EAAKC,kBAIL,EAAKC,cAKT,EAAK9V,MAAM5G,aAAa,EAAK7C,MAAM8C,KAAM,EAAK9C,MAAM+C,QAAS,EAAK/C,MAAMgB,MAAO,EAAKhB,MAAMoC,SAAU,EAAKpC,MAAMgrB,YAJ3G,EAAKrX,SAAS,CAAEoY,YAAa,4BAJ7B,EAAKpY,SAAS,CAAEoY,YAAa,4CAJ7B,EAAKpY,SAAS,CAAEoY,YAAa,0CA3FjC,EAAK/rB,MAAQ,CACT8C,KAAM,KACNC,QAAS,KACT/B,MAAO,KACPoB,SAAU,KACVod,qBAAsB,KACtBuM,YAAa,IARP,E,wEAYJ,IAAD,OAEGriB,EAAYuD,KAAKxD,MAAjBC,QAER,OACI,yBAAKG,UAAWH,EAAQ6gB,cACpB,0BAAM1gB,UAAWH,EAAQ3B,MACrB,kBAACojB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAOvhB,UAAWH,EAAQkC,OACtB,kBAAC3B,EAAA,EAAD,CAAY8O,UAAU,KAAK7O,QAAQ,MAAnC,WAII+C,KAAKjN,MAAM+rB,aAAe9e,KAAKxD,MAAMuiB,mBACjC,kBAAC,KAAD,CAAOpN,SAAS,OAAO/U,UAAWH,EAAQlH,OACrCyK,KAAKjN,MAAM+rB,aAAe9e,KAAKxD,MAAMuiB,oBAE1C,KAER,0BAAMX,SAAU,SAAC9oB,GAAD,OAAO,EAAKupB,aAAavpB,IAAIsH,UAAWH,EAAQ0W,MAC5D,kBAACkL,GAAA,EAAD,CAAaC,UAAQ,EAAClW,WAAS,EAACR,OAAO,UACnC,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,sBAApB,QACA,kBAACC,GAAA,EAAD,CAAO7hB,UAAWH,EAAQ2W,MAAO9D,WAAS,EAACjB,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,OAAQ9Y,IAAIkC,GAAG,uBAE/F,kBAAC6mB,GAAA,EAAD,CAAajW,WAAS,EAACR,OAAO,UAC1B,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,sBAApB,qBACA,kBAACC,GAAA,EAAD,CAAO7hB,UAAWH,EAAQ2W,MAAO/E,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,UAAW9Y,IAAIkC,GAAG,0BAExF,kBAAC6mB,GAAA,EAAD,CAAaC,UAAQ,EAAClW,WAAS,EAACR,OAAO,UACnC,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,sBAApB,SACA,kBAACC,GAAA,EAAD,CAAO7hB,UAAWH,EAAQ2W,MAAO/E,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,QAAS9Y,IAAIkC,GAAG,wBAEtF,kBAAC6mB,GAAA,EAAD,CAAaC,UAAQ,EAAClW,WAAS,EAACR,OAAO,UACnC,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,yBAApB,YACA,kBAACC,GAAA,EAAD,CAAOvrB,KAAK,WAAW0J,UAAWH,EAAQ2W,MAAO/E,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,WAAY9Y,IAAIkC,GAAG,2BAEzG,kBAAC6mB,GAAA,EAAD,CAAaC,UAAQ,EAAClW,WAAS,EAACR,OAAO,UACnC,kBAAC2W,GAAA,EAAD,CAAYC,QAAQ,sCAApB,oBACA,kBAACC,GAAA,EAAD,CAAOvrB,KAAK,WAAW0J,UAAWH,EAAQ2W,MAAO/E,SAAU,SAAC/Y,GAAD,OAAO,EAAK8Y,WAAW,uBAAwB9Y,IAAIkC,GAAG,wCAErH,kBAAC2Q,GAAA,EAAD,CAAQjV,KAAK,SAASkV,WAAS,EAACnL,QAAQ,YAAYrB,MAAM,UAAUgB,UAAWH,EAAQ8gB,QAAvF,WAEJ,wBAAI3gB,UAAWH,EAAQ+gB,kBAAvB,4BAAkE,kBAAC,KAAD,CAAM5gB,UAAWH,EAAQghB,UAAWkB,GAAG,UAAvC,kB,GAxDnE7a,IAAMC,WAgHdlI,gBA3Hf,SAAyB9I,GACrB,MAAO,CACHmJ,cAAenJ,EAAMiJ,KAAKE,cAC1B6iB,mBAAoBhsB,EAAMiJ,KAAK+iB,uBAIvC,SAA4BlqB,GACxB,OAAOyH,YAAmBC,EAAgB1H,KAmH/BgH,CAA6C2C,KAAWnB,GAAXmB,CAAmBogB,K,oBCzIzEtkB,GAAQ0kB,aAAe,CACzBpkB,QAAS,CACLC,QAAS,CACLC,KAAM,YAGdM,YAAa,CACT6jB,OAAQ,CACJC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,SAQD,SAASC,GAAM9iB,GAC1B,OACI,kBAAC+iB,GAAA,EAAD,CAAejlB,MAAOA,IACjBkC,EAAMgjB,UCnBnB,SAASC,GAAgB1sB,GACrB,MAAO,CACHU,MAAOV,EAAMiJ,KAAKvI,MAClBmD,UAAW7D,EAAMiJ,KAAKjI,MACtBkI,gBAAiBlJ,EAAMiJ,KAAKC,iBAIpC,SAASyjB,GAAmB7qB,GACxB,OAAOyH,YAAmBC,EAAgB1H,GAGvC,SAAS8qB,GAAwB5b,GAAY,IAE1C6b,EAFyC,YAI3C,WAAYpjB,GAAQ,IAAD,+BACf,8CAAMA,KACDzJ,MAAQ,CACT2W,QAAQ,GAHG,EAJwB,mFAYvC1J,KAAK6f,cAZkC,kCAsCZ,IAAD,OAApBrjB,EAAoB,uDAAZwD,KAAKxD,MACnB,GAAIA,EAAMP,gBAAiBnH,EAAQC,KAAK,SACnC,CACD,IAAMtB,EAAQU,aAAa2C,QAAQ,SAC7B/C,EAAQI,aAAa2C,QAAQ,aAE/BrD,EAAOE,EAAeF,GAAO4B,MAAK,SAAAyqB,GACf,MAAfA,EAAItrB,QACJ,EAAKgI,MAAMtI,iBAAiBT,EAAOM,GACnCe,EAAQC,KAAK,MAEZ,EAAK2R,SAAS,CACfgD,QAAQ,OAGX1J,KAAK0G,SAAS,CACfgD,QAAQ,OAtDuB,+BA6DvC,OACI,yBAAK9M,UAAU,mBACToD,KAAKxD,MAAMP,iBAAmB+D,KAAKjN,MAAM2W,OACrC,kBAAC3F,EAAc/D,KAAKxD,OACpB,SAjEyB,gDAeXujB,EAAWC,GACvC,GAAGD,EAAU9jB,gBAAiBnH,EAAQC,KAAK,SACvC,CACA,IAAMtB,EAAQU,aAAa2C,QAAQ,SAC7B/C,EAAQI,aAAa2C,QAAQ,aAEnC,IAAIrD,EAYC,MAAO,CAACiW,QAAQ,GAZV/V,EAAeF,GAAO4B,MAAK,SAAAyqB,GAClC,GAAmB,MAAfA,EAAItrB,OAIH,MAAO,CAACkV,QAAQ,GAHjBqW,EAAU7rB,iBAAiBT,EAAOM,GAClCe,EAAQC,KAAK,QAIhBS,OAAM,SAAAsqB,GACH3rB,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,aACxBO,EAAQC,KAAK,QAIzB,OAAO,SAnCgC,GAEP+O,IAAMC,WAuE9C,OAAOlI,YAAQ4jB,GAAiBC,GAAzB7jB,CAA6C+jB,GCtFxD,SAASH,GAAgB1sB,GACrB,MAAO,CACHU,MAAOV,EAAMiJ,KAAKvI,MAClBmD,UAAW7D,EAAMiJ,KAAKjI,MACtBkI,gBAAiBlJ,EAAMiJ,KAAKC,iBAIpC,SAASyjB,GAAmB7qB,GACxB,OAAOyH,YAAmBC,EAAgB1H,GAGvC,SAASorB,GAAsBlc,GAAY,IACxCmc,EADuC,YAGzC,WAAY1jB,GAAQ,IAAD,+BACf,8CAAMA,KACDzJ,MAAQ,CACTotB,kBAAkB,GAHP,EAHsB,mFAWrCngB,KAAK6f,cAXgC,kCAgCV,IAAD,OAApBrjB,EAAoB,uDAAZwD,KAAKxD,MACnB,GAAKA,EAAMP,gBAmBJ+D,KAAK0G,SAAS,CACjByZ,kBAAkB,QApBM,CACxB,IAAM1sB,EAAQU,aAAa2C,QAAQ,SAC7B/C,EAAQI,aAAa2C,QAAQ,aAE9BrD,EACAE,EAAeF,GAAO4B,MAAK,SAAAyqB,GACT,MAAfA,EAAItrB,QACJ,EAAKgI,MAAMtI,iBAAiBT,EAAOM,GACnC,EAAK2S,SAAS,CACVyZ,kBAAkB,KAGrB,EAAK3jB,MAAM1H,QAAQC,KAAK,aAE5BS,OAAM,SAAAsqB,GACH3rB,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,aACxB,EAAKiI,MAAM1H,QAAQC,KAAK,aAbpBiL,KAAKxD,MAAM1H,QAAQC,KAAK,aArCH,+BA0DrC,OACI,yBAAK6H,UAAU,kBACVoD,KAAKxD,MAAMP,iBAAmB+D,KAAKjN,MAAMotB,iBACpC,kBAACpc,EAAc/D,KAAKxD,OACpB,SA9DuB,gDAcTujB,EAAWC,GACvC,IAAID,EAAU9jB,gBAAgB,CAC1B,IAAMxI,EAAQU,aAAa2C,QAAQ,SAC7B/C,EAAQI,aAAa2C,QAAQ,aAE9BrD,EACAE,EAAeF,GAAO4B,MAAK,SAAAyqB,GAC5B,GAAmB,MAAfA,EAAItrB,OAEJ,OADAurB,EAAU7rB,iBAAiBT,EAAOM,GAC3B,CAACosB,kBAAkB,GAEzBJ,EAAUjrB,QAAQC,KAAK,aANpBgrB,EAAUjrB,QAAQC,KAAK,UAUvC,OAAO,SA7B8B,GACR+O,IAAMC,WAqE3C,OAAOlI,YAAQ4jB,GAAiBC,GAAzB7jB,CAA6CqkB,G,oCClEzCttB,KAXM,CACjBa,MAAO,KACPM,MAAO,KACPkI,iBAAiB,EACjBF,kBAAkB,EAClBtH,WAAY,KACZyH,eAAe,EACfkkB,cAAc,EACdrB,mBAAoB,OAGI,qB5CnBM,sB4CyBR,SAAChsB,GAAD,OAClBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBgJ,kBAAkB,EAClBtH,WAAY,UATI,e5ClBM,sB4C8BR,SAAC1B,EAAOI,GAAR,OAClBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBgJ,kBAAkB,EAClBE,iBAAiB,EACjBxI,MAAON,EAAQM,MACfM,MAAOZ,EAAQY,MACfU,WAAY,6CAlBI,e5CjBM,sB4CsCR,SAAC1B,EAAOI,GAAR,OAClBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBgJ,kBAAkB,EAClBE,iBAAiB,EACjBxI,MAAO,KACP8sB,SAAU,KACV9rB,WAAW,yBAAD,OAA2BtB,EAAQqB,OAAnC,YAA6CrB,EAAQsB,iBA3B/C,e5CXD,e4CyCR,SAAC1B,GAAD,OACXstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBkJ,iBAAiB,EACjBxI,MAAO,KACP8sB,SAAU,KACV/rB,OAAQ,UACRC,WAAY,8CApCI,e5CdS,yB4CyDR,SAAC1B,EAAOI,GAAR,OACrBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBgJ,kBAAkB,EAClBE,iBAAiB,EACjBC,eAAe,EACfzI,MAAON,EAAQM,MACfM,MAAOZ,EAAQY,MACfgrB,mBAAoB,6CAlDJ,e5CfS,yB4CmER,SAAChsB,GAAD,OACrBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBmJ,eAAe,OAtDC,e5CbS,yB4CqER,SAACnJ,EAAOI,GAAR,OACrBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBkJ,iBAAiB,EACjBxI,MAAO,KACPM,MAAO,KACPgrB,mBAAmB,mBAAD,OAAqB5rB,EAAQqB,OAA7B,YAAuCrB,EAAQsB,iBA7DjD,KCOb7B,KATM,CACjBU,KAAM,KACNugB,UAAW,KACXrf,OAAQ,KACRsH,YAAY,EACZ4N,QAAQ,EACR3D,iBAAkB,OAGM,kBAAC,G7CoBS,0B6CnBR,SAAChT,EAAOI,GAAR,OACtBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBO,KAAMH,EAAQG,KAEdwI,YAAY,EACZ4N,QAAQ,OANQ,YAAC,G7CqBe,gC6CbR,SAAC3W,GAAD,OAC5BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAVI,YAAC,G7CwBG,oB6CXR,SAAC/I,EAAOI,GAAR,OAChBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBO,KAAMH,EAAQG,KACdkB,OAAQrB,EAAQqB,OAChBsH,YAAY,EACZ4N,QAAQ,OAlBQ,YAAC,G7CyBW,4B6CLR,SAAC3W,EAAOI,GAAR,OACxBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrByB,OAAQrB,EAAQqB,OAChBsH,YAAY,EACZ4N,QAAQ,OAxBQ,YAAC,G7CuBW,4B6CGR,SAAC3W,GAAD,OACxBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OA5BI,YAAC,G7C0BS,0B6CIR,SAAC/I,EAAOI,GAAR,OACtBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrByB,OAAQrB,EAAQqB,YAhCA,YAAC,G7C6BI,qB6CKR,SAACzB,EAAOI,GAAR,OACjBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBO,KAAMH,EAAQG,KACdkB,OAAQrB,EAAQqB,OAChBsH,YAAY,EACZ4N,QAAQ,OAvCQ,YAAC,G7C8BY,6B6CWR,SAAC3W,EAAOI,GAAR,OACzBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrByB,OAAQrB,EAAQqB,OAChBsH,YAAY,EACZ4N,QAAQ,OA7CQ,YAAC,G7C4BY,6B6CmBR,SAAC3W,GAAD,OACzBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAjDI,YAAC,G7CqCW,4B6CcR,SAAC/I,GAAD,OACxBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OArDI,YAAC,G7CoCK,sB6CmBR,SAAC/I,EAAOI,GAAR,OAClBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB8gB,UAAW1gB,EAAQ6E,MACnB8D,YAAY,OA1DI,YAAC,G7CsCG,oB6CsBR,SAAC/I,GAAD,OAChBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB8gB,UAAW,UA9DK,YAAC,G7CwCiB,kC6CwBR,SAAC9gB,EAAOI,GAAR,OAC9BktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBgT,iBAAkB5S,EAAQ4S,iBAC1BjK,YAAY,OAnEI,YAAC,G7CyCuB,gC6C4BR,SAAC/I,GAAD,OACpCstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAvEI,YAAC,G7C0CuB,wC6C+BR,SAAC/I,EAAOI,GAAR,OACpCktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrByB,OAAQrB,EAAQqB,OAChBsH,YAAY,EACZ4N,QAAQ,OA7EQ,YAAC,G7C2Ce,gC6CoCR,SAAC3W,GAAD,OAC5BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBgT,iBAAkB,UAjFF,KCebnT,KAZM,CACjBwJ,MAAO,KACP0gB,OAAQ,KACRhhB,YAAY,EACZ4N,QAAQ,EACRhT,aAAc,KACd2F,cAAc,EACdmkB,mBAAoB,KACpBC,kBAAmB,KACnBvmB,aAAa,IAGW,kBAAC,G9C7BK,sB8C8BR,SAACnH,EAAOI,GAAR,OAClBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBqJ,MAAOjJ,EAAQG,KACfwI,YAAY,EACZ4N,QAAQ,OALQ,YAAC,G9C5BW,4B8CmCR,SAAC3W,GAAD,OACxBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OATI,YAAC,G9CPG,oB8CkBR,SAAC/I,GAAD,OAChBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAc,KACd2F,cAAc,OAdE,YAAC,G9CNG,oB8CuBR,SAACtJ,GAAD,OAChBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAc,KACd2F,cAAc,OApBE,YAAC,G9CLG,oB8C4BR,SAACtJ,EAAOI,GAAR,OAChBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAcvD,EAAQmB,MACtB+H,cAAc,OA1BE,YAAC,G9CJC,kB8CgCR,SAACtJ,EAAOI,GAAR,OACdktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAcvD,EAAQuD,kBA9BN,YAAC,G9CCM,uB8CgCR,SAAC3D,GAAD,OACnBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAnCI,YAAC,G9CEM,uB8CoCR,SAAC/I,EAAOI,GAAR,OACnBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ2kB,kBAAmBttB,OAzCH,YAAC,G9CGM,uB8CyCR,SAACJ,EAAOI,GAAR,OACnBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ2kB,kBAAmBttB,OA/CH,YAAC,G9CvBI,qB8CyER,SAACJ,GAAD,OACjBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAc,KACd2F,cAAc,OArDE,YAAC,G9CtBI,qB8C8ER,SAACtJ,GAAD,OACjBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAc,KACd2F,cAAc,OA3DE,YAAC,G9CrBI,qB8CmFR,SAACtJ,EAAOI,GAAR,OACjBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2D,aAAcvD,EAAQmB,MACtB+H,cAAc,OAjEE,YAAC,G9CnBa,8B8CuFR,SAACtJ,GAAD,OAC1BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAtEI,YAAC,G9ClBa,8B8C2FR,SAAC/I,GAAD,OAC1BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OA3EI,YAAC,G9CjBa,8B8C+FR,SAAC/I,EAAOI,GAAR,OAC1BktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2tB,iBAAkBvtB,EAAQmB,MAC1BwH,YAAY,OAjFI,YAAC,G9Cfe,gC8CmGR,SAAC/I,GAAD,OAC5BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAtFI,YAAC,G9Cde,gC8CuGR,SAAC/I,GAAD,OAC5BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OA3FI,YAAC,G9Cbe,gC8C2GR,SAAC/I,EAAOI,GAAR,OAC5BktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2tB,iBAAkBvtB,EAAQmB,MAC1BwH,YAAY,OAjGI,YAAC,G9CXO,wB8C+GR,SAAC/I,GAAD,OACpBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OAtGI,YAAC,G9CVO,wB8CmHR,SAAC/I,EAAOI,GAAR,OACpBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ0kB,mBAAoBrtB,OA5GJ,YAAC,G9CTO,wB8CwHR,SAACJ,EAAOI,GAAR,OACpBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ0kB,mBAAoBrtB,OAlHJ,YAAC,G9CFI,qB8CuHR,SAACJ,GAAD,OACjBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACtB2W,QAAQ,OAvHS,YAAC,G9CDJ,a8C0HR,SAAC3W,GAAD,OACTstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB2W,QAAQ,OA3HQ,YAAC,G9C1BM,uB8CuJR,SAAC3W,EAAOI,GAAR,OACnBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+pB,OAAQ3pB,EAAQG,KAChBwI,YAAY,EACZ4N,QAAQ,OAjIQ,YAAC,G9CzBY,6B8C4JR,SAAC3W,GAAD,OACzBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,OArII,YAAC,G9CkBK,sB8CqHR,SAAC/I,EAAOI,GAAR,OAClBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB6G,mBAAoBzG,EAAQyG,mBAC5BkC,YAAY,EACZ4N,QAAQ,OA3IQ,YAAC,G9CmBa,8B8C0HR,SAAC3W,EAAOI,GAAR,OAC1BktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB6G,mBAAoBzG,EAAQyG,mBAC5BkC,YAAY,EACZ4N,QAAQ,OAjJQ,YAAC,G9CiBa,8B8CkIR,SAAC3W,GAAD,OAC1BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ4N,QAAQ,OAtJQ,YAAC,G9C/BC,kB8CuLR,SAAC3W,EAAOI,GAAR,OACdktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBmH,YAAa/G,EAAQ+G,iBA1JL,KC1BbtH,KAPM,CACjBkjB,iBAAkB,KAClBnM,SAAU,KACV7N,YAAY,EACZ4N,QAAQ,IAGgB,kBAAC,G/CwDO,wB+CvDR,SAAC3W,EAAOI,GAAR,OACpBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB4W,SAAUxW,EAAQG,KAClBwI,YAAY,EACZ4N,QAAQ,OALQ,YAAC,G/CyDa,8B+ClDR,SAAC3W,GAAD,OAC1BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ4N,QAAQ,OAVQ,YAAC,G/C2DgB,iC+C/CR,SAAC3W,EAAOI,GAAR,OAC7BktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+iB,iBAAkB3iB,EAAQG,KAC1BwI,YAAY,EACZ4N,QAAQ,OAhBQ,YAAC,G/C4DsB,uC+C1CR,SAAC3W,GAAD,OACnCstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ4N,QAAQ,OArBQ,YAAC,G/C6DK,sB+CtCR,SAAC3W,GAAD,OAClBstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+iB,iBAAkB,UAzBF,YAAC,G/C+DU,2B+CpCR,SAAC/iB,EAAOI,GAAR,OACvBktB,OAAOC,OAAO,GAAIvtB,EAAO,CACrBwW,YAAapW,EAAQG,KACrBwI,YAAY,EACZ4N,QAAQ,OA/BQ,YAAC,G/CgEgB,iC+C/BR,SAAC3W,GAAD,OAC7BstB,OAAOC,OAAO,GAAIvtB,EAAO,CACrB+I,YAAY,EACZ4N,QAAQ,OApCQ,KCHbiX,GARKC,YAAgB,CAChCC,QAASC,iBACT9kB,QACA1I,QACA8I,SACAuN,cCGJ,IAAMvP,GAAYC,aAAW,iBAAO,CAChC0mB,IAAK,CACH9iB,OAAQ,YA0BC+iB,OAtBf,WAEI,IClBmCnuB,EDkB7B4J,EAAUrC,KACV6mB,EClBQC,YACVP,GACA9tB,EACAsuB,YAAgBC,ODgBdtsB,EAAUusB,gCAAqBC,EAAgBL,GAErD,OAAO,yBAAKrkB,UAAW,OAASH,EAAQskB,KACpC,kBAAC,IAAD,CAAUE,MAAOA,GACb,kBAAC3B,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,KAAD,CAAQxqB,QAASA,GACb,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOysB,OAAK,EAACC,KAAK,IAAI1V,UAAWmU,GAAsBtE,MACvD,kBAAC,KAAD,CAAO6F,KAAK,SAAS1V,UAAW6T,GAAwB/B,MACxD,kBAAC,KAAD,CAAO4D,KAAK,YAAY1V,UAAW6T,GAAwBf,YEvB7E6C,GAAcxV,QACW,cAA7B0Q,OAAO+E,SAASC,UAEe,UAA7BhF,OAAO+E,SAASC,UAEhBhF,OAAO+E,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzsB,MAAK,SAAA8sB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtvB,QACfivB,UAAUC,cAAcO,YAI1BjR,QAAQwL,IACN,iHAKEgF,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB5Q,QAAQwL,IAAI,sCAGRgF,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B3sB,OAAM,SAAAlB,GACLid,QAAQjd,MAAM,4CAA6CA,MC1FjEquB,IAASC,OAAO,kBAAC,GAAD,MAASvX,SAASC,eAAe,SDgB1C,SAAkByW,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIa,IAAIC,GAAwBnG,OAAO+E,SAASqB,MACpDC,SAAWrG,OAAO+E,SAASsB,OAIvC,OAGFrG,OAAO/M,iBAAiB,QAAQ,WAC9B,IAAMkS,EAAK,UAAMgB,GAAN,sBAEPrB,KAgEV,SAAiCK,EAAOC,GAEtCkB,MAAMnB,EAAO,CACXpuB,QAAS,CAAE,iBAAkB,YAE5B2B,MAAK,SAAAhC,GAEJ,IAAM6vB,EAAc7vB,EAASK,QAAQM,IAAI,gBAEnB,MAApBX,EAASmB,QACO,MAAf0uB,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CnB,UAAUC,cAAcmB,MAAM/tB,MAAK,SAAA8sB,GACjCA,EAAakB,aAAahuB,MAAK,WAC7BsnB,OAAO+E,SAAS4B,eAKpBzB,GAAgBC,EAAOC,MAG1BvsB,OAAM,WACL+b,QAAQwL,IACN,oEAvFAwG,CAAwBzB,EAAOC,GAI/BC,UAAUC,cAAcmB,MAAM/tB,MAAK,WACjCkc,QAAQwL,IACN,iHAMJ8E,GAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.f9e4cc61.chunk.js","sourcesContent":["export function createConstants(...constants) {\n    return constants.reduce((acc, constant) => {\n        acc[constant] = constant;\n        return acc;\n    }, {});\n}\n\nexport function createReducer(initialState, reducerMap) {\n    return (state = initialState, action) => {\n        const reducer = reducerMap[action.type];\n\n\n        return reducer\n            ? reducer(state, action.payload)\n            : state;\n    };\n}\n\n\nexport function parseJSON(response) {\n    return response.data;\n}","import axios from 'axios';\nimport { API_PATH } from './constants';\n\nconst api_host = `${API_PATH}/api`;\n\nconst tokenConfig = (token) => ({\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n    },\n});\n\nexport const validate_token = (token) =>\n    axios.post(`${api_host}/auth/is_token_valid`, {\n        token,\n    }, tokenConfig(token));\n\nexport const create_user = (name, surname, login, password) =>\n    axios.post(`${api_host}/auth/signup`, {\n        name,\n        surname,\n        login,\n        password,\n    });\n\nexport const get_token = (login, password) =>\n    axios.post(`${api_host}/auth/signin`, {\n        login,\n        password,\n    });\n\nexport const data_about_user = (token) =>\n    axios.get(`${api_host}/user`, tokenConfig(token));\n\nexport const update_user_data = (token, user) =>\n    axios.put(`${api_host}/user`, user, tokenConfig(token));\n\nexport const update_user_photo = (token, data) =>\n    axios.put(`${api_host}/user/image`, data, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}`,\n        }\n    });\n\nexport const get_users_data = (token, login) =>\n    axios.get(`${api_host}/users/${login}`, tokenConfig(token));\n\nexport const get_unauthorized_user_data = (login) =>\n    axios.get(`${api_host}/user/${login}`, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\nexport const check_user_status = (token, login) =>\n    axios.get(`${api_host}/user/check_status/${login}`, tokenConfig(token));\n\nexport const get_chats = (token) =>\n    axios.get(`${api_host}/chats`, tokenConfig(token));\n\nexport const add_chat = (token, login) =>\n    axios.post(`${api_host}/chats`, {user: login}, tokenConfig(token));\n\nexport const read_chat = (token, chat, type) =>\n    axios.put(`${api_host}/chat/${chat}`, {type}, tokenConfig(token));\n\nexport const delete_chat = (token, id) =>\n    axios.delete(`${api_host}/chat/${id}`, tokenConfig(token));\n\nexport const add_group = (token, title, users) =>\n    axios.post(`${api_host}/groups`, {\n        title: title,\n        users: users\n    }, tokenConfig(token));\n\nexport const update_group_title = (token, id, title) =>\n    axios.put(`${api_host}/group/${id}`, {\n        title: title\n    }, tokenConfig(token));\n\nexport const update_group_photo = (token, data, chat) =>\n    axios.put(`${api_host}/group/image/${chat}`, data, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}`,\n        }\n    });\n\nexport const update_group_members = (token, data, chat) =>\n    axios.post(`${api_host}/group/${chat}`, data, tokenConfig(token));\n\nexport const delete_group = (token, id) =>\n    axios.delete(`${api_host}/group/${id}`, tokenConfig(token));\n\nexport const get_groups = (token) =>\n    axios.get(`${api_host}/groups`, tokenConfig(token));\n\nexport const get_user_contacts = (token) =>\n    axios.get(`${api_host}/contacts`, tokenConfig(token));\n\nexport const get_filtered_user_contacts = (token, login) =>\n    axios.get(`${api_host}/contacts/${login}`, tokenConfig(token));\n\nexport const get_user_invitations = (token) =>\n    axios.get(`${api_host}/invitations`, tokenConfig(token));","// export const API_PATH = 'http://localhost:5000';\nexport const API_PATH = '';\n\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE';\n\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\nexport const RECEIVE_USER_CHATS = 'RECEIVE_USER_CHATS';\nexport const FETCH_USER_CHATS_REQUEST = 'FETCH_USER_CHATS_REQUEST';\n\nexport const RECEIVE_USER_GROUPS = 'RECEIVE_USER_GROUPS';\nexport const FETCH_USER_GROUPS_REQUEST = 'FETCH_USER_GROUPS_REQUEST';\n\nexport const ADD_GROUP_REQUEST = 'ADD_GROUP_REQUEST';\nexport const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS';\nexport const ADD_GROUP_FAILURE = 'ADD_GROUP_FAILURE';\n\nexport const UPDATE_GROUP_TITLE_REQUEST = 'UPDATE_GROUP_TITLE_REQUEST';\nexport const UPDATE_GROUP_TITLE_SUCCESS = 'UPDATE_GROUP_TITLE_SUCCESS';\nexport const UPDATE_GROUP_TITLE_FAILURE = 'UPDATE_GROUP_TITLE_FAILURE';\n\nexport const UPDATE_GROUP_MEMBERS_REQUEST = 'UPDATE_GROUP_MEMBERS_REQUEST';\nexport const UPDATE_GROUP_MEMBERS_SUCCESS = 'UPDATE_GROUP_MEMBERS_SUCCESS';\nexport const UPDATE_GROUP_MEMBERS_FAILURE = 'UPDATE_GROUP_MEMBERS_FAILURE';\n\nexport const DELETE_GROUP_REQUEST = 'DELETE_GROUP_REQUEST';\nexport const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS';\nexport const DELETE_GROUP_FAILURE = 'DELETE_GROUP_FAILURE';\n\nexport const ADD_CHAT_REQUEST = 'ADD_CHAT_REQUEST';\nexport const ADD_CHAT_SUCCESS = 'ADD_CHAT_SUCCESS';\nexport const ADD_CHAT_FAILURE = 'ADD_CHAT_FAILURE';\nexport const ADD_CHAT_CLOSE = 'ADD_CHAT_CLOSE';\n\nexport const READ_CHAT_REQUEST = 'READ_CHAT_REQUEST';\nexport const READ_CHAT = 'READ_CHAT';\n\nexport const DELETE_CHAT_REQUEST = 'DELETE_CHAT_REQUEST';\nexport const DELETE_CHAT_SUCCESS = 'DELETE_CHAT_SUCCESS';\nexport const DELETE_CHAT_FAILURE = 'DELETE_CHAT_FAILURE';\n\nexport const RECEIVE_PROTECTED_DATA = 'RECEIVE_PROTECTED_DATA';\nexport const FETCH_PROTECTED_DATA_REQUEST = 'FETCH_PROTECTED_DATA_REQUEST';\n\nexport const UPDATE_USER_DATA_REQUEST = 'UPDATE_USER_DATA_REQUEST';\nexport const UPDATE_USER_DATA = 'UPDATE_USER_DATA';\nexport const UPDATE_USER_DATA_FAILURE = 'UPDATE_USER_DATA_FAILURE';\nexport const UPDATE_USER_DATA_CLOSE = 'UPDATE_USER_DATA_CLOSE';\n\nexport const UPDATE_USER_PHOTO_REQUEST = 'UPDATE_USER_PHOTO_REQUEST';\nexport const UPDATE_USER_PHOTO = 'UPDATE_USER_PHOTO';\nexport const UPDATE_USER_PHOTO_FAILURE = 'UPDATE_USER_PHOTO_FAILURE';\n\nexport const UPDATE_GROUP_PHOTO_REQUEST = 'UPDATE_GROUP_PHOTO_REQUEST';\nexport const UPDATE_GROUP_PHOTO = 'UPDATE_GROUP_PHOTO';\nexport const UPDATE_GROUP_PHOTO_FAILURE = 'UPDATE_GROUP_PHOTO_FAILURE';\n\nexport const RECEIVE_USERS_DATA = 'RECEIVE_USERS_DATA';\nexport const FETCH_USERS_DATA_REQUEST = 'FETCH_USERS_DATA_REQUEST';\nexport const CLEAN_USERS_DATA = 'CLEAN_USERS_DATA';\n\nexport const RECEIVE_UNAUTHORIZED_USER_DATA = 'RECEIVE_UNAUTHORIZED_USER_DATA';\nexport const FETCH_UNAUTHORIZED_USER_DATA_REQUEST=  'FETCH_UNAUTHORIZED_USER_DATA';\nexport const FETCH_UNAUTHORIZED_USER_DATA_FAILURE = 'FETCH_UNAUTHORIZED_USER_DATA_FAILURE';\nexport const CLEAN_UNAUTHORIZED_USER_DATA = 'CLEAN_UNAUTHORIZED_USER_DATA';\n\nexport const RECEIVE_CONTACT_LIST = 'RECEIVE_CONTACT_LIST';\nexport const FETCH_CONTACT_LIST_REQUEST = 'FETCH_CONTACT_LIST_REQUEST';\n\nexport const RECEIVE_FILTERED_CONTACT_LIST = 'RECEIVE_FILTERED_CONTACT_LIST';\nexport const FETCH_FILTERED_CONTACT_LIST_REQUEST = 'FETCH_FILTERED_CONTACT_LIST_REQUEST';\nexport const CLEAN_CONTACT_LIST = 'CLEAN_CONTACT_LIST';\n\nexport const RECEIVE_INVITATION_LIST = 'RECEIVE_INVITATION_LIST';\nexport const FETCH_INVITATION_LIST_REQUEST = 'FETCH_INVITATION_LIST_REQUEST';","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n    /* pass a configuration object here if needed */\n})","import history from '../history';\nimport { parseJSON } from '../utils/misc';\nimport { get_token, create_user } from '../utils/http_functions';\nimport {\n    LOGIN_USER_REQUEST,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILURE,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILURE,\n    LOGOUT_USER\n} from '../utils/constants';\n\n\nexport function loginUserSuccess(token, login) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userLogin', login);\n    return {\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n            token,\n            login\n        },\n    };\n}\n\n\nexport function loginUserFailure(error) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userLogin');\n    return {\n        type: LOGIN_USER_FAILURE,\n        payload: {\n            status: error.response.status,\n            statusText: error.response.statusText,\n        },\n    };\n}\n\nexport function loginUserRequest() {\n    return {\n        type: LOGIN_USER_REQUEST,\n    };\n}\n\nexport function logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userLogin');\n    return {\n        type: LOGOUT_USER,\n    };\n}\n\nexport function logoutAndRedirect() {\n    return (dispatch) => {\n        dispatch(logout());\n        history.push('/login');\n    };\n}\n\nexport function redirectToRoute(route) {\n    return () => {\n        history.push(route);\n    };\n}\n\nexport function loginUser(login, password) {\n    return function (dispatch) {\n        dispatch(loginUserRequest());\n        return get_token(login, password)\n            .then(parseJSON)\n            .then(response => {\n                try {\n                    dispatch(loginUserSuccess(response.token, login));\n                    history.push('/');\n                } catch (e) {\n                    alert(e);\n                    dispatch(loginUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'Invalid token',\n                        },\n                    }));\n                }\n            })\n            .catch(error => {\n                dispatch(loginUserFailure({\n                    response: {\n                        status: 403,\n                        statusText: 'Invalid login or password',\n                    },\n                }));\n            });\n    };\n}\n\n\nexport function registerUserRequest() {\n    return {\n        type: REGISTER_USER_REQUEST,\n    };\n}\n\nexport function registerUserSuccess(token, login) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userLogin', login);\n    return {\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n            token,\n            login\n        },\n    };\n}\n\nexport function registerUserFailure(error) {\n    localStorage.removeItem('token');\n    return {\n        type: REGISTER_USER_FAILURE,\n        payload: {\n            status: error.response.status,\n            statusText: error.response.statusText,\n        },\n    };\n}\n\nexport function registerUser(name, surname, login, password) {\n    return function (dispatch) {\n        dispatch(registerUserRequest());\n        return create_user(name, surname, login, password)\n            .then(parseJSON)\n            .then(response => {\n                try {\n                    dispatch(registerUserSuccess(response.token, login));\n                    history.push('/');\n                } catch (e) {\n                    dispatch(registerUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'Invalid token',\n                        },\n                    }));\n                }\n            })\n            .catch(error => {\n                dispatch(registerUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'User with that login already exists',\n                        },\n                    }\n                ));\n            });\n    };\n}","import { parseJSON } from '../utils/misc';\nimport {\n    get_chats,\n    add_chat,\n    add_group,\n    read_chat,\n    get_groups,\n    update_group_title,\n    delete_group, delete_chat, update_group_photo, update_group_members\n} from '../utils/http_functions';\nimport {logoutAndRedirect} from './auth';\nimport {\n    RECEIVE_USER_CHATS,\n    FETCH_USER_CHATS_REQUEST,\n    RECEIVE_USER_GROUPS,\n    FETCH_USER_GROUPS_REQUEST,\n    ADD_CHAT_REQUEST,\n    ADD_CHAT_SUCCESS,\n    ADD_CHAT_FAILURE,\n    ADD_CHAT_CLOSE,\n    ADD_GROUP_REQUEST,\n    ADD_GROUP_SUCCESS,\n    ADD_GROUP_FAILURE,\n    READ_CHAT_REQUEST,\n    READ_CHAT,\n    UPDATE_GROUP_TITLE_REQUEST,\n    UPDATE_GROUP_TITLE_SUCCESS,\n    UPDATE_GROUP_TITLE_FAILURE,\n    DELETE_GROUP_REQUEST,\n    DELETE_GROUP_SUCCESS,\n    DELETE_GROUP_FAILURE,\n    DELETE_CHAT_REQUEST,\n    DELETE_CHAT_SUCCESS,\n    DELETE_CHAT_FAILURE,\n    UPDATE_GROUP_PHOTO,\n    UPDATE_GROUP_PHOTO_FAILURE,\n    UPDATE_GROUP_PHOTO_REQUEST,\n    UPDATE_GROUP_MEMBERS_REQUEST,\n    UPDATE_GROUP_MEMBERS_FAILURE,\n    UPDATE_GROUP_MEMBERS_SUCCESS,\n    TOGGLE_SIDEBAR,\n} from '../utils/constants';\n\n\nexport function receiveUserChats(data, selectChat) {\n    return {\n        type: RECEIVE_USER_CHATS,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchUserChatsRequest() {\n    return {\n        type: FETCH_USER_CHATS_REQUEST,\n    };\n}\n\nexport function fetchUserChats(token, selectChat, chat_id) {\n    return (dispatch) => {\n        dispatch(fetchUserChatsRequest());\n        get_chats(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUserChats(response));\n                if(selectChat && chat_id) {\n                    selectChat(chat_id);\n                }\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            });\n    };\n}\n\nexport function addChatRequest() {\n    return {\n        type: ADD_CHAT_REQUEST\n    }\n}\n\nexport function addChatSuccess() {\n    return {\n        type: ADD_CHAT_SUCCESS,\n        payload: {},\n    };\n}\n\nexport function addChatFailure(error) {\n    return {\n        type: ADD_CHAT_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function addChatClose() {\n    return {\n        type: ADD_CHAT_CLOSE,\n        payload: {\n            addChatError: null\n        },\n    };\n}\n\nexport function addChat(userLogin, openModal, selectChat) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(addChatRequest);\n        return add_chat(token, userLogin)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(addChatSuccess);\n                dispatch(fetchUserChats(token, selectChat, response.chat_id));\n                dispatch(fetchUserGroups(token));\n                if(openModal) {\n                    openModal('add-chat', false);\n                }\n            })\n            .catch(error => {\n                dispatch(addChatFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function deleteChatRequest() {\n    return {\n        type: DELETE_CHAT_REQUEST\n    }\n}\n\nexport function deleteChatSuccess(message) {\n    return {\n        type: DELETE_CHAT_SUCCESS,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteChatFailure(message) {\n    return {\n        type: DELETE_CHAT_FAILURE,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteChat(chatId) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(deleteChatRequest());\n        return delete_chat(token, chatId)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(deleteChatSuccess(response.message));\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(deleteChatFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function addGroupRequest() {\n    return {\n        type: ADD_GROUP_REQUEST\n    }\n}\n\nexport function addGroupSuccess() {\n    return {\n        type: ADD_GROUP_SUCCESS,\n    };\n}\n\nexport function addGroupFailure(error) {\n    return {\n        type: ADD_GROUP_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function addGroup(title, users, openModal) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(addGroupRequest);\n        return add_group(token, title, users)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(addGroupSuccess);\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n                openModal('add-chat', false);\n            })\n            .catch(error => {\n                dispatch(addGroupFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function updateGroupTitleRequest() {\n    return {\n        type: UPDATE_GROUP_TITLE_REQUEST\n    }\n}\n\nexport function updateGroupTitleSuccess() {\n    return {\n        type: UPDATE_GROUP_TITLE_SUCCESS,\n    };\n}\n\nexport function updateGroupTitleFailure(error) {\n    return {\n        type: UPDATE_GROUP_TITLE_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function updateGroupTitle(id, title) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(updateGroupTitleRequest());\n        return update_group_title(token, id, title)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(updateGroupTitleSuccess());\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(updateGroupTitleFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function updateGroupMembersRequest() {\n    return {\n        type: UPDATE_GROUP_MEMBERS_REQUEST\n    }\n}\n\nexport function updateGroupMembersSuccess() {\n    return {\n        type: UPDATE_GROUP_MEMBERS_SUCCESS,\n    };\n}\n\nexport function updateGroupMembersFailure(error) {\n    return {\n        type: UPDATE_GROUP_MEMBERS_FAILURE,\n        payload: {\n            error\n        },\n    };\n}\n\nexport function updateGroupMembers(id, users) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(updateGroupMembersRequest());\n        return update_group_members(token, users, id)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(updateGroupMembersSuccess());\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(updateGroupMembersFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function deleteGroupRequest() {\n    return {\n        type: DELETE_GROUP_REQUEST\n    }\n}\n\nexport function deleteGroupSuccess(message) {\n    return {\n        type: DELETE_GROUP_SUCCESS,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteGroupFailure(message) {\n    return {\n        type: DELETE_GROUP_FAILURE,\n        payload: {\n            type: 'success',\n            message,\n        }\n    };\n}\n\nexport function deleteGroup(groupId) {\n\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(deleteGroupRequest());\n        return delete_group(token, groupId)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(deleteGroupSuccess(response.message));\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                dispatch(deleteGroupFailure(error.response.data.message));\n            });\n    };\n}\n\nexport function readChatRequest() {\n    return {\n        type: READ_CHAT_REQUEST,\n        payload: {},\n    };\n}\n\nexport function readChatSuccess() {\n    return {\n        type: READ_CHAT,\n        payload: {},\n    };\n}\n\nexport function readChat(chat, type) {\n    const token = localStorage.getItem('token');\n\n    return function (dispatch) {\n        dispatch(readChatRequest);\n        return read_chat(token, chat, type)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(readChatSuccess);\n                dispatch(fetchUserChats(token));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            })\n    }\n}\n\nexport function receiveUserGroups(data) {\n    return {\n        type: RECEIVE_USER_GROUPS,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchUserGroupsRequest() {\n    return {\n        type: FETCH_USER_GROUPS_REQUEST,\n    };\n}\n\nexport function fetchUserGroups(token) {\n    return (dispatch) => {\n        dispatch(fetchUserGroupsRequest());\n        get_groups(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUserGroups(response));\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            });\n    };\n}\n\nexport function receiveUpdatedPhoto(data) {\n    return {\n        type: UPDATE_GROUP_PHOTO,\n        payload: {\n            updatePhotoMessage: data.message,\n        },\n    };\n}\n\nexport function updateGroupPhotoFailure(data) {\n    return {\n        type: UPDATE_GROUP_PHOTO_FAILURE,\n        payload: {\n            updatePhotoMessage: data.message\n        },\n    };\n}\n\nexport function updateGroupPhotoRequest() {\n    return {\n        type: UPDATE_GROUP_PHOTO_REQUEST,\n    };\n}\n\nexport function updateGroupPhoto(token, data, chat) {\n    return (dispatch) => {\n        dispatch(updateGroupPhotoRequest());\n        update_group_photo(token, data, chat)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUpdatedPhoto(response));\n                dispatch(fetchUserGroups(token));\n            })\n            .catch(error => {\n                if (error.response.status === 403) {\n                    dispatch(logoutAndRedirect(error));\n                }\n                else{\n                    dispatch(updateGroupPhotoFailure(error.response.data));\n                }\n            });\n    };\n}\n\nexport function toggleSidebar(state) {\n    return {\n        type: TOGGLE_SIDEBAR,\n        payload: {\n            sidebarOpen: state\n        },\n    };\n}\n\nexport function handleToggleSidebar(state) {\n    return (dispatch) => {\n        dispatch(toggleSidebar(state));\n    };\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport { connect } from 'react-redux';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport IconButton from '@material-ui/core/IconButton';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions/chats\";\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    container: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    logo: {\n        maxWidth: 48,\n        marginRight: 10\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        [theme.breakpoints.down('md')]: {\n            minHeight: 48,\n        },\n    },\n    button: {\n        paddingRight: 0,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    icon:{\n        color: 'white',\n    }\n}));\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.data.isFetching,\n        isAuthenticating: state.auth.isAuthenticating,\n        isAuthenticated: state.auth.isAuthenticated,\n        isRegistering: state.auth.isRegistering,\n        isChatsFetching: state.chats.isFetching,\n        isAddingChat: state.chats.isAddingChat,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch);\n\nfunction TopBar(props) {\n    const classes = useStyles();\n\n    const isDataLoading = () => props.isFetching || props.isAuthenticating ||\n        props.isRegistering || props.isAddingChat;\n\n    return (\n        <AppBar position=\"fixed\" className={classes.header}>\n            <div className={classes.container}>\n                <Toolbar className={classes.toolbar}>\n                    <img src='/static/logo.png' alt='EmotionChat' className={classes.logo}/>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        EmotionChat\n                    </Typography>\n                    {\n                        props.isAuthenticated ? <IconButton\n                            onClick={() => props.handleToggleSidebar(true)}\n                            className={classes.button}\n                        >\n                            <ChatIcon className={classes.icon}/>\n                        </IconButton> : null\n                    }\n                </Toolbar>\n            </div>\n            {\n                isDataLoading() ? <LinearProgress color=\"secondary\"/> : null\n            }\n        </AppBar>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar)","const styles = theme => ({\n    drawer: {\n        width: 480,\n        flexShrink: 0,\n        [theme.breakpoints.down(1200)]: {\n            width: 280,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    drawerPaper: {\n        width: 480,\n        [theme.breakpoints.down(1200)]: {\n            width: 280,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    sidebarTop: {\n        flexGrow: 1,\n        overflowY: \"auto\",\n        paddingTop: 0\n    },\n    sidebarDown: {\n        padding: 0.\n    },\n    toolbar: theme.mixins.toolbar,\n    minifiedToolbar: {\n        height: theme.spacing(6),\n    },\n    button: {\n        float: 'right',\n    },\n    divider: {\n        clear: 'both',\n    },\n    addChatBtn: {\n      height: '50px'\n    },\n    badge:{\n        marginRight: '10px',\n    }\n});\n\nexport default styles;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport withWidth from '@material-ui/core/withWidth';\nimport Badge from \"@material-ui/core/Badge/Badge\";\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\nimport {fetchUserChats, fetchUserGroups} from \"../actions/chats\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    time: {\n        fontSize: '12px',\n        fontFamily: \"'Roboto', sans-serif\",\n        position: 'absolute',\n        right: '16px',\n        top: '14px',\n        color: theme.palette.text.secondary\n    },\n    avatarGroup: {\n        marginLeft: '-35px',\n        '&:first-child': {\n            marginLeft: '-5px'\n        }\n    },\n    avatarGroup3: {\n        marginLeft: '-35px',\n        '&:first-child': {\n            marginLeft: '-8px'\n        }\n    },\n    textGroup: {\n        marginLeft: '8px',\n    },\n    textGroup3: {\n        marginLeft: '6px',\n    },\n    notification: {\n        position: 'absolute',\n        right: '19px',\n        top: '30px',\n    },\n    groupWithPhoto: {\n        marginLeft: -3\n    },\n    listItemAvatar: {\n        minWidth: 0\n    }\n});\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: -1,\n            left: -1,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.data.isFetching,\n        token: state.auth.token,\n        data: state.data.data,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getChats: (token) => dispatch(fetchUserChats(token)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n});\n\nclass ContactItem extends React.Component{\n\n    checkTime = (i) => i < 10 ? (\"0\" + i) : i;\n\n    getTime(date) {\n        let h = date.getHours();\n        let m = date.getMinutes();\n\n        m = this.checkTime(m);\n        return h + ':' + m;\n    }\n\n    getWeekNumber(d) {\n        d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n        d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n\n        let yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n        let weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n\n        return [d.getUTCFullYear(), weekNo];\n    }\n\n    getTimeFormat(date) {\n\n        const now = new Date();\n        const isToday = new Date(date.getTime()).setHours(0, 0, 0, 0) === new Date(now.getTime()).setHours(0, 0, 0, 0);\n        const isThisWeek = this.getWeekNumber(date)[0] === this.getWeekNumber(now)[0] &&\n            this.getWeekNumber(date)[1] === this.getWeekNumber(now)[1];\n        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n        if(isToday) return this.getTime(date);\n        else if(isThisWeek) return days[date.getDay()];\n        else {\n            if(date.getUTCFullYear() === now.getUTCFullYear())\n                return months[date.getMonth()] + ' ' + date.getDate();\n            else return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getUTCFullYear();\n        }\n\n    }\n\n    userIsSender = () => {\n        try{\n            if(this.props.data){\n                return this.props.data.login === this.props.lastMessage.sender.login;\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return false;\n    };\n\n    render(){\n        const users = this.props.users;\n        const { classes } = this.props;\n        const messageSymbols = this.props.width === 'lg' ? 50 : 25;\n\n        if(this.props.data && users)\n            return (\n                <ListItem className={classes.listItem} button selected={this.props.selected} onClick={this.props.onClick}>\n                    {\n                        this.props.type === 'chat' ? <ListItemAvatar className={classes.listItemAvatar}>\n                            <div className={classes.avatarContainer}>\n                                {\n                                    users[0].profile_image ? <Avatar\n                                            src={API_PATH + users[0].profile_image}\n                                        /> :\n                                        <Avatar className={classes.avatar}>\n                                            {users[0].name.charAt(0).toUpperCase() + '' + (users[0].surname ? users[0].surname.charAt(0).toUpperCase() : '')}\n                                        </Avatar>\n                                }\n                            </div>\n                        </ListItemAvatar> : <AvatarGroup max={2}>\n                            {\n                                this.props.groupPhoto ? <Avatar\n                                        src={API_PATH + this.props.groupPhoto}\n                                        className={classes.groupWithPhoto}\n                                    /> :\n                                users.slice(0, 3).map((_usr, _idx) => <Avatar\n                                    key={_idx}\n                                    src={_usr.profile_image ? (API_PATH + _usr.profile_image) : null}\n                                    className={users.length < 3 ? classes.avatarGroup : classes.avatarGroup3}\n                                >\n                                    {!_usr.profile_image ?\n                                        _usr.name.charAt(0).toUpperCase() + '' +\n                                        (_usr.surname ? _usr.surname.charAt(0).toUpperCase() : '') : null\n                                    }\n                                </Avatar>)\n                            }\n                        </AvatarGroup>\n\n                    }\n                    <ListItemText\n                        primary={this.props.type === 'chat' ?\n                            <b>{users[0].name + ' ' + (users[0].surname ? users[0].surname : '')}</b> :\n                            <b>{this.props.chatTitle}</b>}\n                        secondary={\n                            <React.Fragment>\n                                {\n                                    this.props.lastMessage.message.substr(0, messageSymbols) + ( this.props.lastMessage.message.length > messageSymbols ? '...' : '')\n                                }\n                            </React.Fragment>\n                        }\n                        className={users.length < 3 && users.length > 1 ? classes.textGroup : classes.textGroup3}\n                    />\n\n                    <span className={classes.time}>\n                        {\n                            this.props.lastMessage.timestamp ?\n                                this.getTimeFormat(new Date(parseInt(this.props.lastMessage.timestamp)))\n                                : null\n                        }\n                    </span>\n                    {\n                        this.props.type === 'chat' && !this.props.receiverHasRead && !this.userIsSender() && this.props.lastMessage.message.length > 0 ?\n                            <NotificationImportantIcon color=\"primary\" className={classes.notification}/> : null\n                    }\n                    {\n                        this.props.type === 'group' && !this.userIsSender() &&\n                        this.props.receivers.find(_usr => _usr.login === this.props.data.login) ?\n                            <NotificationImportantIcon\n                                color=\"primary\"\n                                className={classes.notification}\n                            /> : null\n                    }\n                </ListItem>\n            );\n        else return null;\n    }\n\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(withStyles(styles)(ContactItem)));","import { parseJSON } from '../utils/misc';\nimport {\n    data_about_user,\n    update_user_data,\n    update_user_photo,\n    get_users_data,\n    get_unauthorized_user_data,\n    check_user_status,\n} from '../utils/http_functions';\nimport { logoutAndRedirect } from './auth';\nimport {\n    RECEIVE_PROTECTED_DATA,\n    FETCH_PROTECTED_DATA_REQUEST,\n    UPDATE_USER_DATA,\n    UPDATE_USER_DATA_REQUEST,\n    UPDATE_USER_DATA_FAILURE,\n    UPDATE_USER_DATA_CLOSE,\n    UPDATE_USER_PHOTO_REQUEST,\n    UPDATE_USER_PHOTO,\n    UPDATE_USER_PHOTO_FAILURE,\n    FETCH_USERS_DATA_REQUEST,\n    RECEIVE_USERS_DATA,\n    CLEAN_USERS_DATA,\n    RECEIVE_UNAUTHORIZED_USER_DATA,\n    FETCH_UNAUTHORIZED_USER_DATA_REQUEST,\n    FETCH_UNAUTHORIZED_USER_DATA_FAILURE,\n    CLEAN_UNAUTHORIZED_USER_DATA,\n} from '../utils/constants';\n\nexport function receiveProtectedData(data) {\n\n    return {\n        type: RECEIVE_PROTECTED_DATA,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchProtectedDataRequest() {\n    return {\n        type: FETCH_PROTECTED_DATA_REQUEST,\n    };\n}\n\nexport function fetchProtectedData(token, initFunction) {\n    return (dispatch) => {\n        dispatch(fetchProtectedDataRequest());\n        data_about_user(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveProtectedData(response));\n                if(initFunction) initFunction(response);\n            })\n            .catch(error => {\n                if (error.status === 401) {\n                    dispatch(logoutAndRedirect(error));\n                }\n            });\n    };\n}\n\n\nexport function receiveUpdatedData(data) {\n    const user_data = data.data;\n    const status = {\n        message: data.message,\n        status: 'OK'\n    };\n    return {\n        type: UPDATE_USER_DATA,\n        payload: {\n            data: user_data,\n            status\n        },\n    };\n}\n\nexport function updateDataFailure(data) {\n    const status = {\n        message: data.message,\n        status: 'ER'\n    };\n    return {\n        type: UPDATE_USER_DATA_FAILURE,\n        payload: {\n            status\n        },\n    };\n}\n\nexport function updateUserDataRequest() {\n    return {\n        type: UPDATE_USER_DATA_REQUEST,\n    };\n}\n\nexport function updateUserDataClose() {\n    return {\n        type: UPDATE_USER_DATA_CLOSE,\n        payload: {\n            status: null\n        }\n    };\n}\n\nexport function updateUserData(token, user) {\n    return (dispatch) => {\n        dispatch(updateUserDataRequest());\n        update_user_data(token, user)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUpdatedData(response));\n                dispatch(fetchProtectedData(token));\n            })\n            .catch(error => {\n                if (error.response.status === 403) {\n                    dispatch(logoutAndRedirect(error));\n                }\n                else{\n                    dispatch(updateDataFailure(error.response.data));\n                }\n            });\n    };\n}\n\n\nexport function receiveUpdatedPhoto(data) {\n    const user_data = data.data;\n    const status = {\n        message: data.message,\n        status: 'OK'\n    };\n    return {\n        type: UPDATE_USER_PHOTO,\n        payload: {\n            data: user_data,\n            status\n        },\n    };\n}\n\nexport function updateUserPhotoFailure(data) {\n    const status = {\n        message: data.message,\n        status: 'ER'\n    };\n    return {\n        type: UPDATE_USER_PHOTO_FAILURE,\n        payload: {\n            status\n        },\n    };\n}\n\nexport function updateUserPhotoRequest() {\n    return {\n        type: UPDATE_USER_PHOTO_REQUEST,\n    };\n}\n\nexport function updateUserPhoto(token, data) {\n    return (dispatch) => {\n        dispatch(updateUserPhotoRequest());\n        update_user_photo(token, data)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUpdatedPhoto(response));\n            })\n            .catch(error => {\n                if (error.response.status === 403) {\n                    dispatch(logoutAndRedirect(error));\n                }\n                else{\n                    dispatch(updateUserPhotoFailure(error.response.data));\n                }\n            });\n    };\n}\n\nexport function fetchUsersDataRequest() {\n    return {\n        type: FETCH_USERS_DATA_REQUEST,\n    };\n}\n\nexport function receiveUsersData(data) {\n    return {\n        type: RECEIVE_USERS_DATA,\n        payload: {\n            users: data,\n        },\n    };\n}\n\nexport function cleanUsersData() {\n    return {\n        type: CLEAN_USERS_DATA,\n    };\n}\n\nexport function fetchUsersData(token, login) {\n    return (dispatch) => {\n        dispatch(fetchUsersDataRequest());\n        get_users_data(token, login)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUsersData(response));\n            })\n            .catch(error => {\n                dispatch(logoutAndRedirect(error));\n            });\n    };\n}\n\nexport function fetchUnauthorizedUserDataRequest() {\n    return {\n        type: FETCH_UNAUTHORIZED_USER_DATA_REQUEST,\n    };\n}\n\nexport function fetchUnauthorizedUserDataFailure(data) {\n    const status = {\n        message: data.message,\n        status: 'ER'\n    };\n\n    return {\n        type: FETCH_UNAUTHORIZED_USER_DATA_FAILURE,\n        payload: {\n            status\n        }\n    };\n}\n\nexport function receiveUnauthorizedUsersData(data) {\n    return {\n        type: RECEIVE_UNAUTHORIZED_USER_DATA,\n        payload: {\n            unauthorizedUser: data\n        }\n    };\n}\n\nexport function cleanUnauthorizedUserData() {\n    return {\n        type: CLEAN_UNAUTHORIZED_USER_DATA,\n    };\n}\n\nexport function fetchUnauthorizedUserData(login) {\n    return (dispatch) => {\n        dispatch(fetchUnauthorizedUserDataRequest());\n        get_unauthorized_user_data(login)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveUnauthorizedUsersData(response));\n            })\n            .catch(error => {\n                dispatch(fetchUnauthorizedUserDataFailure(error.response.data));\n            });\n    };\n}\n\nexport async function checkUserStatus(user, setStatus) {\n\n    const token = localStorage.getItem('token');\n\n    check_user_status(token, user)\n        .then(parseJSON)\n        .then(response => {\n            setStatus(response.online);\n        })\n}","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {checkUserStatus} from \"../actions/data\";\nimport {socket} from '../pages/dashboard/Dashboard';\nimport {\n    fetchUserChats,\n    fetchUserGroups,\n} from \"../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    pointedListItem: {\n        position: 'relative',\n        cursor: 'pointer',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    time: {\n        fontSize: '12px',\n        fontFamily: \"'Roboto', sans-serif\",\n        position: 'absolute',\n        right: '16px',\n        top: '14px',\n        color: theme.palette.text.secondary\n    },\n    avatar: {\n        // border: '2px solid',\n        borderColor: theme.palette.text.disabled,\n    },\n    owner: {\n        '& span': {\n            position: 'relative',\n            transform: 'none',\n        },\n    },\n    avatarContainer: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    }\n});\n\nlet checked = false;\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        backgroundColor: '#44b700',\n        color: '#44b700',\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n        '&::after': {\n            position: 'absolute',\n            top: -1,\n            left: -1,\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            animation: '$ripple 1.2s infinite ease-in-out',\n            border: '1px solid currentColor',\n            content: '\"\"',\n        },\n    },\n    '@keyframes ripple': {\n        '0%': {\n            transform: 'scale(.8)',\n            opacity: 1,\n        },\n        '100%': {\n            transform: 'scale(2.4)',\n            opacity: 0,\n        },\n    },\n}))(Badge);\n\nconst mapStateToProps = (state) => ({\n    token: state.auth.token,\n    currentUser: state.auth.login\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getChats: (token) => dispatch(fetchUserChats(token)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n});\n\nclass AccountPreview extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            online: false,\n        };\n\n    }\n\n    componentDidMount(){\n        if(this.props.user) {\n            checkUserStatus(this.props.user.login, this.setStatus);\n        }\n        socket.on('user_status_changed', (data) => {\n            if(this.props.user && data.user === this.props.user.login) {\n                checkUserStatus(this.props.user.login, this.setStatus);\n                this.props.getChats(this.props.token);\n                this.props.getGroups(this.props.token);\n            }\n        });\n    }\n\n    componentWillUnmount(){\n        socket.removeAllListeners('user_status_changed');\n    }\n\n    setStatus = (status) => {\n        this.setState({online: status});\n    };\n\n    checkTime = (i) => i < 10 ? (\"0\" + i) : i;\n\n    getTime(date) {\n        let h = date.getHours();\n        let m = date.getMinutes();\n\n        m = this.checkTime(m);\n        return h + ':' + m;\n    }\n\n    getTimeFormat = (timestamp) => {\n\n        const date = new Date(parseInt(timestamp));\n        const now = new Date();\n\n        const isToday = new Date(date.getTime()).setHours(0, 0, 0, 0) === new Date(now.getTime()).setHours(0, 0, 0, 0);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n        if(isToday) return this.getTime(date);\n        else {\n            if(date.getUTCFullYear() === now.getUTCFullYear())\n                return months[date.getMonth()] + ' ' + date.getDate() + ', ' + this.getTime(date);\n            else return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getUTCFullYear();\n        }\n    };\n\n    render(){\n\n        const { classes } = this.props;\n\n        const user = this.props.user;\n\n        if(user) {\n\n            if(!checked && this.props.currentUser === user.login) {\n                checkUserStatus(user.login, this.setStatus);\n                checked = true;\n            }\n\n            return (\n                <ListItem\n                    className={this.props.handleClick ? classes.pointedListItem : classes.listItem}\n                    onClick={this.props.handleClick ? () => this.props.handleClick(user.login) : null}\n                    button={!!this.props.handleClick}\n                    selected={this.props.selected}\n                >\n                    <ListItemAvatar>\n                        {\n                            this.state.online ? <div className={classes.avatarContainer}>\n                                <StyledBadge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    variant=\"dot\"\n                                >\n                                    {\n                                        user.profile_image ? <Avatar\n                                                src={API_PATH + user.profile_image}\n                                                className={classes.avatar}\n                                            /> :\n                                            <Avatar className={classes.avatar}>\n                                                {user.name.charAt(0).toUpperCase() + '' + (user.surname ? user.surname.charAt(0).toUpperCase() : '')}\n                                            </Avatar>\n                                    }\n                                </StyledBadge>\n                            </div> : <div className={classes.avatarContainer}>\n                                {\n                                    user.profile_image ? <Avatar\n                                            src={API_PATH + user.profile_image}\n                                            className={classes.avatar}\n                                        /> :\n                                        <Avatar className={classes.avatar}>\n                                            {user.name.charAt(0).toUpperCase() + '' + (user.surname ? user.surname.charAt(0).toUpperCase() : '')}\n                                        </Avatar>\n                                }\n                            </div>\n                        }\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={<b>{user.name + ' ' + (user.surname ? user.surname : '')}</b>}\n                        secondary={\n                            <React.Fragment>\n                                {this.state.online ? user.login : (\"Last seen: \" + this.getTimeFormat(user.last_seen))}\n                            </React.Fragment>\n                        }\n                    />\n                    {\n                        this.props.groupOwner && this.props.groupOwner === user.login ? <Badge\n                            color=\"primary\"\n                            badgeContent=\"Owner\"\n                            className={classes.owner}\n                        /> : null\n                    }\n                </ListItem>\n            );\n        }\n        else return null;\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AccountPreview));","import React from 'react';\nimport styles from './styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ContactItem from \"../ContactItem\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from '@material-ui/core/Button';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport AccountPreview from \"../AccountPreview\";\nimport Badge from '@material-ui/core/Badge';\nimport withWidth from \"@material-ui/core/withWidth/withWidth\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.chats.isFetching,\n        loaded: state.chats.loaded,\n        chats: state.chats.chats,\n        userLogin: state.auth.login,\n        invitations: state.contacts.invitations,\n        sidebarOpen: state.chats.sidebarOpen,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass Sidebar extends React.Component{\n\n    render(){\n        const { classes } = this.props;\n\n        return (\n            <Drawer\n                anchor=\"left\"\n                open={this.props.sidebarOpen}\n                onClose={() => this.props.handleToggleSidebar(false)}\n                className={'sidebar ' + classes.drawer}\n                variant={this.props.width === 'xs' ? 'temporary' : 'permanent'}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                {/*{*/}\n                    {/*this.props.width !== 'xs' ? <div className={this.props.width === 'lg' ? classes.toolbar : classes.minifiedToolbar} /> : null*/}\n                {/*}*/}\n                <div className={this.props.width === 'lg' ? classes.toolbar : classes.minifiedToolbar} >\n                    <IconButton onClick={() => this.props.handleToggleSidebar(false)} className={classes.button}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                    <Divider className={classes.divider}/>\n                </div>\n                <Button\n                    fullWidth\n                    color='primary'\n                    className={classes.addChatBtn}\n                    onClick={this.props.newChatBtnHandle}\n                >Add New Chat</Button>\n\n                <List className={classes.sidebarTop}>\n                    {\n                        this.props.chatList ?\n                            this.props.chatList.sort((chatA, chatB) =>\n                                parseFloat(chatB.lastUpdate) - parseFloat(chatA.lastUpdate))\n                                .map((chat, index) => (\n                                    <ContactItem\n                                        key={index}\n                                        type={chat.type}\n                                        chatTitle={chat.title}\n                                        lastMessage={chat.messages.length > 0 ? chat.messages[chat.messages.length - 1] : {message: ''}}\n                                        users={chat.users.filter(_user => _user.login !== this.props.userLogin)}\n                                        selected={this.props.selectedChatIndex === chat.chat_id}\n                                        onClick={() => {\n                                            this.props.handleToggleSidebar(false);\n                                            this.props.selectChatHandle(chat.chat_id, this.props.chatList)\n                                        }}\n                                        receiverHasRead={chat.receiverHasRead}\n                                        receivers={chat.receivers}\n                                        groupPhoto={chat.type === 'group' ? chat.photo : null}\n                                    />\n                            )) : null\n                    }\n                </List>\n\n                <div className='sidebar-down'>\n                    <Divider />\n                    <AccountPreview\n                        user={this.props.user}\n                        currentUser={this.props.userLogin}\n                    />\n                    <List className={classes.sidebarDown}>\n                        <ListItem button onClick={this.props.accountHandleClick}>\n                            <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n                            <ListItemText primary=\"My Account\" />\n                        </ListItem>\n                        <ListItem button onClick={this.props.contactsHandleClick}>\n                            <ListItemIcon><ContactsIcon /></ListItemIcon>\n                            <ListItemText primary=\"Contacts\" />\n                            {\n                                this.props.invitations && this.props.invitations.received.length > 0 ? <Badge\n                                    badgeContent={this.props.invitations.received.length}\n                                    color=\"primary\"\n                                    className={classes.badge}\n                                /> : null\n                            }\n                        </ListItem>\n                        <ListItem button onClick={this.props.logOutHandleClick}>\n                            <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n                            <ListItemText primary=\"Log Out\" />\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        );\n\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(withStyles(styles)(Sidebar)));","const styles = theme => ({\n\n    content: {\n        height: 'calc(100vh - 144px)',\n        padding: '25px',\n        boxSizing: 'border-box',\n        overflowY: 'scroll',\n        width: '100%',\n    },\n\n    userSent: {\n        float: 'right',\n        clear: 'both',\n        padding: '10px 20px 18px',\n        boxSizing: 'border-box',\n        wordWrap: 'break-word',\n        marginTop: '10px',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        width: 'auto',\n        maxWidth: '500px',\n        borderRadius: '10px',\n        borderBottomRightRadius: 0,\n        fontFamily: 'Roboto',\n        position: 'relative'\n    },\n\n    friendSent: {\n        float: 'left',\n        clear: 'both',\n        padding: '10px 20px 18px',\n        boxSizing: 'border-box',\n        wordWrap: 'break-word',\n        marginTop: '10px',\n        backgroundColor: 'white',\n        color: theme.palette.text.primary,\n        width: 'auto',\n        maxWidth: '500px',\n        borderRadius: '10px',\n        borderTopLeftRadius: 0,\n        fontFamily: 'Roboto',\n        position: 'relative'\n    },\n    time: {\n        position: 'absolute',\n        bottom: '5px',\n        right: '5px',\n        fontSize: '10px'\n    },\n    messageContainer: {\n        clear: 'both',\n        paddingTop: '35px'\n    },\n    divider: {\n        width: '60%',\n        position: 'relative',\n        background: 'linear-gradient(90deg, rgba(220,220,220,1) 0%, rgba(173,173,173,1) 50%, rgba(220,220,220,1) 100%)',\n        margin: '0 auto 35px',\n        height: '1px',\n    },\n    dividerDate: {\n        margin: 0,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#dcdcdc',\n        padding: '0 20px',\n        fontFamily: \"'Roboto', sans-serif\",\n        fontSize: '12px',\n        color: '#7d7d7d',\n    },\n    avatar: {\n        marginRight: '10px'\n    },\n    noAvatar: {\n        marginLeft: '50px',\n    },\n    messageGroupUser: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n    },\n    messageGroupFriend: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    btnContainer:{\n        paddingLeft: 30,\n        position: 'relative',\n        '&:hover button': {\n            display: 'block',\n        }\n    },\n    moreBtn: {\n        padding: 0,\n        position: 'absolute',\n        left: 0,\n        top: '50%',\n        transform: 'translateY(-36%)',\n        display: 'none',\n        '&:hover': {\n            backgroundColor: 'transparent !important',\n        }\n    },\n    menu: {\n        '& ul': {\n            padding: 0,\n        },\n    },\n});\n\nexport default styles;","import React from 'react';\nimport styles from './styles';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {API_PATH} from \"../../utils/constants\";\n\nfunction mapStateToProps(state) {\n    return {\n        userLogin: state.auth.login\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nconst checkTime = (i) => i < 10 ? (\"0\" + i) : i;\n\nfunction getTimeFormat(date) {\n\n    const now = new Date();\n    const isToday = new Date(date.getTime()).setHours(0, 0, 0, 0) === new Date(now.getTime()).setHours(0, 0, 0, 0);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    if(isToday) return 'Today';\n    else {\n        if(date.getUTCFullYear() === now.getUTCFullYear())\n            return months[date.getMonth()] + ' ' + date.getDate();\n        else return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getUTCFullYear();\n    }\n\n}\n\nclass ChatView extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorMenu: null,\n            removeTarget: null,\n        };\n\n    }\n\n    componentDidMount(){\n        const container = document.getElementById('chatview-container');\n        if(container) container.scrollTo(0, container.scrollHeight);\n        this.handleCloseMessageMenu();\n    }\n\n    componentDidUpdate(){\n        const container = document.getElementById('chatview-container');\n        if(container) container.scrollTo(0, container.scrollHeight);\n    }\n\n    getTime(date) {\n        let h = date.getHours();\n        let m = date.getMinutes();\n\n        m = checkTime(m);\n        return h + ':' + m;\n    }\n\n    setDivider(msg, index){\n        if(index !== 0){\n            const currentMessageDate = new Date(parseInt(msg.timestamp)).setHours(0, 0, 0, 0);\n            const prevMessageDate = new Date(parseInt(this.props.chat.messages[index-1].timestamp)).setHours(0, 0, 0, 0);\n\n            let result = null;\n\n            if(currentMessageDate !== prevMessageDate)\n                result = getTimeFormat(new Date(parseInt(msg.timestamp)));\n            return result;\n        }\n        else{\n            const currentMessageDate = new Date(parseInt(msg.timestamp));\n            return getTimeFormat(currentMessageDate);\n        }\n    }\n\n    setAvatar(msg, index){\n        if(index + 1 < this.props.chat.messages.length){\n            const currentSender = msg.sender.login;\n            const nextSender = this.props.chat.messages[index+1].sender.login;\n            return currentSender !== nextSender;\n        }\n        else return true;\n    }\n\n    handleOpenMessageMenu = (e, message) => {\n        this.setState({\n            anchorMenu: e.currentTarget,\n            removeTarget: message.id\n        });\n    };\n    handleCloseMessageMenu = () => {\n        this.setState({\n            anchorMenu: null,\n            removeTarget: null,\n        });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div id='chatview-container' className={classes.content}>\n                <main>\n                    {\n                        this.props.chat.messages.map((_msg, _index) => <div className={this.setDivider(_msg, _index) ? classes.messageContainer: null} key={_index}>\n                            {this.setDivider(_msg, _index) ? <div className={classes.divider}>\n                                <Typography component='p' variant='body1' className={classes.dividerDate}>\n                                    {this.setDivider(_msg, _index)}\n                                    </Typography>\n                            </div> : null}\n                            <div className={_msg.sender.login === this.props.userLogin ? classes.messageGroupUser : classes.messageGroupFriend}>\n                                {\n                                    this.setAvatar(_msg, _index) && _msg.sender.login !== this.props.userLogin ? <div className={classes.avatar}>\n                                        {\n                                            _msg.sender.profile_image ? <Avatar\n                                                    src={API_PATH + _msg.sender.profile_image}\n                                                /> :\n                                                <Avatar>\n                                                    {_msg.sender.name.charAt(0).toUpperCase() + '' + (_msg.sender.surname ? _msg.sender.surname.charAt(0).toUpperCase() : '')}\n                                                </Avatar>\n                                        }\n                                    </div> : <span className={classes.noAvatar}/>\n                                }\n                                <div className={_msg.sender.login === this.props.userLogin ? classes.btnContainer : null}>\n                                    {\n                                        _msg.sender.login === this.props.userLogin ? <IconButton\n                                            className={classes.moreBtn}\n                                            onClick={(e) => this.handleOpenMessageMenu(e, _msg)}\n                                        >\n                                            <MoreVertIcon/>\n                                        </IconButton> : null\n                                    }\n                                    <div\n                                        key={_index}\n                                        className={_msg.sender.login === this.props.userLogin ? classes.userSent : classes.friendSent}\n                                    >\n                                        {_msg.message}\n                                        <span className={classes.time}>{this.getTime(new Date(parseInt(_msg.timestamp)))}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>)\n                    }\n                    <Menu\n                        open={Boolean(this.state.anchorMenu)}\n                        anchorEl={this.state.anchorMenu}\n                        onClose={this.handleCloseMessageMenu}\n                        className={classes.menu}\n                    >\n                        <MenuItem\n                            onClick={() => {\n                                this.props.handleRemoveMessage(this.state.removeTarget);\n                                this.handleCloseMessageMenu();\n                            }}>Remove</MenuItem>\n                    </Menu>\n                </main>\n            </div>\n        );\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChatView));","const drawerWidth = 350;\n\nconst styles = theme => ({\n    dashboard: {\n        height: '100%',\n        display: 'flex',\n    },\n    content: {\n        marginTop: 64,\n        [theme.breakpoints.down('md')]: {\n            marginTop: 48,\n            marginRight: 0,\n        },\n        flexGrow: 1,\n        maxHeight: '100%',\n        marginRight: -drawerWidth,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    contentShift: {\n        marginTop: 64,\n        [theme.breakpoints.down('md')]: {\n            marginTop: 48,\n        },\n        flexGrow: 1,\n        maxHeight: '100%',\n        marginRight: 0,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    bigIcon: {\n        fontSize: '10em',\n        fill: '#9a9a9a'\n    },\n    defaultComponent: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        flexGrow: 2,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    text: {\n        color: '#737373',\n    },\n    chatViewContainer: {\n        height: '100%',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nexport default styles;","const styles = theme => ({\n    messageBox: {\n        flexGrow: 1,\n        backgroundColor: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: '80px',\n        padding: '0 30px',\n        width: 'calc(100% - 60px)',\n        zIndex: 999,\n    },\n    textField: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        },\n        width: '95%',\n    },\n    button: {\n        color: '#0874ff',\n        cursor: 'pointer',\n        marginLeft: '15px'\n    },\n});\n\nexport default styles;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from './styles';\n\nclass MessageBox extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: ''\n        };\n\n        this.submitMessage = this.submitMessage.bind(this);\n\n    }\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <div className={'message-box ' + classes.messageBox}>\n                <TextField\n                    style={{ margin: 8 }}\n                    placeholder=\"Enter your message...\"\n                    margin=\"normal\"\n                    className={classes.textField}\n                    onKeyUp={(e) => this.userTyping(e)}\n                    onChange={(e) => this.setState({message: e.target.value})}\n                    // onFocus={() => this.props.readMessageHandle(this.props.selectedChat)}\n                    autoComplete=\"off\"\n                    id='message-box'\n                    helperText='Press Enter to send the message'\n                    value={this.state.message}\n                />\n                <Send onClick={this.submitMessage} className={classes.button}/>\n            </div>\n        );\n    }\n\n    userTyping(e){\n        if(e.keyCode === 13) this.submitMessage();\n        else this.setState({\n            message: e.target.value\n        });\n    }\n\n    messageValid = (txt) => txt && txt.replace(/\\s/g, '').length > 0;\n\n    submitMessage(){\n        if(this.messageValid(this.state.message)){\n            this.props.sendMessageHandle(this.state.message, this.props.selectedChatType);\n            this.setState({message: ''});\n        }\n    }\n\n}\n\nexport default withStyles(styles)(MessageBox);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../actions/auth';\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticating: state.auth.isAuthenticating,\n        statusText: state.auth.statusText,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nfunction LogOutDialog(props) {\n\n    const handleClose = () => {\n        props.setOpen('logout', false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"logout-dialog-title\"\n            aria-describedby=\"logout-dialog-description\"\n        >\n            <DialogTitle id=\"logout-dialog-title\">{\"Log Out\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"logout-dialog-description\">\n                    Are you sure you want to log out?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.logout} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogOutDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions/data\";\nimport connect from \"react-redux/es/connect/connect\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    drop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& p': {\n            fontFamily: 'Roboto, sans-serif',\n            fontSize: '16px',\n            color: theme.palette.text.primary,\n            marginBottom: 0\n        }\n    },\n});\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass EditPhotoDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            src: null,\n            crop: {\n                unit: \"%\",\n                width: 100,\n                aspect: 1\n            },\n            error: ''\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n        this.onSelectFile = this.onSelectFile.bind(this);\n\n    }\n\n    onSelectFile = files => {\n        if (files && files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () =>\n                this.setState({ src: reader.result })\n            );\n            reader.readAsDataURL(files[0]);\n        }\n    };\n\n    // If you setState the crop in here you should return false.\n    onImageLoaded = image => this.imageRef = image;\n\n    onCropChange = (crop) => this.setState({ crop });\n\n    getCroppedImg(image, crop) {\n        const canvas = document.createElement(\"canvas\");\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        return new Promise((resolve, reject) => {\n            canvas.toBlob(blob => {\n                if (!blob) {\n                    console.error(\"Canvas is empty\");\n                    return;\n                }\n\n                let data = new FormData();\n                data.append('file', blob, 'profile_photo.jpg');\n\n                resolve(data);\n            }, \"image/jpeg\");\n        });\n    }\n\n\n    async handleSave(){\n\n        if(this.imageRef){\n            await this.getCroppedImg(\n                this.imageRef,\n                this.state.crop\n            ).then(data => {\n                this.props.handleUpdatePhoto(data);\n                this.handleClose();\n            });\n        }\n        else this.setState({\n            error: 'Please choose the file.'\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            src: null,\n        });\n        this.props.setOpen(false);\n    };\n\n    render(){\n\n        const { classes } = this.props;\n        const { crop, croppedImageUrl, src } = this.state;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"add-chat-dialog-title\"\n                aria-describedby=\"add-chat-dialog-description\"\n                maxWidth='xs'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"add-chat-dialog-title\">{\"Choose New Photo\"}</DialogTitle>\n                <DialogContent>\n                    {\n                        this.props.error || this.state.error ?\n                            <Alert severity=\"error\">\n                                {this.props.error ? this.props.error : this.state.error}\n                            </Alert> : null\n                    }\n                    {\n                        !this.state.src ? <DropzoneArea\n                            onChange={this.onSelectFile}\n                            acceptedFiles={['image/*']}\n                            filesLimit={1}\n                            showPreviewsInDropzone={false}\n                            dropzoneClass={classes.drop}\n                        /> : null\n                    }\n                    {src && (\n                        <ReactCrop\n                            src={src}\n                            crop={crop}\n                            ruleOfThirds\n                            onImageLoaded={this.onImageLoaded}\n                            onChange={this.onCropChange}\n                        />\n                    )}\n                    {croppedImageUrl && (\n                        <img alt=\"Crop\" style={{ maxWidth: \"100%\" }} src={croppedImageUrl} />\n                    )}\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleSave} color=\"primary\">Save</Button>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EditPhotoDialog));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions/data\";\nimport { connect } from 'react-redux';\nimport EditPhotoDialog from \"./EditPhotoDialog\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    avatar: {\n        width: 150,\n        height: 150,\n        fontSize: '2.25rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n        cursor: 'pointer',\n        position: 'relative',\n    },\n    form: {\n        width: '100%',\n    },\n    input: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        }\n    },\n    label:{\n        fontSize: '16px',\n        marginTop: '10px',\n    },\n    passwordInput: {\n        marginTop: '-5px',\n    },\n    alert: {\n        marginBottom: '20px',\n    }\n});\n\nfunction mapStateToProps(state) {\n    return {\n        isFetching: state.data.isFetching,\n        data: state.data.data,\n        status: state.data.status,\n        token: state.auth.token\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass AccountDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            surname: '',\n            login: '',\n            password: '',\n            passwordConfirmation: '',\n            updateError: '',\n            editPhotoDialogOpen: false,\n            img: ''\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n        this.initData = this.initData.bind(this);\n\n    }\n\n\n    initData(user){\n        this.setState({\n            name: user.name,\n            surname: user.surname,\n            login: user.login,\n        });\n    }\n\n    componentDidMount(){\n        this.props.fetchProtectedData(this.props.token, this.initData);\n    }\n\n    loginIsValid = () => this.state.login.length >= 6;\n    passwordIsValid = () => this.state.password.length >= 6;\n    formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    handleClose = () => {\n        this.props.setOpen('account', false);\n        this.props.updateUserDataClose();\n        this.setState({\n            updateError: ''\n        });\n    };\n\n    handleSave = () => {\n\n        let newUser = {};\n\n        if(this.state.password.length > 0) {\n            if(!this.passwordIsValid()){\n                this.setState({\n                    updateError: 'Password must be at least 6 characters.',\n                    password: '',\n                    passwordConfirmation: '',\n                });\n                return;\n            }\n            else if (!this.formIsValid()) {\n                this.setState({\n                    updateError: 'Passwords do not match',\n                    password: '',\n                    passwordConfirmation: '',\n                });\n                return;\n            }\n            else if (!this.loginIsValid()){\n                this.setState({\n                    updateError: 'Login must be at least 6 characters.',\n                });\n                return;\n            }\n            else newUser = {\n                name: this.state.name,\n                surname: this.state.surname,\n                login: this.state.login,\n                password: this.state.password\n            };\n        }\n        else newUser = {\n            name: this.state.name,\n            surname: this.state.surname,\n            login: this.state.login\n        };\n\n        this.setState({updateError: ''});\n        this.props.updateUserData(this.props.token, newUser);\n\n    };\n\n    handleDialogOpen = (state) => this.setState({\n        editPhotoDialogOpen: state\n    });\n\n    handleUpdatePhoto = (data) => {\n        this.props.updateUserPhoto(this.props.token, data);\n    };\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"account-dialog-title\"\n                aria-describedby=\"account-dialog-description\"\n                maxWidth='sm'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"account-dialog-title\">{\"My Account\"}</DialogTitle>\n                <DialogContent>\n                    {\n                        this.props.status && !(this.state.updateError.length > 0) ?\n                            <Alert severity={this.props.status.status === 'OK' ? 'success' : 'error'} className={classes.alert}>\n                                {this.props.status.message}\n                            </Alert> : null\n                    }\n                    {\n                        this.state.updateError ?\n                            <Alert severity='error' className={classes.alert}>\n                                {this.state.updateError}\n                            </Alert> : null\n                    }\n                    <center>\n                        <Tooltip title=\"Click to add new profile photo\">\n                            {\n                                this.props.data.profile_image ? <Avatar\n                                        className={classes.avatar}\n                                        src={API_PATH + this.props.data.profile_image}\n                                        onClick={() => this.handleDialogOpen(true)}\n                                    /> :\n                                    <Avatar className={classes.avatar} onClick={() => this.handleDialogOpen(true)}>\n                                        {\n                                            (this.state.name ? this.state.name.charAt(0).toUpperCase() : '') + '' +\n                                            (this.state.surname ? this.state.surname.charAt(0).toUpperCase() : '')\n                                        }\n                                    </Avatar>\n                            }\n                        </Tooltip>\n                    </center>\n                    <TextField\n                        margin='dense'\n                        id='account-name-input'\n                        label='Name'\n                        fullWidth\n                        value={this.state.name}\n                        onChange={(e) => this.userTyping('name', e)}\n                        autoComplete=\"off\"\n                    />\n                    <TextField\n                        margin='dense'\n                        id='account-surname-input'\n                        label='Surname'\n                        fullWidth\n                        value={this.state.surname}\n                        onChange={(e) => this.userTyping('surname', e)}\n                        autoComplete=\"off\"\n                    />\n                    <TextField\n                        margin='dense'\n                        id='account-login-input'\n                        label='Login'\n                        fullWidth\n                        value={this.state.login}\n                        onChange={(e) => this.userTyping('login', e)}\n                        autoComplete=\"off\"\n                        disabled\n                    />\n                    <Typography component='h6' variant='h6' className={classes.label}>Change Password:</Typography>\n                    <TextField\n                        margin='dense'\n                        id='account-password-input'\n                        label='New Password'\n                        fullWidth\n                        value={this.state.password}\n                        onChange={(e) => this.userTyping('password', e)}\n                        type='password'\n                        className={classes.passwordInput}\n                    />\n                    <TextField\n                        margin='dense'\n                        id='account-password-confirmation-input'\n                        label='Confirm Password'\n                        fullWidth\n                        value={this.state.passwordConfirmation}\n                        onChange={(e) => this.userTyping('passwordConfirmation', e)}\n                        type='password'\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                        Close\n                    </Button>\n\n                </DialogActions>\n                <EditPhotoDialog\n                    open={this.state.editPhotoDialogOpen}\n                    setOpen={this.handleDialogOpen}\n                    handleUpdatePhoto={this.handleUpdatePhoto}\n                />\n            </Dialog>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'name':\n                this.setState({ name: event.target.value });\n                break;\n            case 'surname':\n                this.setState({ surname: event.target.value });\n                break;\n            case 'login':\n                this.setState({ login: event.target.value });\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            case 'passwordConfirmation':\n                this.setState({ passwordConfirmation: event.target.value });\n                break;\n            default:\n                break;\n        }\n    };\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AccountDialog));","import { parseJSON } from '../utils/misc';\nimport {\n    get_user_contacts,\n    get_filtered_user_contacts,\n    get_user_invitations,\n} from '../utils/http_functions';\nimport {\n    RECEIVE_CONTACT_LIST,\n    FETCH_CONTACT_LIST_REQUEST,\n    RECEIVE_INVITATION_LIST,\n    FETCH_INVITATION_LIST_REQUEST,\n    RECEIVE_FILTERED_CONTACT_LIST,\n    FETCH_FILTERED_CONTACT_LIST_REQUEST,\n    CLEAN_CONTACT_LIST,\n} from '../utils/constants';\n\nexport function receiveContactList(data) {\n\n    return {\n        type: RECEIVE_CONTACT_LIST,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchContactListRequest() {\n    return {\n        type: FETCH_CONTACT_LIST_REQUEST,\n    };\n}\n\nexport function fetchContactList(token) {\n    return (dispatch) => {\n        dispatch(fetchContactListRequest());\n        get_user_contacts(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveContactList(response));\n            })\n            .catch(error => {\n\n            });\n    };\n}\n\nexport function receiveFilteredContactList(data) {\n\n    return {\n        type: RECEIVE_FILTERED_CONTACT_LIST,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchFilteredContactListRequest() {\n    return {\n        type: FETCH_FILTERED_CONTACT_LIST_REQUEST,\n    };\n}\n\nexport function cleanContactList() {\n    return {\n        type: CLEAN_CONTACT_LIST\n    };\n}\n\nexport function fetchFilteredContactList(token, login) {\n    return (dispatch) => {\n        dispatch(fetchFilteredContactListRequest());\n        get_filtered_user_contacts(token, login)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveFilteredContactList(response));\n            })\n            .catch(error => {\n\n            });\n    };\n}\n\nexport function receiveInvitationList(data) {\n\n    return {\n        type: RECEIVE_INVITATION_LIST,\n        payload: {\n            data,\n        },\n    };\n}\n\nexport function fetchInvitationListRequest() {\n    return {\n        type: FETCH_INVITATION_LIST_REQUEST,\n    };\n}\n\nexport function fetchInvitationList(token) {\n    return (dispatch) => {\n        dispatch(fetchInvitationListRequest());\n        get_user_invitations(token)\n            .then(parseJSON)\n            .then(response => {\n                dispatch(receiveInvitationList(response));\n            })\n            .catch(error => {\n\n            });\n    };\n}","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"./AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    user: {\n        cursor: 'pointer',\n    },\n    error: {\n        marginTop: '15px'\n    }\n});\n\nfunction AddChat(props) {\n    const { value, index } = props;\n\n    const { classes } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && <div>\n                {\n                    props.error ?\n                        <Alert severity=\"error\" className={classes.error}>\n                            {props.error}\n                        </Alert> : null\n                }\n                <div>\n                    <TextField\n                        margin='dense'\n                        id='add-chat-login-input'\n                        label='Enter user login'\n                        fullWidth\n                        value={props.login}\n                        onChange={(e) => props.userTyping(e, 'add-chat-login')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.usersList && props.login.length >= 3 ? <div className=\"users-list\">\n                            {\n                                props.usersList.map((user, index) => <AccountPreview\n                                    key={index}\n                                    user={user}\n                                    className={classes.user}\n                                    handleClick={props.chooseUser}\n                                    selected={props.login === user.login}\n                                />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        props.usersList &&\n                        props.usersList.length === 0 &&\n                        props.login.length >= 3 ? <ListItem>\n                            <ListItemText\n                                secondary={'User with this login does not exist or ' +\n                                'you already have a chat with this user.'}\n                            />\n                        </ListItem> : null\n                    }\n                    {\n                        props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(AddChat);","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"./AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    user: {\n        cursor: 'pointer',\n    },\n    list: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n    label: {\n        fontSize: '16px',\n        marginTop: '10px',\n    },\n    chip: {\n        marginRight: '3px',\n    },\n    error: {\n        marginTop: 15\n    },\n});\n\nfunction AddGroup(props) {\n    const { value, index } = props;\n\n    const { classes } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && <div>\n                {\n                    props.error ?\n                        <Alert severity=\"error\" className={classes.error}>\n                            {props.error}\n                        </Alert> : null\n                }\n                {\n                    props.validation ?\n                        <Alert severity=\"error\" className={classes.error}>\n                            {props.validation}\n                        </Alert> : null\n                }\n                <div>\n                    <TextField\n                        margin='dense'\n                        id='add-group-title-input'\n                        label='Title'\n                        fullWidth\n                        value={props.chatTitle}\n                        onChange={(e) => props.userTyping(e, 'title')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.groupUserList.length > 0 ? <div>\n                            <Typography className={classes.label} component='h6' variant='h6'>User list:</Typography>\n                            {\n                                props.groupUserList.map((user, index) => <Chip\n                                    key={index}\n                                    className={classes.chip}\n                                    avatar={\n                                        user.profile_image ? <Avatar\n                                                src={API_PATH + user.profile_image}\n                                            /> : <Avatar>\n                                                {\n                                                    (user.name ? user.name.charAt(0).toUpperCase() : '') + '' +\n                                                    (user.surname ? user.surname.charAt(0).toUpperCase() : '')\n                                                }\n                                            </Avatar>\n                                    }\n                                    label={user.name + ' ' + user.surname}\n                                    variant=\"outlined\"\n                                    onDelete={() => props.removeUserFromList(user.login)}\n                                />)\n                            }\n                        </div> : null\n                    }\n                    <TextField\n                        margin='dense'\n                        id='add-group-login-input'\n                        label='Filter by user name'\n                        fullWidth\n                        value={props.login}\n                        onChange={(e) => props.userTyping(e, 'add-group-login')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.contactList ? <div className={classes.list}>\n                            {\n                                props.contactList.sort((contactA, contactB) =>\n                                contactA.name < contactB.name ? -1 : 1)\n                                    .filter(contact => (contact.name + ' ' + contact.surname).toLowerCase()\n                                        .includes(props.login.toLowerCase()))\n                                    .filter(contact => !props.userInList(contact))\n                                    .map((user, index) => <AccountPreview\n                                        key={index}\n                                        user={user}\n                                        className={classes.user}\n                                        handleClick={() => props.addUserToList(user)}\n                                        selected={false}\n                                    />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        props.contactList &&\n                        props.contactList.length === 0 ? <ListItem>\n                            <ListItemText\n                                secondary={'User with this login does not exist or ' +\n                                'you already have a chat with this user.'}\n                            />\n                        </ListItem> : null\n                    }\n                    {\n                        props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(AddGroup);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {fetchUsersData, cleanUsersData} from \"../actions/data\";\nimport {fetchContactList, fetchFilteredContactList, cleanContactList} from '../actions/contacts';\nimport {addChat, addChatClose, addGroup} from \"../actions/chats\";\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AddChat from \"../components/AddChat\";\nimport AddGroup from \"../components/AddGroup\";\n\nconst styles = theme => ({\n\n});\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        error: state.chats.addChatError,\n        isAddingChat: state.chats.isAddingChat,\n        usersList: state.contacts.filteredContacts,\n        contactList: state.contacts.contacts,\n        isFetching: state.contacts.isFetching,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addChat: (userLogin, openModal) => dispatch(addChat(userLogin, openModal)),\n    addChatClose: () => dispatch(addChatClose()),\n    addGroup: (title, users, openModal) => dispatch(addGroup(title, users, openModal)),\n    fetchUsersData: (token, login) => dispatch(fetchUsersData(token, login)),\n    cleanUsersData: () => dispatch(cleanUsersData()),\n    fetchContactList: token => dispatch(fetchContactList(token)),\n    fetchFilteredContactList: (token, login) => dispatch(fetchFilteredContactList(token, login)),\n    cleanContactList: () => dispatch(cleanContactList()),\n});\n\n\nclass AddChatDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addChatLogin: '',\n            addGroupLogin: '',\n            chatTitle: '',\n            groupUserList: [],\n            currentTab: 0,\n            addGroupError: null,\n\n        };\n\n        this.userTyping = this.userTyping.bind(this);\n        this.chooseUser = this.chooseUser.bind(this);\n        this.handleAddUserToList = this.handleAddUserToList.bind(this);\n        this.handleRemoveUserFromList = this.handleRemoveUserFromList.bind(this);\n        this.isUserInGroupList = this.isUserInGroupList.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.props.fetchContactList(this.props.token);\n    }\n\n    userTyping = (e, type) => {\n        switch (type) {\n            case 'add-chat-login':\n                let login = e.target.value;\n                if(login.length >= 3){\n                    this.props.fetchFilteredContactList(this.props.token, login);\n                }\n                else{\n                    this.props.cleanContactList();\n                }\n                this.setState({ addChatLogin: login });\n                break;\n            case 'add-group-login':\n                this.setState({ addGroupLogin: e.target.value });\n                break;\n            case 'title':\n                let title = e.target.value;\n                this.setState({chatTitle: title});\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleClose = () => {\n        this.props.setOpen('add-chat', false);\n        this.setState({\n            addChatLogin: '',\n            addGroupLogin: '',\n            chatTitle: '',\n            groupUserList: [],\n            currentTab: 0\n        });\n        this.props.addChatClose();\n        this.props.cleanUsersData();\n    };\n\n    handleAddChat = () => {\n        if(this.state.currentTab === 0){\n            this.props.addChat(this.state.addChatLogin, this.props.setOpen);\n        }\n        else{\n            let users = [];\n            let title = this.state.chatTitle;\n\n            for (let i = 0; i < this.state.groupUserList.length; i++) {\n                users.push(this.state.groupUserList[i].login);\n            }\n\n            if(title.length < 3){\n                this.setState({\n                    addGroupError: 'Title should have minimum 3 symbols.'\n                });\n            }\n            else if(users.length < 2){\n                this.setState({\n                    addGroupError: 'Please choose minimum 2 users.'\n                });\n            }\n            else{\n                this.props.addGroup(title, users, this.props.setOpen);\n                this.setState({\n                    addGroupError: null,\n                });\n            }\n        }\n        this.setState({\n            addChatLogin: '',\n            addGroupLogin: '',\n            chatTitle: '',\n            groupUserList: [],\n        });\n    };\n\n    chooseUser(login){\n        this.props.fetchFilteredContactList(this.props.token, login);\n        this.setState({addChatLogin: login});\n    }\n\n    handleAddUserToList(user){\n        this.setState({\n            groupUserList: [...this.state.groupUserList, user]\n        });\n    }\n\n    handleRemoveUserFromList(login){\n        this.setState({\n            groupUserList: this.state.groupUserList.filter(user => user.login !== login)\n        });\n    }\n\n    isUserInGroupList(user){\n        for(let i = 0; i < this.state.groupUserList.length; i++){\n            if(this.state.groupUserList[i].login === user.login){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n\n    handleChange = (e, tab) => {\n        this.setState({currentTab: tab});\n    };\n\n    render(){\n\n        // const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"add-chat-dialog-title\"\n                aria-describedby=\"add-chat-dialog-description\"\n                maxWidth='sm'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"add-chat-dialog-title\">{\"Add new chat\"}</DialogTitle>\n                <DialogContent>\n                    <Tabs\n                        value={this.state.currentTab}\n                        onChange={this.handleChange}\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"New chat\" {...this.a11yProps(0)} />\n                        <Tab label=\"New group\" {...this.a11yProps(1)} />\n                    </Tabs>\n                    <AddChat\n                        value={this.state.currentTab}\n                        index={0}\n                        error={this.props.error}\n                        login={this.state.addChatLogin}\n                        userTyping={this.userTyping}\n                        usersList={this.props.usersList}\n                        chooseUser={this.chooseUser}\n                        isFetching={this.props.isFetching}\n                    />\n                    <AddGroup\n                        value={this.state.currentTab}\n                        index={1}\n                        error={this.props.addGroupError}\n                        login={this.state.addGroupLogin}\n                        chatTitle={this.state.chatTitle}\n                        userTyping={this.userTyping}\n                        contactList={this.props.contactList}\n                        addUserToList={this.handleAddUserToList}\n                        removeUserFromList={this.handleRemoveUserFromList}\n                        isFetching={this.props.isFetching}\n                        groupUserList={this.state.groupUserList}\n                        userInList={this.isUserInGroupList}\n                        validation={this.state.addGroupError}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleAddChat} color=\"primary\">Add</Button>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddChatDialog));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Chip from '@material-ui/core/Chip';\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    avatar: {\n        width: 100,\n        height: 100,\n        fontSize: '2.25rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n        cursor: 'pointer',\n        position: 'relative',\n    },\n    userInfo: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    info: {\n        paddingLeft: 15\n    },\n    chip: {\n        marginTop: 5\n    },\n    actions: {\n        '& button': {\n            marginLeft: '0 !important',\n        }\n    },\n});\n\nfunction UserInfoDialog(props) {\n\n    const handleClose = () => {\n        props.setOpen('user-info', false);\n    };\n\n    const { classes } = props;\n\n    let contacts_login = [];\n    for(let i = 0; i < props.contacts.length; i++){\n        contacts_login.push(props.contacts[i].login);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"user-info-dialog-title\"\n            aria-describedby=\"user-info-dialog-description\"\n        >\n            <DialogContent>\n                <div className={classes.userInfo}>\n                    {\n                        props.data.profile_image ? <Avatar\n                                className={classes.avatar}\n                                src={API_PATH + props.data.profile_image}\n                            /> :\n                            <Avatar className={classes.avatar}>\n                                {\n                                    (props.data.name ? props.data.name.charAt(0).toUpperCase() : '') + '' +\n                                    (props.data.surname ? props.data.surname.charAt(0).toUpperCase() : '')\n                                }\n                            </Avatar>\n                    }\n                    <div className={classes.info}>\n                        <Typography component='h5' variant='h5'>{props.data.name + ' ' + props.data.surname}</Typography>\n                        <Typography variant='body1'>Login: {props.data.login}</Typography>\n                        {\n                            contacts_login.includes(props.data.login) ? <Chip\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                size=\"small\"\n                                label=\"Your contact\"\n                                className={classes.chip}\n                            /> : null\n                        }\n                    </div>\n                </div>\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                {\n                    contacts_login.includes(props.data.login) ? <div>\n                        <Button onClick={() => {\n                            props.handleGoToChat();\n                            handleClose();\n                        }} color=\"primary\">\n                            Go to chat\n                        </Button>\n                        <Button onClick={props.handleRemoveContact} color=\"secondary\">\n                            Delete\n                        </Button>\n                    </div> : <Button onClick={props.handleAddContact} color=\"primary\">\n                        Add contact\n                    </Button>\n                }\n                <Button onClick={handleClose} autoFocus>\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default withStyles(styles)(UserInfoDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DeleteContactDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpen('contact', false)}\n            aria-labelledby=\"delete-contact-dialog-title\"\n            aria-describedby=\"delete-contact-dialog-description\"\n        >\n            <DialogTitle id=\"delete-contact-dialog-title\">{\"Delete contact\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"delete-contact-dialog-description\">\n                    Are you sure you want to delete this contact?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleRemoveContact} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={() => props.setOpen('contact', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteContactDialog;","import React from \"react\";\nimport AccountPreview from \"./AccountPreview\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport UserInfoDialog from \"../dialogs/UserInfoDialog\";\nimport DeleteContactDialog from \"../dialogs/DeleteContactDialog\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    list: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n    addBtn:{\n        textAlign: 'center'\n    },\n    search: {\n        marginTop: '10px',\n        marginBottom: '10px',\n    }\n});\n\nclass ContactList extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchValue: '',\n            selectedUser: null,\n            userInfoOpen: false,\n            deleteContactDialogOpen: false,\n        };\n\n        this.handleSearch = this.handleSearch.bind(this);\n\n    }\n\n    handleSearch = (e) => this.setState({searchValue: e.target.value});\n\n    setOpen = (type, open) => {\n        if(type === 'user-info') {\n            this.setState({userInfoOpen: open});\n        }\n        else if(type === 'contact'){\n            this.setState({deleteContactDialogOpen: open});\n        }\n    };\n\n    render(){\n        const { value, index } = this.props;\n\n        const { classes } = this.props;\n\n        return (\n            <div\n                hidden={value !== index}\n                id={`simple-tabpanel-${index}`}\n                aria-labelledby={`simple-tab-${index}`}\n            >\n                {value === index && <div>\n                    <TextField\n                        fullWidth\n                        value={this.state.searchValue}\n                        onChange={this.handleSearch}\n                        placeholder='Filter by user name'\n                        className={classes.search}\n                    />\n                    {\n                        this.props.contacts && this.props.contacts.length > 0 ? <div className={classes.list}>\n                            {\n                                this.props.contacts.sort((contactA, contactB) =>\n                                    contactA.name < contactB.name ? -1 : 1).filter(contact =>\n                                    (contact.name + ' ' + contact.surname).toLowerCase()\n                                        .includes(this.state.searchValue.toLowerCase()))\n                                    .map((user, index) => <AccountPreview\n                                    key={index}\n                                    user={user}\n                                    className={classes.user}\n                                    handleClick={() => {\n                                        this.setState({selectedUser: user});\n                                        this.setOpen('user-info', true);\n                                    }}\n                                />)\n                            }\n                        </div> : <ListItem>\n                            <ListItemText\n                                secondary={'You don\\'t have any contacts.'}\n                            />\n                        </ListItem>\n                    }\n                    {\n                        this.props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                    {\n                        this.state.selectedUser ? <UserInfoDialog\n                            open={this.state.userInfoOpen}\n                            setOpen={this.setOpen}\n                            data={this.state.selectedUser}\n                            contacts={this.props.contacts}\n                            handleGoToChat={() => this.props.handleGoToChat(this.state.selectedUser.login)}\n                            handleRemoveContact={() => this.setOpen('contact', true)}\n                        /> : null\n                    }\n                    <DeleteContactDialog\n                        open={this.state.deleteContactDialogOpen}\n                        setOpen={this.setOpen}\n                        handleRemoveContact={() => {\n                            this.props.handleRemoveContact(this.state.selectedUser);\n                            this.setOpen('contact', false);\n                        }}\n                    />\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ContactList);","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {makeStyles} from \"@material-ui/core\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst useStyles = makeStyles(theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    time: {\n        fontSize: '12px',\n        fontFamily: \"'Roboto', sans-serif\",\n        position: 'absolute',\n        right: '16px',\n        top: '14px',\n        color: theme.palette.text.secondary\n    },\n    avatar: {\n        // border: '2px solid',\n        borderColor: theme.palette.text.disabled,\n    },\n    button: {\n        padding: 0\n    },\n}));\n\n\nexport default function InvitationPreview(props) {\n\n    const user = props.data.sender;\n    const styles = useStyles();\n\n    if(user)\n        return (\n            <ListItem\n                className={styles.listItem}\n            >\n                <ListItemAvatar>\n                    {\n                        user.profile_image ? <Avatar\n                                src={API_PATH + user.profile_image}\n                                className={styles.avatar}\n                            /> :\n                            <Avatar className={styles.avatar}>\n                                {user.name.charAt(0).toUpperCase() + '' + (user.surname ? user.surname.charAt(0).toUpperCase() : '')}\n                            </Avatar>\n                    }\n                </ListItemAvatar>\n                <ListItemText\n                    primary={<b>{user.name + ' ' + (user.surname ? user.surname : '')}</b>}\n                    secondary={\n                        <React.Fragment>\n                            {props.data.message}\n                        </React.Fragment>\n                    }\n                />\n                <IconButton className={styles.button} onClick={props.handleAccept}>\n                    <DoneIcon color=\"primary\"/>\n                </IconButton>\n                <IconButton className={styles.button} onClick={props.handleDecline}>\n                    <CloseIcon/>\n                </IconButton>\n            </ListItem>\n        );\n    else return null;\n}","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InvitationPreview from \"./InvitationPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    list: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n    addBtn:{\n        textAlign: 'center'\n    }\n});\n\nfunction InvitationList(props) {\n    const { value, index } = props;\n\n    const { classes } = props;\n\n    return (\n        <div\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n        >\n            {value === index && <div className={classes.list}>\n                {\n                    props.invitations && props.invitations.received.length > 0 ? <div className=\"users-list\">\n                        {\n                            props.invitations.received.map((invitation, index) => <InvitationPreview\n                                key={index}\n                                data={invitation}\n                                handleAccept={() => props.acceptInvitation(invitation.sender.login)}\n                                handleDecline={() => props.declineInvitation(invitation.sender.login)}\n                            />)\n                        }\n                    </div> : <ListItem>\n                        <ListItemText\n                            secondary={'You don\\'t have any invitations.'}\n                        />\n                    </ListItem>\n                }\n                {\n                    props.isFetching ? <div className={classes.progress}>\n                        <CircularProgress color=\"primary\"/>\n                    </div> : null\n                }\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default withStyles(styles)(InvitationList);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"../components/AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\n\nconst styles = theme => ({\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '15px',\n    },\n    user: {\n        cursor: 'pointer',\n    },\n    error: {\n        marginTop: '15px'\n    },\n});\n\nfunction AddContactDialog(props) {\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    const { classes } = props;\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"add-contact-dialog-title\"\n            aria-describedby=\"add-contact-dialog-description\"\n            maxWidth='xs'\n            fullWidth={true}\n        >\n            <DialogTitle id=\"add-contact-dialog-title\">{\"Add contact\"}</DialogTitle>\n            <DialogContent>\n                <div>\n                    {\n                        props.successMsg ?\n                            <Alert severity=\"success\" className={classes.error}>\n                                {props.successMsg}\n                            </Alert> : null\n                    }\n                    {\n                        props.error ?\n                            <Alert severity=\"error\" className={classes.error}>\n                                {props.error}\n                            </Alert> : null\n                    }\n                    <TextField\n                        margin='dense'\n                        id='add-contact-login-input'\n                        label='Enter user login'\n                        fullWidth\n                        value={props.login}\n                        onChange={(e) => props.userTyping(e, 'login')}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        props.contactList && props.login.length >= 3 ? <div className=\"users-list\">\n                            {\n                                props.contactList.map((user, index) => <AccountPreview\n                                    key={index}\n                                    user={user}\n                                    className={classes.user}\n                                    handleClick={props.chooseUser}\n                                    selected={props.login === user.login}\n                                />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        props.contactList &&\n                        props.contactList.length === 0 &&\n                        props.login.length >= 3 ? <ListItem>\n                            <ListItemText\n                                secondary={'User with this login does not exist or ' +\n                                'you already have this user in your contact list.'}\n                            />\n                        </ListItem> : null\n                    }\n                    {\n                        props.isFetching ? <div className={classes.progress}>\n                            <CircularProgress color=\"primary\"/>\n                        </div> : null\n                    }\n                    <TextField\n                        margin='dense'\n                        id='add-contact-message-input'\n                        label='Enter message'\n                        fullWidth\n                        value={props.message}\n                        onChange={(e) => props.userTyping(e, 'message')}\n                        autoComplete=\"off\"\n                        maxLength={50}\n                    />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleSendInvitation} color=\"primary\">\n                    Send\n                </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default withStyles(styles)(AddContactDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ContactList from '../components/ContactList';\nimport { fetchContactList, fetchInvitationList } from '../actions/contacts';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport InvitationList from \"../components/InvitationList\";\nimport Badge from \"@material-ui/core/Badge/Badge\";\nimport AddContactDialog from \"./AddContactDialog\";\nimport {cleanUsersData, fetchUsersData} from \"../actions/data\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport {addChat, fetchUserChats} from \"../actions/chats\";\n\nconst styles = theme => ({\n    addBtn: {\n        float: 'right',\n    },\n    badge: {\n        '& span': {\n            right: '-12px'\n        }\n    },\n});\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        contacts: state.contacts.contacts,\n        invitations: state.contacts.invitations,\n        isContactsFetching: state.contacts.isFetching,\n        usersList: state.data.usersList,\n        isDataFetching: state.data.isFetching,\n        userLogin: state.auth.login,\n        chats: state.chats.chats,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchContactList: (token) => dispatch(fetchContactList(token)),\n    fetchInvitationList: (token) => dispatch(fetchInvitationList(token)),\n    fetchUsersData: (token, login) => dispatch(fetchUsersData(token, login)),\n    cleanUsersData: () => dispatch(cleanUsersData()),\n    addChat: (userLogin, openModal, selectChat) => dispatch(addChat(userLogin, openModal, selectChat)),\n    getChats: (token) => dispatch(fetchUserChats(token)),\n});\n\n\nclass ContactsDialog extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTab: 0,\n            contactDialogOpen: false,\n            login: '',\n            inviteMessage: '',\n            error: '',\n            success: '',\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            },\n        };\n\n        this.userTyping = this.userTyping.bind(this);\n        this.chooseUser = this.chooseUser.bind(this);\n        this.handleAddContactModalOpen = this.handleAddContactModalOpen.bind(this);\n        this.handleSendInvitation = this.handleSendInvitation.bind(this);\n        this.handleAcceptInvitation = this.handleAcceptInvitation.bind(this);\n        this.handleDeclineInvitation = this.handleDeclineInvitation.bind(this);\n        this.setSocketListeners = this.setSocketListeners.bind(this);\n\n    }\n\n    componentDidMount(){\n\n        this.props.fetchContactList(this.props.token);\n        this.props.fetchInvitationList(this.props.token);\n        this.setSocketListeners();\n\n    }\n\n    setSocketListeners(){\n        this.props.socket.on('invitation_sent', data => {\n            if(this.props.userLogin === data.sender) {\n                this.setState({\n                    success: data.message,\n                    error: '',\n                    login: '',\n                    inviteMessage: '',\n                });\n                this.handleAddContactModalOpen(false);\n                this.handleShowSnackbar('success', data.message);\n            }\n            else if(this.props.userLogin === data.receiver){\n                this.props.fetchInvitationList(this.props.token);\n            }\n        });\n        this.props.socket.on('invitation_error', data => {\n            if(this.props.userLogin === data.sender){\n                this.setState({\n                    error: data.error,\n                    success: ''\n                });\n            }\n        });\n        this.props.socket.on('invitation_accepted', data => {\n            this.props.fetchContactList(this.props.token);\n            this.props.fetchInvitationList(this.props.token);\n            if(this.props.userLogin === data.receiver){\n                this.handleShowSnackbar('success', data.message);\n            }\n        });\n        this.props.socket.on('invitation_declined', data => {\n            if(this.props.userLogin === data.receiver){\n                this.props.fetchInvitationList(this.props.token);\n                this.handleShowSnackbar('info', data.message);\n            }\n        });\n    }\n\n    handleSendInvitation(){\n        const invitation = {\n            'sender': this.props.userLogin,\n            'receiver': this.state.login,\n            'message': this.state.inviteMessage\n        };\n\n        this.props.socket.emit('send_invitation', invitation);\n    }\n\n    handleAcceptInvitation(sender){\n        const data = {\n            'sender': sender,\n            'receiver': this.props.userLogin\n        };\n\n        this.props.socket.emit('accept_invitation', data);\n    }\n\n    handleDeclineInvitation(sender){\n        const data = {\n            'sender': sender,\n            'receiver': this.props.userLogin\n        };\n\n        this.props.socket.emit('decline_invitation', data);\n    }\n\n    handleShowSnackbar(type, data){\n        this.setState({\n            snackbar: {\n                type: type,\n                message: data,\n                open: true,\n            }\n        });\n    }\n\n    userTyping = (e, type) => {\n        switch (type) {\n            case 'login':\n                let login = e.target.value;\n                if(login.length >= 3){\n                    this.props.fetchUsersData(this.props.token, login);\n                }\n                else{\n                    this.props.cleanUsersData();\n                }\n                this.setState({ login });\n                break;\n            case 'message':\n                let message = e.target.value;\n                if(message.length < 50) {\n                    this.setState({inviteMessage: message});\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleSnackbarClose = (e, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            }\n        });\n    };\n\n    handleClose = () => {\n        this.props.setOpen('contacts', false);\n    };\n\n    chooseUser(login){\n        this.props.fetchUsersData(this.props.token, login);\n        this.setState({login});\n    }\n\n    a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n\n    handleChange = (e, tab) => {\n        this.setState({currentTab: tab});\n    };\n\n    handleAddContactModalOpen = (open) =>\n        this.setState({\n            contactDialogOpen: open,\n            success: '',\n            error: '',\n            login: '',\n            inviteMessage: '',\n        });\n\n\n    handleGoToChat = (login) => {\n        this.props.handleGoToChat(login);\n        this.handleClose();\n    };\n\n    handleRemoveContact = (user) => {\n        this.props.handleRemoveContact(user);\n        this.handleClose();\n    };\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"contacts-dialog-title\"\n                aria-describedby=\"contacts-dialog-description\"\n                maxWidth='sm'\n                fullWidth={true}\n            >\n                <DialogTitle id=\"contacts-dialog-title\">\n                    {\"Contacts\"}\n                    <IconButton\n                        className={classes.addBtn}\n                        onClick={() => this.handleAddContactModalOpen(true)}\n                    >\n                        <PersonAddIcon/>\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <Tabs\n                        value={this.state.currentTab}\n                        onChange={this.handleChange}\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"List\" {...this.a11yProps(0)} />\n                        {\n                            this.props.invitations && this.props.invitations.received.length > 0 ?\n                                <Tab label={<Badge\n                                    badgeContent={this.props.invitations.received.length}\n                                    color=\"primary\"\n                                    className={classes.badge}\n                                >Invitations</Badge>} {...this.a11yProps(1)} />\n                            : <Tab label=\"Invitations\" {...this.a11yProps(1)} />\n                        }\n                    </Tabs>\n                    <ContactList\n                        value={this.state.currentTab}\n                        index={0}\n                        contacts={this.props.contacts}\n                        handleGoToChat={this.handleGoToChat}\n                        handleRemoveContact={this.handleRemoveContact}\n                        isFetching={this.props.isFetching}\n                    />\n                    <InvitationList\n                        value={this.state.currentTab}\n                        index={1}\n                        invitations={this.props.invitations}\n                        isFetching={this.props.isContactsFetching}\n                        acceptInvitation={this.handleAcceptInvitation}\n                        declineInvitation={this.handleDeclineInvitation}\n                    />\n                    <AddContactDialog\n                        open={this.state.contactDialogOpen}\n                        setOpen={this.handleAddContactModalOpen}\n                        userTyping={this.userTyping}\n                        login={this.state.login}\n                        contactList={this.props.usersList}\n                        chooseUser={this.chooseUser}\n                        isFetching={this.props.isDataFetching}\n                        message={this.state.inviteMessage}\n                        error={this.state.error}\n                        successMsg={this.state.success}\n                        handleSendInvitation={this.handleSendInvitation}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\" autoFocus>Close</Button>\n                </DialogActions>\n                <Snackbar\n                    open={this.state.snackbar.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleSnackbarClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                >\n                    <Alert\n                        onClose={this.handleSnackbarClose}\n                        severity={this.state.snackbar.type}\n                    >{this.state.snackbar.message}</Alert>\n                </Snackbar>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ContactsDialog));","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport {makeStyles} from \"@material-ui/core\";\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport {API_PATH} from \"../utils/constants\";\n\nconst useStyles = makeStyles(theme => ({\n    listItem: {\n        position: 'relative',\n        '&.Mui-selected': {\n            backgroundColor: 'rgba(8, 116, 255, 0.2) !important'\n        }\n    },\n    group3: {\n        marginLeft: '-35px',\n        '&:first-child': {\n            marginLeft: '-8px'\n        }\n    },\n    title: {\n        fontSize: '18px',\n        marginLeft: '5px',\n        fontWeight: 500\n    },\n}));\n\n\nexport default function GroupPreview(props) {\n\n    const users = props.users;\n    const styles = useStyles();\n\n    if(users.length > 0)\n        return (\n            <ListItem className={styles.listItem}>\n                <AvatarGroup max={2}>\n                    {\n                        props.groupPhoto ? <Avatar\n                                src={API_PATH + props.groupPhoto}\n                            /> :\n                        users.slice(0, 3).map((_usr, _idx) => <Avatar\n                            key={_idx}\n                            src={_usr.profile_image ? (API_PATH + _usr.profile_image) : null}\n                            className={styles.group3}\n                        >\n                            {!_usr.profile_image ?\n                                _usr.name.charAt(0).toUpperCase() + '' +\n                                (_usr.surname ? _usr.surname.charAt(0).toUpperCase() : '') : null\n                            }\n                        </Avatar>)\n                    }\n                </AvatarGroup>\n                <ListItemText\n                    primary={<b className={styles.title}>{props.chatTitle}</b>}\n                />\n                <IconButton color=\"primary\" aria-label=\"info\" onClick={props.handleChatInfoOpen}>\n                    <InfoOutlinedIcon/>\n                </IconButton>\n            </ListItem>\n        );\n    else return null;\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DeleteChatDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpen('chat', false)}\n            aria-labelledby=\"delete-chat-dialog-title\"\n            aria-describedby=\"delete-chat-dialog-description\"\n        >\n            <DialogTitle id=\"delete-chat-dialog-title\">{\"Delete chat\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"delete-chat-dialog-description\">\n                    Are you sure you want to delete this chat?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleRemoveChat} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={() => props.setOpen('chat', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteChatDialog;","import React from 'react';\nimport AccountPreview from \"./AccountPreview\";\nimport GroupPreview from \"./GroupPreview\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DeleteChatDialog from '../dialogs/DeleteChatDialog';\nimport DeleteContactDialog from \"../dialogs/DeleteContactDialog\";\n\nconst styles = theme => ({\n    chatPreview: {\n        backgroundColor: 'white',\n        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.6)',\n        zIndex: 10,\n        minHeight: 72,\n        [theme.breakpoints.down('md')]: {\n            minHeight: 64,\n        },\n        display: 'flex',\n        alignItems: 'center'\n    },\n    accountContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n    },\n    menu: {\n        '& ul': {\n            padding: 0,\n        },\n    },\n});\n\n\nclass ChatInfoBar extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteChatDialogOpen: false,\n            deleteContactDialogOpen: false,\n        };\n\n        this.handleSetOpenDialog = this.handleSetOpenDialog.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.handleCloseMenu();\n    }\n\n    handleSetOpenDialog = (type, open) => {\n        switch (type) {\n            case 'chat':\n                this.setState({deleteChatDialogOpen: open});\n                break;\n            case 'contact':\n                this.setState({deleteContactDialogOpen: open});\n                break;\n            default:\n                break;\n        }\n    };\n\n    render(){\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.chatPreview}>\n                {\n                    this.props.getSelectedChatUserList(this.props.chatList).length === 1 &&\n                        this.props.chatList.find(_chat => _chat.chat_id === this.props.selectedChat).type === 'chat' ?\n                        <div className={classes.accountContainer}>\n                            <AccountPreview\n                                user={this.props.getSelectedChatUserList(this.props.chatList)[0]}\n                            />\n                            <IconButton onClick={this.props.handleOpenMenu}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                            <Menu\n                                id=\"account-menu\"\n                                open={Boolean(this.props.anchorMenu)}\n                                anchorEl={this.props.anchorMenu}\n                                onClose={this.props.handleCloseMenu}\n                                // className={classes.menu}\n                            >\n                                <MenuItem\n                                    className={classes.menuItem}\n                                    onClick={() => this.handleSetOpenDialog('chat', true)}\n                                >Remove chat</MenuItem>\n                                <MenuItem\n                                    onClick={() => this.handleSetOpenDialog('contact', true)}\n                                >Remove contact</MenuItem>\n                            </Menu>\n                        </div> : <GroupPreview\n                            users={this.props.getSelectedChatUserList(this.props.chatList)}\n                            chatTitle={this.props.chatList.filter(_chat => _chat.chat_id === this.props.selectedChat)[0].title}\n                            handleChatInfoOpen={this.props.handleChatInfoOpen}\n                            groupPhoto={this.props.chatList.find(_chat => _chat.chat_id === this.props.selectedChat).photo}\n                        />\n                }\n                <DeleteChatDialog\n                    open={this.state.deleteChatDialogOpen}\n                    setOpen={this.handleSetOpenDialog}\n                    handleRemoveChat={() => {\n                        this.props.handleRemoveChat();\n                        this.handleSetOpenDialog('chat', false);\n                    }}\n                />\n                <DeleteContactDialog\n                    open={this.state.deleteContactDialogOpen}\n                    setOpen={this.handleSetOpenDialog}\n                    handleRemoveContact={() => {\n                        this.props.handleRemoveContact();\n                        this.handleSetOpenDialog('contact', false);\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ChatInfoBar);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DeleteGroupDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={() => props.setOpen('delete', false)}\n            aria-labelledby=\"delete-group-dialog-title\"\n            aria-describedby=\"delete-group-dialog-description\"\n        >\n            <DialogTitle id=\"delete-group-dialog-title\">{\"Delete group\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"delte-group-dialog-description\">\n                    Are you sure you want to delete this group?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleRemoveGroup} color=\"primary\">\n                    Ok\n                </Button>\n                <Button onClick={() => props.setOpen('delete', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DeleteGroupDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction LeaveGroupDialog(props) {\n\n    return (\n        <Dialog\n            open={props.open}\n            maxWidth='xs'\n            onClose={() => props.setOpen('leave', false)}\n            aria-labelledby=\"leave-group-dialog-title\"\n            aria-describedby=\"leave-group-dialog-description\"\n        >\n            <DialogTitle id=\"leave-group-dialog-title\">{\"Leave group\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"leave-group-dialog-description\">\n                    Are you sure you want to leave this group?\n                    {\n                        props.isOwner ? ' Someone from group members will be a group owner.' : null\n                    }\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleLeaveGroup} color=\"primary\">\n                    Yes\n                </Button>\n                <Button onClick={() => props.setOpen('leave', false)} color=\"primary\" autoFocus>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default LeaveGroupDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Chip from '@material-ui/core/Chip';\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport AccountPreview from \"../components/AccountPreview\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst styles = theme => ({\n    label: {\n        fontSize: '16px',\n        marginTop: '10px',\n    },\n    chip: {\n        marginRight: 3,\n        marginBottom: 3\n    },\n    list: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    contactList: {\n        maxHeight: '216px',\n        overflowY: 'auto',\n    },\n});\n\nclass ManageMembersDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            search: '',\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.setState({\n            users: this.props.userList\n        });\n    }\n\n    handleClose = () => {\n        this.props.setOpen('manage-members', false);\n    };\n\n    handleSave = () => {\n        this.props.handleSaveGroupMembers(this.state.users);\n    };\n\n    handleAddUserToList(user){\n        this.setState({\n            users: [...this.state.users, user]\n        });\n    }\n\n    handleRemoveUserFromList(login){\n        this.setState({\n            users: this.state.users.filter(user => user.login !== login)\n        });\n    }\n\n    isUserInGroupList(user){\n        for(let i = 0; i < this.state.users.length; i++){\n            if(this.state.users[i].login === user.login){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render(){\n\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"manage-members-dialog-title\"\n                aria-describedby=\"manage-members-dialog-description\"\n                maxWidth='xs'\n                fullWidth\n            >\n                <DialogTitle id=\"manage-members-dialog-title\">{\"Manage group members\"}</DialogTitle>\n                <DialogContent>\n                    <Typography className={classes.label} component='h6' variant='h6'>Members:</Typography>\n                    <div className={classes.list}>\n                        {\n                            this.state.users.map((user, index) => <Chip\n                                key={index}\n                                className={classes.chip}\n                                color={user.login === this.props.owner ? 'primary' : 'default'}\n                                avatar={\n                                    user.profile_image ? <Avatar\n                                        src={API_PATH + user.profile_image}\n                                    /> : <Avatar>\n                                        {\n                                            (user.name ? user.name.charAt(0).toUpperCase() : '') + '' +\n                                            (user.surname ? user.surname.charAt(0).toUpperCase() : '')\n                                        }\n                                    </Avatar>\n                                }\n                                label={user.name + ' ' + user.surname}\n                                variant=\"outlined\"\n                                onDelete={\n                                    user.login !== this.props.owner &&\n                                    user.login !== this.props.currentUser ?\n                                        () => this.handleRemoveUserFromList(user.login) : null\n                                }\n                            />)\n                        }\n                    </div>\n                    <TextField\n                        margin='dense'\n                        id='manage-members-input'\n                        label='Filter by user name'\n                        fullWidth\n                        value={this.state.search}\n                        onChange={(e) => this.setState({search: e.target.value})}\n                        autoComplete=\"off\"\n                    />\n                    {\n                        this.props.contactList ? <div className={classes.contactList}>\n                            {\n                                this.props.contactList.sort((contactA, contactB) =>\n                                    contactA.name < contactB.name ? -1 : 1)\n                                    .filter(contact => (contact.name + ' ' + contact.surname).toLowerCase()\n                                        .includes(this.state.search.toLowerCase()))\n                                    .filter(contact => !this.isUserInGroupList(contact))\n                                    .map((user, index) => <AccountPreview\n                                        key={index}\n                                        user={user}\n                                        className={classes.user}\n                                        handleClick={() => this.handleAddUserToList(user)}\n                                        selected={false}\n                                    />)\n                            }\n                        </div> : null\n                    }\n                    {\n                        this.props.contactList &&\n                        this.props.contactList.length === 0 ? <ListItem>\n                            <ListItemText\n                                secondary={'This user does not exist or ' +\n                                'you already have a chat with this user.'}\n                            />\n                        </ListItem> : null\n                    }\n                </DialogContent>\n                <DialogActions className={classes.actions}>\n                    <Button onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                    <Button onClick={this.handleClose} autoFocus>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n\n    }\n}\n\nexport default withStyles(styles)(ManageMembersDialog);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Drawer from \"@material-ui/core/Drawer/Drawer\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport AccountPreview from \"./AccountPreview\";\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport connect from \"react-redux/es/connect/connect\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n    fetchUserGroups,\n    updateGroupTitle,\n    updateGroupPhoto,\n    updateGroupMembers\n} from \"../actions/chats\";\nimport Button from '@material-ui/core/Button';\nimport DeleteGroupDialog from \"../dialogs/DeleteGroupDialog\";\nimport UserInfoDialog from \"../dialogs/UserInfoDialog\";\nimport DeleteContactDialog from \"../dialogs/DeleteContactDialog\";\nimport Alert from \"@material-ui/lab/Alert/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport LeaveGroupDialog from \"../dialogs/LeaveGroupDialog\";\nimport EditPhotoDialog from \"../dialogs/EditPhotoDialog\";\nimport ManageMembersDialog from \"../dialogs/ManageMembersDialog\";\nimport withWidth from \"@material-ui/core/withWidth/withWidth\";\nimport {API_PATH} from \"../utils/constants\";\n\nconst drawerWidth = 350;\nconst styles = theme => ({\n    drawer: {\n        width: drawerWidth,\n        [theme.breakpoints.down('md')]: {\n            width: drawerWidth - 50,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        marginTop: 64,\n        [theme.breakpoints.down('md')]: {\n            marginTop: 48,\n            width: drawerWidth - 50,\n        },\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n        borderBottom: '1px solid',\n        borderBottomColor: theme.palette.text.disabled\n    },\n    chatInfo: {\n\n    },\n    avatar: {\n        width: 150,\n        height: 150,\n        fontSize: '3rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n        cursor: 'pointer',\n        position: 'relative',\n        backgroundColor: theme.palette.secondary,\n    },\n    avatarContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '20px 0',\n    },\n    title: {\n        textAlign: 'center',\n        margin: '0 auto 20px',\n        position: 'relative',\n        paddingLeft: 16,\n        paddingRight: 16,\n        display: 'inline',\n        '&:hover button': {\n            display: 'block',\n        },\n    },\n    userList: {\n        padding: 0,\n        maxHeight: 360,\n        overflowY: 'auto',\n    },\n    listLabel: {\n        fontWeight: 400,\n        paddingLeft: 15,\n        position: 'relative',\n        paddingRight: 16,\n        display: 'inline',\n        marginRight: 'auto',\n        '&:hover button': {\n            display: 'block',\n        },\n    },\n    editBtn: {\n        color: theme.palette.text.disabled,\n        position: 'absolute',\n        right: -10,\n        top: '50%',\n        transform: 'translateY(-50%)',\n        padding: 0,\n        display: 'none',\n        '&:hover': {\n            display: 'block',\n            backgroundColor: 'transparent',\n        },\n    },\n    titleEditField: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 15px',\n    },\n    iconBtn: {\n        padding: 0,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    deleteBtn: {\n        color: 'red',\n    },\n});\n\nconst mapStateToProps = (state) => ({\n    currentUser: state.auth.login,\n    contacts: state.contacts.contacts,\n    token: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateGroupTitle: (id, title) => dispatch(updateGroupTitle(id, title)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n    updateGroupPhoto: (token, data, chat) => dispatch(updateGroupPhoto(token, data, chat)),\n    updateGroupMembers: (chat, users) => dispatch(updateGroupMembers(chat, users)),\n});\n\nclass ChatInfoPanel extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditMode: false,\n            title: '',\n            deleteGroupDialogOpen: false,\n            selectedUser: null,\n            userInfoOpen: false,\n            deleteContactDialogOpen: false,\n            leaveGroupDialogOpen: false,\n            editPhotoDialogOpen: false,\n            manageMembersDialogOpen: false,\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            },\n        };\n\n        this.hanldeToggleEditTitle = this.hanldeToggleEditTitle.bind(this);\n        this.handleUpdateTitle = this.handleUpdateTitle.bind(this);\n        this.handleRemoveGroup = this.handleRemoveGroup.bind(this);\n        this.handleLeaveGroup = this.handleLeaveGroup.bind(this);\n        this.handleShowSnackbar = this.handleShowSnackbar.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.setSocketListeners();\n    }\n\n    setSocketListeners(){\n        this.props.socket.on('invitation_sent', data => {\n            if(this.props.currentUser === data.sender) {\n                this.handleShowSnackbar('success', data.message);\n                this.setOpen('user-info', false);\n            }\n        });\n        this.props.socket.on('invitation_error', data => {\n            if(this.props.currentUser === data.sender){\n                this.handleShowSnackbar('error', data.error);\n                this.setOpen('user-info', false);\n            }\n        });\n        this.props.socket.on('group_left', data => {\n            if(this.props.currentUser === data.user){\n                this.handleShowSnackbar('success', data.message);\n                this.setOpen('leave', false);\n                this.props.selectChat(null);\n            }\n            if(data.users.includes(this.props.currentUser)){\n                this.props.getGroups(this.props.token);\n            }\n        });\n        this.props.socket.on('leave_group_error', data => {\n            if(this.props.currentUser === data.user){\n                this.handleShowSnackbar('error', data.error);\n                this.setOpen('leave', false);\n            }\n        });\n    }\n\n    handleShowSnackbar(type, data){\n        this.setState({\n            snackbar: {\n                type: type,\n                message: data,\n                open: true,\n            }\n        });\n    }\n\n    handleSnackbarClose = (e, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            snackbar: {\n                type: '',\n                message: '',\n                open: false,\n            }\n        });\n    };\n\n    hanldeToggleEditTitle = () => this.setState({\n        title: this.props.selectedChat.title,\n        isEditMode: !this.state.isEditMode\n    });\n\n    handleUpdateTitle(){\n        this.props.updateGroupTitle(this.props.selectedChat.chat_id, this.state.title);\n        this.hanldeToggleEditTitle();\n    }\n\n    handleRemoveGroup = () => {\n        this.props.handleRemoveGroup(this.props.selectedChat.chat_id);\n        this.setOpen('delete', false);\n    };\n\n    handleLeaveGroup = () => {\n        const data = {\n            'chat_id': this.props.selectedChat.chat_id,\n            'user': this.props.currentUser,\n        };\n        this.props.socket.emit('leave_group', data);\n    };\n\n    handleSendInvitation(receiver){\n        const invitation = {\n            'sender': this.props.currentUser,\n            'receiver': receiver,\n            'message': ''\n        };\n\n        this.props.socket.emit('send_invitation', invitation);\n    }\n\n    setOpen = (type, open) => {\n        switch (type) {\n            case 'delete':\n                this.setState({deleteGroupDialogOpen: open});\n                break;\n            case 'leave':\n                this.setState({leaveGroupDialogOpen: open});\n                break;\n            case 'photo':\n                this.setState({editPhotoDialogOpen: open});\n                break;\n            case 'user-info':\n                this.setState({userInfoOpen: open});\n                break;\n            case 'contact':\n                this.setState({deleteContactDialogOpen: open});\n                break;\n            case 'manage-members':\n                this.setState({manageMembersDialogOpen: open});\n                break;\n            default:\n                break;\n        }\n    };\n\n    handleUpdatePhoto = (data) => {\n        this.props.updateGroupPhoto(this.props.token, data, this.props.selectedChat.chat_id);\n    };\n\n    handleSaveGroupMembers = (users) => {\n\n        let users_login = [];\n\n        for(let i = 0; i < users.length; i++){\n            users_login.push(users[i].login);\n        }\n        this.props.updateGroupMembers(this.props.selectedChat.chat_id, {users: users_login});\n        this.setOpen('manage-members', false);\n\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        if(this.props.selectedChat){\n            let users = [...this.props.selectedChat.users];\n\n            return (\n                <Drawer\n                    variant={this.props.width !== 'lg' ? 'temporary' : 'persistent'}\n                    anchor=\"right\"\n                    open={this.props.open}\n                    onClose={() => this.props.handleToggle(false)}\n                    className={classes.drawer}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.chatInfo}>\n                        {\n                            this.props.selectedChat.type === 'group' ? <div className={classes.container}>\n                                <div className={classes.avatarContainer}>\n                                    <Tooltip title=\"Click to add new photo\">\n                                        {\n                                            this.props.selectedChat.photo ? <Avatar\n                                                    className={classes.avatar}\n                                                    src={API_PATH + this.props.selectedChat.photo}\n                                                    onClick={() => this.setOpen('photo', true)}\n                                                /> :\n                                                <Avatar className={classes.avatar} onClick={() => this.setOpen('photo', true)}>\n                                                    {this.props.selectedChat.title.charAt(0).toUpperCase()}\n                                                </Avatar>\n                                        }\n                                    </Tooltip>\n                                </div>\n                                {\n                                    !this.state.isEditMode ? <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\n                                        {this.props.selectedChat.title}\n                                        <IconButton className={classes.editBtn} onClick={this.hanldeToggleEditTitle}><EditIcon/></IconButton>\n                                    </Typography> : <div className={classes.titleEditField}>\n                                        <TextField\n                                            value={this.state.title}\n                                            onChange={(e) => this.setState({title: e.target.value})}\n                                            margin='dense'\n                                            id='group-title-input'\n                                            label='Title'\n                                            fullWidth\n                                            autoComplete=\"off\"\n                                        />\n                                        <IconButton\n                                            onClick={this.handleUpdateTitle}\n                                            color=\"primary\"\n                                            className={classes.iconBtn}\n                                        >\n                                            <DoneIcon/>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={this.hanldeToggleEditTitle}\n                                            className={classes.iconBtn}\n                                        >\n                                            <CloseIcon/>\n                                        </IconButton>\n                                    </div>\n                                }\n\n                                <Typography variant=\"h6\" component=\"h6\" className={classes.listLabel}>\n                                    Members:\n                                    <IconButton onClick={() => this.setOpen('manage-members', true)} className={classes.editBtn}><ContactsIcon/></IconButton>\n                                </Typography>\n                                <List className={classes.userList}>\n                                    {\n                                        users.sort((userA, userB) =>\n                                            userA.name < userB.name ? -1 : 1).map((user, index) => <AccountPreview\n                                            key={index}\n                                            user={user}\n                                            handleClick={() => {\n                                                if(user.login !== this.props.currentUser){\n                                                    this.setState({selectedUser: user});\n                                                    this.setOpen('user-info', true);\n                                                }\n                                            }}\n                                            groupOwner={this.props.selectedChat.owner}\n                                        />)\n                                    }\n                                </List>\n                                <Divider />\n                                {\n                                    users.length > 1 ? <Button\n                                        className={classes.deleteBtn}\n                                        onClick={() => this.setOpen('leave', true)}\n                                    >\n                                        Leave Group\n                                    </Button> : null\n                                }\n                                {\n                                    this.props.currentUser === this.props.selectedChat.owner ? <Button\n                                        className={classes.deleteBtn}\n                                        onClick={() => this.setOpen('delete', true)}\n                                    >\n                                        Delete Group\n                                    </Button> : null\n                                }\n                                {\n                                    this.state.selectedUser ? <UserInfoDialog\n                                        open={this.state.userInfoOpen}\n                                        setOpen={this.setOpen}\n                                        data={this.state.selectedUser}\n                                        contacts={this.props.contacts}\n                                        handleGoToChat={() => this.props.handleGoToChat(this.state.selectedUser.login)}\n                                        handleRemoveContact={() => this.setOpen('contact', true)}\n                                        handleAddContact={() => this.handleSendInvitation(this.state.selectedUser.login)}\n                                    /> : null\n                                }\n                                <DeleteContactDialog\n                                    open={this.state.deleteContactDialogOpen}\n                                    setOpen={this.setOpen}\n                                    handleRemoveContact={() => {\n                                        this.props.handleRemoveContact(this.state.selectedUser);\n                                        this.setOpen('contact', false);\n                                        this.setOpen('user-info', false);\n                                    }}\n                                />\n                            </div> : null\n                        }\n                    </div>\n                    <DeleteGroupDialog\n                        open={this.state.deleteGroupDialogOpen}\n                        setOpen={this.setOpen}\n                        handleRemoveGroup={this.handleRemoveGroup}\n                    />\n                    <LeaveGroupDialog\n                        open={this.state.leaveGroupDialogOpen}\n                        setOpen={this.setOpen}\n                        handleLeaveGroup={this.handleLeaveGroup}\n                        isOwner={this.props.currentUser === this.props.selectedChat.owner}\n                    />\n                    <EditPhotoDialog\n                        open={this.state.editPhotoDialogOpen}\n                        setOpen={(open) => this.setOpen('photo', open)}\n                        handleUpdatePhoto={this.handleUpdatePhoto}\n                    />\n                    <ManageMembersDialog\n                        open={this.state.manageMembersDialogOpen}\n                        setOpen={this.setOpen}\n                        userList={users}\n                        owner={this.props.selectedChat.owner}\n                        currentUser={this.props.currentUser}\n                        contactList={this.props.contacts}\n                        handleSaveGroupMembers={this.handleSaveGroupMembers}\n                    />\n                    <Snackbar\n                        open={this.state.snackbar.open}\n                        autoHideDuration={6000}\n                        onClose={this.handleSnackbarClose}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                    >\n                        <Alert\n                            onClose={this.handleSnackbarClose}\n                            severity={this.state.snackbar.type}\n                        >{this.state.snackbar.message}</Alert>\n                    </Snackbar>\n                </Drawer>\n            );\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(withStyles(styles)(ChatInfoPanel)));","import React from 'react';\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport ChatView from '../../components/chatview/ChatView';\nimport styles from './styles';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport Typography from '@material-ui/core/Typography';\nimport MessageBox from \"../../components/messagebox/MessageBox\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport LogOutDialog from \"../../dialogs/LogOutDialog\";\nimport AccountDialog from \"../../dialogs/AccountDialog\";\nimport {fetchUserChats, readChat, fetchUserGroups, addChat} from \"../../actions/chats\";\nimport { fetchProtectedData } from \"../../actions/data\";\nimport connect from \"react-redux/es/connect/connect\";\nimport io from 'socket.io-client'\nimport AddChatDialog from \"../../dialogs/AddChatDialog\";\nimport ContactsDialog from \"../../dialogs/ContactsDialog\";\nimport ChatInfoBar from \"../../components/ChatInfoBar\";\nimport ChatInfoPanel from \"../../components/ChatInfoPanel\";\nimport {fetchContactList} from \"../../actions/contacts\";\nimport {API_PATH} from \"../../utils/constants\";\n\nconst mapStateToProps = (state) => ({\n    isFetching: state.chats.isFetching,\n    loaded: state.chats.loaded,\n    chats: state.chats.chats,\n    groups: state.chats.groups,\n    userLogin: state.auth.login,\n    userData: state.data.data,\n    token: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getChats: (token) => dispatch(fetchUserChats(token)),\n    readChat: (chat, type) => dispatch(readChat(chat, type)),\n    fetchContactList: (token) => dispatch(fetchContactList(token)),\n    getGroups: (token) => dispatch(fetchUserGroups(token)),\n    getUserData: (token) => dispatch(fetchProtectedData(token)),\n    addChat: (userLogin, openModal, selectChat) => dispatch(addChat(userLogin, openModal, selectChat)),\n});\n\nexport const socket = io(API_PATH);\n\nclass Dashboard extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            selectedChat: null,\n            chatInfoOpen: false,\n            logOutDialogOpen: false,\n            accountDialogOpen: false,\n            addChatDialogOpen: false,\n            contactsDialogOpen: false,\n            anchorMenu: null,\n        };\n\n        this.setModalOpen = this.setModalOpen.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.selectChat = this.selectChat.bind(this);\n        this.readMessage = this.readMessage.bind(this);\n        this.removeMessage = this.removeMessage.bind(this);\n        this.getSelectedChatUserList = this.getSelectedChatUserList.bind(this);\n        this.handleRemoveChat = this.handleRemoveChat.bind(this);\n        this.handleRemoveContact = this.handleRemoveContact.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.props.getChats(this.props.token);\n        this.props.getGroups(this.props.token);\n        this.props.getUserData(this.props.token);\n        this.setSocketListeners();\n\n        window.addEventListener('online', () => this.changeUserStatus('online'));\n        window.addEventListener('offline', () => this.changeUserStatus('offline'));\n        window.addEventListener('beforeunload', () => {\n            this.changeUserStatus('offline')\n        });\n        window.addEventListener('unload', () => {\n            this.changeUserStatus('offline')\n        });\n\n        this.changeUserStatus('online');\n    }\n\n    componentWillUnmount(){\n        this.changeUserStatus('offline');\n    }\n\n    setSocketListeners(){\n        socket.on('message_sent', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                if(data.chat === this.state.selectedChat && data.sender !== this.props.userLogin){\n                    if(this.props.chats.find(_chat => _chat.chat_id === data.chat)){\n                        this.readMessage(data.chat).then(() => {\n                            this.props.getChats(this.props.token);\n                            this.props.getGroups(this.props.token);\n                        });\n                    }\n                    else{\n                        this.readMessage(data.chat, 'group').then(() => {\n                            this.props.getChats(this.props.token);\n                            this.props.getGroups(this.props.token);\n                        });\n                    }\n                }\n                else{\n                    this.props.getChats(this.props.token);\n                    this.props.getGroups(this.props.token);\n                }\n            }\n        });\n        socket.on('message_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getChats(this.props.token);\n                this.props.getGroups(this.props.token);\n            }\n        });\n        socket.on('chat_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getChats(this.props.token);\n                if(this.state.selectedChat === data.chat) {\n                    this.selectChat(null);\n                }\n            }\n        });\n        socket.on('contact_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getChats(this.props.token);\n                this.props.fetchContactList(this.props.token);\n                if(this.state.selectedChat === data.chat) {\n                    this.selectChat(null);\n                }\n            }\n        });\n        socket.on('group_removed', (data) => {\n            if(data.users.includes(this.props.userLogin)){\n                this.props.getGroups(this.props.token);\n                if(this.state.selectedChat === data.group) {\n                    this.selectChat(null);\n                }\n            }\n        });\n    }\n\n    changeUserStatus(status){\n        socket.emit('change_user_status', {\n            user: this.props.userLogin,\n            status\n        });\n    }\n\n    selectChat(chatId, chatList){\n\n        const chat = chatList.find(_chat => _chat.chat_id === chatId);\n\n        if(chat.type === 'chat'){\n            if(!chat.receiverHasRead && chat.messages.length > 0 && chat.messages[chat.messages.length - 1].sender.login !== this.props.userLogin){\n                this.readMessage(chatId, 'chat')\n                    .then(() => this.setState({\n                        selectedChat: chatId,\n                        chatInfoOpen: false,\n                    }));\n            }\n            else {\n                this.setState({\n                    selectedChat: chatId,\n                    chatInfoOpen: false,\n                });\n            }\n        }\n        else{\n            const receiverHasRead = chat.receivers.find(_usr => _usr.login === this.props.userLogin);\n            if(receiverHasRead && chat.messages[chat.messages.length - 1].sender.login !== this.props.userLogin) {\n                this.readMessage(chatId, 'group')\n                    .then(() => this.setState({\n                        selectedChat: chatId,\n                        chatInfoOpen: false,\n                    }));\n            }\n            else{\n                this.setState({\n                    selectedChat: chatId,\n                    chatInfoOpen: false,\n                });\n            }\n        }\n    }\n\n    newChatBtnClicked = () => this.setModalOpen('add-chat', true);\n\n    chatInfoToggle = (state) => this.setState({\n        chatInfoOpen: state\n    });\n\n    async readMessage(chatId, type){\n        await this.props.readChat(chatId, type);\n    }\n\n    sendMessage(msg, type){\n\n        const message = {\n            'type': type,\n            'sender': this.props.userLogin,\n            'chat': this.state.selectedChat,\n            'message': msg\n        };\n\n        socket.emit('send_message', message);\n\n    }\n\n    removeMessage(msg){\n\n        const chat_list = [...this.props.groups, ...this.props.chats];\n        const chat = chat_list.find(_chat => _chat.chat_id === this.state.selectedChat);\n\n        console.log(chat.messages[chat.messages.length - 1]);\n\n        socket.emit('remove_message', {\n            message: msg,\n            chat: chat.chat_id,\n            type: chat.type,\n        });\n    }\n\n    handleRemoveChat(){\n        socket.emit('remove_chat', {\n            'chat_id': this.state.selectedChat\n        });\n    }\n\n    handleRemoveContact(user){\n        if(user){\n            const chat = this.props.chats.find(_chat => _chat.users.find(_usr => _usr.login === user.login));\n            console.log(user);\n            console.log(chat);\n            let data = {};\n            if(chat){\n                data = {\n                    'chat': chat.chat_id,\n                    'contact': user.login,\n                    'user': this.props.userLogin\n                };\n            }\n            else{\n                data = {\n                    'chat': null,\n                    'contact': user.login,\n                    'user': this.props.userLogin\n                };\n            }\n            socket.emit('remove_contact', data);\n        }\n        else {\n            const chat = this.props.chats.find(_chat => _chat.chat_id === this.state.selectedChat);\n            const contact = chat.users.find(_usr => _usr.login !== this.props.userLogin).login;\n\n            const data = {\n                'chat': this.state.selectedChat,\n                'contact': contact,\n                'user': this.props.userLogin\n            };\n\n            socket.emit('remove_contact', data);\n        }\n    }\n\n    handleRemoveGroup(id){\n        socket.emit('remove_group', {\n            'chat_id': id\n        });\n    }\n\n    setModalOpen(modal, state){\n        switch (modal) {\n            case 'logout':\n                this.setState({logOutDialogOpen: state});\n                break;\n            case 'account':\n                this.setState({accountDialogOpen: state});\n                break;\n            case 'add-chat':\n                this.setState({addChatDialogOpen: state});\n                break;\n            case 'contacts':\n                this.setState({contactsDialogOpen: state});\n                break;\n            default:\n                return;\n        }\n    }\n\n    getSelectedChatUserList(chatList){\n        let selectedChat = chatList.filter(_chat => _chat.chat_id === this.state.selectedChat)[0];\n        if(selectedChat)\n            return selectedChat.users.filter(_user => _user.login !== this.props.userLogin);\n        return [];\n    }\n\n    handleChatInfoToggle = () => this.setState({chatInfoOpen: !this.state.chatInfoOpen});\n\n    handleOpenAccountMenu = (e) => {\n        this.setState({anchorMenu: e.currentTarget});\n    };\n    handleCloseAccountMenu = () => {\n        this.setState({anchorMenu: null});\n    };\n\n    handleGoToChat = (login) => {\n        let chat = this.props.chats.find(_chat => _chat.users.find(_usr => _usr.login !== this.props.userLogin).login === login);\n        if(chat){\n            this.selectChat(chat.chat_id);\n        }\n        else {\n            this.props.addChat(login, null, this.selectChat);\n        }\n    };\n\n    render() {\n\n        const { classes } = this.props;\n\n        let chat_list = [];\n        if(this.props.chats && this.props.groups)\n            chat_list = [...this.props.groups, ...this.props.chats];\n\n        return (\n            <div className={'dashboard ' + classes.dashboard}>\n                <Sidebar\n                    history={this.props.history}\n                    newChatBtnHandle={this.newChatBtnClicked}\n                    selectChatHandle={this.selectChat}\n                    selectedChatIndex={this.state.selectedChat}\n                    logOutHandleClick={() => this.setModalOpen('logout', true)}\n                    accountHandleClick={() => this.setModalOpen('account', true)}\n                    contactsHandleClick={() => this.setModalOpen('contacts', true)}\n                    chatList={chat_list}\n                    user={this.props.userData}\n                />\n\n                    {\n                        this.state.selectedChat !== null ? <div className={this.state.chatInfoOpen ? classes.contentShift : classes.content}>\n                            <div className={classes.chatViewContainer}>\n                                <ChatInfoBar\n                                    getSelectedChatUserList={this.getSelectedChatUserList}\n                                    chatList={chat_list}\n                                    selectedChat={this.state.selectedChat}\n                                    handleChatInfoOpen={this.handleChatInfoToggle}\n                                    handleOpenMenu={this.handleOpenAccountMenu}\n                                    handleCloseMenu={this.handleCloseAccountMenu}\n                                    handleRemoveChat={this.handleRemoveChat}\n                                    handleRemoveContact={this.handleRemoveContact}\n                                    anchorMenu={this.state.anchorMenu}\n                                />\n                                <ChatView\n                                    chat={chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0]}\n                                    handleRemoveMessage={this.removeMessage}\n                                />\n                                {\n                                    chat_list.find(_chat => _chat.chat_id === this.state.selectedChat) ? <MessageBox\n                                        selectedChat={this.state.selectedChat}\n                                        selectedChatType={chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0].type}\n                                        sendMessageHandle={this.sendMessage}\n                                        readMessageHandle={this.readMessage}\n                                    /> : null\n                                }\n                            </div>\n                        </div> :\n                        <div className={classes.defaultComponent}>\n                            <div className=\"container\">\n                                <QuestionAnswerIcon className={classes.bigIcon}/>\n                                <Typography element='p' className={classes.text}>Choose a chat to start conversation.</Typography>\n                            </div>\n                        </div>\n                    }\n\n                <ChatInfoPanel\n                    open={this.state.chatInfoOpen}\n                    handleToggle={this.chatInfoToggle}\n                    selectedChat={chat_list.filter(_chat => _chat.chat_id === this.state.selectedChat)[0]}\n                    userLogin={this.props.userLogin}\n                    handleSelectChat={this.selectChat}\n                    handleRemoveGroup={this.handleRemoveGroup}\n                    handleGoToChat={this.handleGoToChat}\n                    handleRemoveContact={this.handleRemoveContact}\n                    socket={socket}\n                    selectChat={this.selectChat}\n                />\n                <LogOutDialog open={this.state.logOutDialogOpen} setOpen={this.setModalOpen}/>\n                {this.props.userData ?\n                    <AccountDialog\n                        open={this.state.accountDialogOpen}\n                        setOpen={this.setModalOpen}\n                    /> : null}\n                <AddChatDialog\n                    open={this.state.addChatDialogOpen}\n                    setOpen={this.setModalOpen}\n                />\n                <ContactsDialog\n                    open={this.state.contactsDialogOpen}\n                    setOpen={this.setModalOpen}\n                    socket={socket}\n                    handleSelectChat={this.selectChat}\n                    handleGoToChat={this.handleGoToChat}\n                    handleRemoveContact={this.handleRemoveContact}\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard));","const styles = theme => ({\n    registerPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto',\n            minHeight: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n    },\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(500 + theme.spacing(3) * 2)]: {\n            width: 500,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            margin: 0,\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(6),\n            borderRadius: 0,\n            flexGrow: 1,\n            justifyContent: 'center',\n        },\n    },\n    form: {\n        width: '100%',\n    },\n    input: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        }\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    hasAccountHeader: {\n        width: '100%'\n    },\n    logInLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        fontWeight: 'bolder'\n    },\n    alert: {\n        width: '100%',\n        marginTop: '20px',\n    },\n    avatar: {\n        width: '100px',\n        height: '100px',\n        fontSize: '2.25rem',\n        border: '2px solid',\n        borderColor: theme.palette.primary.main,\n    },\n    progress: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '15px 0',\n    },\n    avatarContainer: {\n      marginTop: '20px',\n    },\n    welcomeText: {\n        fontWeight: 400\n    },\n});\n\nexport default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { fetchUnauthorizedUserData, cleanUnauthorizedUserData } from '../../actions/data';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/auth';\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport {API_PATH} from \"../../utils/constants\";\n\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticating: state.auth.isAuthenticating,\n        statusText: state.auth.statusText,\n        userData: state.data.unauthorizedUser,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loginUser: (login, password) => dispatch(loginUser(login, password)),\n        getUserData: (login) => dispatch(fetchUnauthorizedUserData(login)),\n        cleanUserData: () => dispatch(cleanUnauthorizedUserData())\n    }\n}\n\nclass Login extends React.Component {\n\n    constructor() {\n        super();\n        const redirectRoute = '/login';\n        this.state = {\n            login: '',\n            password: '',\n            signinError: '',\n            redirectTo: redirectRoute,\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    login(e) {\n        e.preventDefault();\n        this.props.loginUser(this.state.login, this.state.password);\n        this.props.cleanUserData();\n    }\n\n    getData(){\n        if(this.state.login.length >= 5){\n            this.props.getUserData(this.state.login);\n        }\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.registerPage}>\n                <main className={classes.main}>\n                    <CssBaseline/>\n                    <Paper className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign In\n                        </Typography>\n                        {\n                            this.state.signinError || this.props.statusText ?\n                                <Alert severity=\"info\" className={classes.alert}>\n                                    {this.state.signinError || this.props.statusText}\n                                </Alert> :\n                                null\n                        }\n                        {\n                            this.props.userData ?  <center className={classes.avatarContainer}>\n                                {\n                                    this.props.userData.profile_image ? <Avatar\n                                            className={classes.avatar}\n                                            src={API_PATH + this.props.userData.profile_image}\n                                        /> :\n                                        <Avatar className={classes.avatar}>\n                                            {\n                                                (this.props.userData.name ? this.props.userData.name.charAt(0).toUpperCase() : '') + '' +\n                                                (this.props.userData.surname ? this.props.userData.surname.charAt(0).toUpperCase() : '')\n                                            }\n                                        </Avatar>\n                                }\n                                <Typography component=\"h2\" variant=\"h6\" className={classes.welcomeText}>\n                                    Welcome, {this.props.userData.name}\n                                </Typography>\n                            </center> : null\n                        }\n                        <form onSubmit={(e) => this.login(e)} className={classes.form}>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signin-email-input'>Login</InputLabel>\n                                <Input\n                                    autoFocus\n                                    className={classes.input}\n                                    onChange={(e) => this.userTyping('login', e)}\n                                    onBlur={this.getData}\n                                    id='signin-login-input'\n                                />\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signin-password-input'>Password</InputLabel>\n                                <Input type=\"password\" className={classes.input} onChange={(e) => this.userTyping('password', e)} id='signin-password-input'/>\n                            </FormControl>\n                            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n                        </form>\n                        <h5 className={classes.hasAccountHeader}>Don't Have An Account? <Link className={classes.logInLink} to='/register'>Sign Up</Link></h5>\n                    </Paper>\n                </main>\n            </div>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'login':\n                this.setState({ login: event.target.value });\n                this.props.cleanUserData();\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            default:\n                break;\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Login));","const styles = theme => ({\n    registerPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto',\n            minHeight: '100%',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n        },\n    },\n    main: {\n        width: 'auto',\n        display: 'block',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(500 + theme.spacing(3) * 2)]: {\n            width: 500,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            margin: 0,\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(6),\n            borderRadius: 0,\n            flexGrow: 1,\n            justifyContent: 'center',\n        },\n    },\n    form: {\n        width: '100%',\n    },\n    input: {\n        '&:hover:before': {\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42) !important'\n        }\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    hasAccountHeader: {\n        width: '100%'\n    },\n    logInLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        fontWeight: 'bolder'\n    },\n    alert: {\n        width: '100%',\n        marginTop: '20px',\n    }\n});\n\nexport default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\n\nimport {bindActionCreators} from \"redux\";\nimport { connect } from 'react-redux';\nimport * as actionCreators from \"../../actions/auth\";\n\n\nfunction mapStateToProps(state) {\n    return {\n        isRegistering: state.auth.isRegistering,\n        registerStatusText: state.auth.registerStatusText,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nclass Register extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: null,\n            surname: null,\n            login: null,\n            password: null,\n            passwordConfirmation: null,\n            signupError: ''\n        };\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.registerPage}>\n                <main className={classes.main}>\n                    <CssBaseline/>\n                    <Paper className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign Up\n                        </Typography>\n                        {\n                            this.state.signupError || this.props.registerStatusText ?\n                                <Alert severity=\"info\" className={classes.alert}>\n                                    {this.state.signupError || this.props.registerStatusText}\n                                </Alert> :\n                                null\n                        }\n                        <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-email-input'>Name</InputLabel>\n                                <Input className={classes.input} autoFocus onChange={(e) => this.userTyping('name', e)} id='signup-name-input'/>\n                            </FormControl>\n                            <FormControl fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-email-input'>Surname(Optional)</InputLabel>\n                                <Input className={classes.input} onChange={(e) => this.userTyping('surname', e)} id='signup-surname-input'/>\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-email-input'>Login</InputLabel>\n                                <Input className={classes.input} onChange={(e) => this.userTyping('login', e)} id='signup-login-input'/>\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-password-input'>Password</InputLabel>\n                                <Input type=\"password\" className={classes.input} onChange={(e) => this.userTyping('password', e)} id='signup-password-input'/>\n                            </FormControl>\n                            <FormControl required fullWidth margin='normal'>\n                                <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Password</InputLabel>\n                                <Input type=\"password\" className={classes.input} onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'/>\n                            </FormControl>\n                            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n                        </form>\n                        <h5 className={classes.hasAccountHeader}>Already Have An Account? <Link className={classes.logInLink} to='/login'>Log In</Link></h5>\n                    </Paper>\n                </main>\n            </div>\n        );\n    }\n\n    userTyping = (whichInput, event) => {\n        switch (whichInput) {\n            case 'name':\n                this.setState({ name: event.target.value });\n                break;\n            case 'surname':\n                this.setState({ surname: event.target.value });\n                break;\n            case 'login':\n                this.setState({ login: event.target.value });\n                break;\n            case 'password':\n                this.setState({ password: event.target.value });\n                break;\n            case 'passwordConfirmation':\n                this.setState({ passwordConfirmation: event.target.value });\n                break;\n            default:\n                break;\n        }\n    };\n\n    formIsValid = () => this.state.password === this.state.passwordConfirmation;\n    loginIsValid = () => this.state.login.length >= 6;\n    passwordIsValid = () => this.state.password.length >= 6;\n\n    submitSignup = (e) => {\n        e.preventDefault();\n\n        this.setState({signupError: ''});\n\n        if(!this.loginIsValid()){\n            this.setState({ signupError: 'Login must be at least 6 characters.' });\n            return;\n        }\n        if(!this.passwordIsValid()) {\n            this.setState({ signupError: 'Password must be at least 6 characters.' });\n            return;\n        }\n        if(!this.formIsValid()) {\n            this.setState({ signupError: 'Passwords do not match.' });\n            return;\n        }\n\n        this.props.registerUser(this.state.name, this.state.surname, this.state.login, this.state.password, this.state.redirectTo);\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Register));","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0874ff',\n        },\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 768,\n            md: 992,\n            lg: 1200\n        }\n    },\n});\n\ninterface IThemeProps{\n    children:any;\n}\nexport default function Theme(props: IThemeProps) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport history from '../history';\nimport * as actionCreators from '../actions/auth';\nimport { validate_token } from '../utils/http_functions';\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        userLogin: state.auth.login,\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nexport function requireNoAuthentication(Component) {\n\n    class notAuthenticatedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                loaded: false,\n            };\n        }\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n        static getDerivedStateFromProps(nextProps, prevState){\n            if(nextProps.isAuthenticated) history.push('/');\n            else{\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (token) validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        nextProps.loginUserSuccess(token, login);\n                        history.push('/');\n                    }\n                    else return {loaded: true};\n                })\n                    .catch(res => {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('userLogin');\n                        history.push('/');\n                    });\n                else return {loaded: true};\n            }\n            return null;\n        }\n\n        checkAuth(props = this.props) {\n            if (props.isAuthenticated) history.push('/');\n            else {\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (token) validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        this.props.loginUserSuccess(token, login);\n                        history.push('/');\n                    }\n                    else this.setState({\n                        loaded: true,\n                    });\n                });\n                else this.setState({\n                    loaded: true,\n                });\n            }\n        }\n\n        render() {\n\n            return (\n                <div className='auth-component'>\n                    {!this.props.isAuthenticated && this.state.loaded\n                        ? <Component {...this.props} />\n                        : null\n                    }\n                </div>\n            );\n\n        }\n    }\n\n    return connect(mapStateToProps, mapDispatchToProps)(notAuthenticatedComponent);\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions/auth';\nimport {validate_token} from \"../utils/http_functions\";\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.auth.token,\n        userLogin: state.auth.login,\n        isAuthenticated: state.auth.isAuthenticated,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actionCreators, dispatch);\n}\n\nexport function requireAuthentication(Component) {\n    class AuthenticatedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                loaded_if_needed: false,\n            };\n        }\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n        static getDerivedStateFromProps(nextProps, prevState){\n            if(!nextProps.isAuthenticated){\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (!token) nextProps.history.push('/login');\n                else validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        nextProps.loginUserSuccess(token, login);\n                        return {loaded_if_needed: true};\n                    }\n                    else nextProps.history.push('/login');\n                });\n\n            }\n            return null;\n        }\n\n        checkAuth(props = this.props) {\n            if (!props.isAuthenticated) {\n                const token = localStorage.getItem('token');\n                const login = localStorage.getItem('userLogin');\n\n                if (!token) this.props.history.push('/login');\n                else validate_token(token).then(res => {\n                    if (res.status === 200) {\n                        this.props.loginUserSuccess(token, login);\n                        this.setState({\n                            loaded_if_needed: true,\n                        });\n                    }\n                    else this.props.history.push('/login');\n                })\n                    .catch(res => {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('userLogin');\n                        this.props.history.push('/login');\n                    });\n            } else this.setState({\n                loaded_if_needed: true,\n            });\n        }\n\n        render() {\n            return (\n                <div className='auth-component'>\n                    {this.props.isAuthenticated && this.state.loaded_if_needed\n                        ? <Component {...this.props} />\n                        : null\n                    }\n                </div>\n            );\n\n        }\n    }\n\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\n}","import { createReducer } from '../utils/misc';\nimport {\n    LOGIN_USER_REQUEST,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILURE,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILURE,\n    LOGOUT_USER\n} from '../utils/constants';\n\nconst initialState = {\n    token: null,\n    login: null,\n    isAuthenticated: false,\n    isAuthenticating: false,\n    statusText: null,\n    isRegistering: false,\n    isRegistered: false,\n    registerStatusText: null,\n};\n\nexport default createReducer(initialState, {\n\n    /**\n     * Login/Logout Reducers\n     */\n\n    [LOGIN_USER_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isAuthenticating: true,\n            statusText: null,\n        }),\n\n    [LOGIN_USER_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticating: false,\n            isAuthenticated: true,\n            token: payload.token,\n            login: payload.login,\n            statusText: 'You have been successfully logged in.',\n        }),\n\n    [LOGIN_USER_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticating: false,\n            isAuthenticated: false,\n            token: null,\n            userName: null,\n            statusText: `Authentication Error: ${payload.status} ${payload.statusText}`,\n        }),\n\n    [LOGOUT_USER]: (state) =>\n        Object.assign({}, state, {\n            isAuthenticated: false,\n            token: null,\n            userName: null,\n            status: 'success',\n            statusText: 'You have been successfully logged out.',\n        }),\n\n    /**\n     * Register Reducers\n     */\n\n    [REGISTER_USER_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticating: false,\n            isAuthenticated: true,\n            isRegistering: false,\n            token: payload.token,\n            login: payload.login,\n            registerStatusText: 'You have been successfully logged in.',\n        }),\n    [REGISTER_USER_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isRegistering: true,\n        }),\n    [REGISTER_USER_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isAuthenticated: false,\n            token: null,\n            login: null,\n            registerStatusText: `Register Error: ${payload.status} ${payload.statusText}`,\n        }),\n});","import { createReducer } from '../utils/misc';\nimport {\n    RECEIVE_PROTECTED_DATA,\n    FETCH_PROTECTED_DATA_REQUEST,\n    UPDATE_USER_DATA,\n    UPDATE_USER_DATA_REQUEST,\n    UPDATE_USER_DATA_FAILURE,\n    UPDATE_USER_DATA_CLOSE,\n    UPDATE_USER_PHOTO_REQUEST,\n    UPDATE_USER_PHOTO,\n    UPDATE_USER_PHOTO_FAILURE,\n    FETCH_USERS_DATA_REQUEST,\n    RECEIVE_USERS_DATA,\n    CLEAN_USERS_DATA,\n    RECEIVE_UNAUTHORIZED_USER_DATA,\n    FETCH_UNAUTHORIZED_USER_DATA_REQUEST,\n    FETCH_UNAUTHORIZED_USER_DATA_FAILURE,\n    CLEAN_UNAUTHORIZED_USER_DATA,\n} from '../utils/constants';\n\nconst initialState = {\n    data: null,\n    usersList: null,\n    status: null,\n    isFetching: false,\n    loaded: false,\n    unauthorizedUser: null\n};\n\nexport default createReducer(initialState, {\n    [RECEIVE_PROTECTED_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            data: payload.data,\n            // status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_PROTECTED_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [UPDATE_USER_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            data: payload.data,\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_DATA_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n    [UPDATE_USER_DATA_CLOSE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n        }),\n    [UPDATE_USER_PHOTO]: (state, payload) =>\n        Object.assign({}, state, {\n            data: payload.data,\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_PHOTO_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_USER_PHOTO_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n    [FETCH_USERS_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true\n        }),\n    [RECEIVE_USERS_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            usersList: payload.users,\n            isFetching: false,\n        }),\n    [CLEAN_USERS_DATA]: (state) =>\n        Object.assign({}, state, {\n            usersList: null,\n        }),\n    [RECEIVE_UNAUTHORIZED_USER_DATA]: (state, payload) =>\n        Object.assign({}, state, {\n            unauthorizedUser: payload.unauthorizedUser,\n            isFetching: false\n        }),\n    [FETCH_UNAUTHORIZED_USER_DATA_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true\n        }),\n    [FETCH_UNAUTHORIZED_USER_DATA_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            status: payload.status,\n            isFetching: false,\n            loaded: true,\n        }),\n    [CLEAN_UNAUTHORIZED_USER_DATA]: (state) =>\n        Object.assign({}, state, {\n            unauthorizedUser: null,\n        }),\n});","import { createReducer } from '../utils/misc';\nimport {\n    RECEIVE_USER_CHATS,\n    FETCH_USER_CHATS_REQUEST,\n    RECEIVE_USER_GROUPS,\n    FETCH_USER_GROUPS_REQUEST,\n    ADD_CHAT_REQUEST,\n    ADD_CHAT_SUCCESS,\n    ADD_CHAT_FAILURE,\n    ADD_CHAT_CLOSE,\n    ADD_GROUP_REQUEST,\n    ADD_GROUP_SUCCESS,\n    ADD_GROUP_FAILURE,\n    READ_CHAT_REQUEST,\n    READ_CHAT,\n    UPDATE_GROUP_TITLE_REQUEST,\n    UPDATE_GROUP_TITLE_SUCCESS,\n    UPDATE_GROUP_TITLE_FAILURE,\n    DELETE_GROUP_REQUEST,\n    DELETE_GROUP_SUCCESS,\n    DELETE_GROUP_FAILURE,\n    DELETE_CHAT_REQUEST,\n    DELETE_CHAT_SUCCESS,\n    DELETE_CHAT_FAILURE,\n    UPDATE_GROUP_PHOTO,\n    UPDATE_GROUP_PHOTO_FAILURE,\n    UPDATE_GROUP_PHOTO_REQUEST,\n    UPDATE_GROUP_MEMBERS_REQUEST,\n    UPDATE_GROUP_MEMBERS_FAILURE,\n    UPDATE_GROUP_MEMBERS_SUCCESS, TOGGLE_SIDEBAR\n} from '../utils/constants';\n\nconst initialState = {\n    chats: null,\n    groups: null,\n    isFetching: false,\n    loaded: false,\n    addChatError: null,\n    isAddingChat: false,\n    deleteGroupMessage: null,\n    deleteChatMessage: null,\n    sidebarOpen: false,\n};\n\nexport default createReducer(initialState, {\n    [RECEIVE_USER_CHATS]: (state, payload) =>\n        Object.assign({}, state, {\n            chats: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_USER_CHATS_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n    [ADD_CHAT_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: true,\n        }),\n\n    [ADD_CHAT_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: false\n        }),\n\n    [ADD_CHAT_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            addChatError: payload.error,\n            isAddingChat: false\n        }),\n    [ADD_CHAT_CLOSE]: (state, payload) =>\n        Object.assign({}, state, {\n            addChatError: payload.addChatError,\n        }),\n\n    [DELETE_CHAT_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [DELETE_CHAT_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteChatMessage: payload,\n        }),\n\n    [DELETE_CHAT_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteChatMessage: payload,\n        }),\n\n    [ADD_GROUP_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: true,\n        }),\n\n    [ADD_GROUP_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            addChatError: null,\n            isAddingChat: false\n        }),\n\n    [ADD_GROUP_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            addChatError: payload.error,\n            isAddingChat: false\n        }),\n\n    [UPDATE_GROUP_TITLE_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [UPDATE_GROUP_TITLE_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            isFetching: false\n        }),\n\n    [UPDATE_GROUP_TITLE_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            updateGroupError: payload.error,\n            isFetching: false\n        }),\n\n    [UPDATE_GROUP_MEMBERS_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [UPDATE_GROUP_MEMBERS_SUCCESS]: (state) =>\n        Object.assign({}, state, {\n            isFetching: false\n        }),\n\n    [UPDATE_GROUP_MEMBERS_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            updateGroupError: payload.error,\n            isFetching: false\n        }),\n\n    [DELETE_GROUP_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n\n    [DELETE_GROUP_SUCCESS]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteGroupMessage: payload,\n        }),\n\n    [DELETE_GROUP_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            isFetching: false,\n            deleteGroupMessage: payload,\n        }),\n\n    [READ_CHAT_REQUEST]: (state) =>\n        Object.assign({}, state, {\n           loaded: false\n        }),\n    [READ_CHAT]: (state) =>\n        Object.assign({}, state, {\n            loaded: true\n        }),\n    [RECEIVE_USER_GROUPS]: (state, payload) =>\n        Object.assign({}, state, {\n            groups: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_USER_GROUPS_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n        }),\n    [UPDATE_GROUP_PHOTO]: (state, payload) =>\n        Object.assign({}, state, {\n            updatePhotoMessage: payload.updatePhotoMessage,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_GROUP_PHOTO_FAILURE]: (state, payload) =>\n        Object.assign({}, state, {\n            updatePhotoMessage: payload.updatePhotoMessage,\n            isFetching: false,\n            loaded: true,\n        }),\n    [UPDATE_GROUP_PHOTO_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false,\n        }),\n    [TOGGLE_SIDEBAR]: (state, payload) =>\n        Object.assign({}, state, {\n            sidebarOpen: payload.sidebarOpen\n        }),\n});","import { createReducer } from '../utils/misc';\nimport {\n    RECEIVE_CONTACT_LIST,\n    FETCH_CONTACT_LIST_REQUEST,\n    RECEIVE_INVITATION_LIST,\n    FETCH_INVITATION_LIST_REQUEST,\n    RECEIVE_FILTERED_CONTACT_LIST,\n    FETCH_FILTERED_CONTACT_LIST_REQUEST,\n    CLEAN_CONTACT_LIST\n} from '../utils/constants';\n\nconst initialState = {\n    filteredContacts: null,\n    contacts: null,\n    isFetching: false,\n    loaded: false,\n};\n\nexport default createReducer(initialState, {\n    [RECEIVE_CONTACT_LIST]: (state, payload) =>\n        Object.assign({}, state, {\n            contacts: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_CONTACT_LIST_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false\n        }),\n    [RECEIVE_FILTERED_CONTACT_LIST]: (state, payload) =>\n        Object.assign({}, state, {\n            filteredContacts: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_FILTERED_CONTACT_LIST_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false\n        }),\n    [CLEAN_CONTACT_LIST]: (state) =>\n        Object.assign({}, state, {\n            filteredContacts: null,\n        }),\n    [RECEIVE_INVITATION_LIST]: (state, payload) =>\n        Object.assign({}, state, {\n            invitations: payload.data,\n            isFetching: false,\n            loaded: true,\n        }),\n    [FETCH_INVITATION_LIST_REQUEST]: (state) =>\n        Object.assign({}, state, {\n            isFetching: true,\n            loaded: false\n        }),\n});","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport auth from './auth';\nimport data from './data';\nimport chats from './chats';\nimport contacts from './contacts';\n\nconst rootReducer = combineReducers({\n    routing: routerReducer,\n    auth,\n    data,\n    chats,\n    contacts\n});\n\nexport default rootReducer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TopBar from './components/TopBar';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport Login from \"./pages/login/Login\";\nimport Register from \"./pages/register/Register\";\nimport Theme from \"./Theme\";\nimport browserHistory from './history';\nimport { Provider } from 'react-redux';\nimport { requireNoAuthentication } from './components/notAuthenticatedComponent';\nimport { requireAuthentication } from './components/AuthenticatedComponent';\nimport configureStore from './store/configureStore';\nimport { syncHistoryWithStore } from 'react-router-redux';\n\nconst useStyles = makeStyles(() => ({\n    app: {\n      height: '100%',\n    },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n    const store = configureStore();\n    const history = syncHistoryWithStore(browserHistory, store);\n\n    return <div className={'app ' + classes.app}>\n        <Provider store={store}>\n            <Theme>\n                <TopBar/>\n                <Router history={history}>\n                    <Switch>\n                        <Route exact path='/' component={requireAuthentication(Dashboard)}/>\n                        <Route path='/login' component={requireNoAuthentication(Login)}/>\n                        <Route path='/register' component={requireNoAuthentication(Register)}/>\n                    </Switch>\n                </Router>\n            </Theme>\n        </Provider>\n    </div>\n}\n\nexport default App;","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\n\nexport default function configureStore(initialState) {\n    const store = createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunkMiddleware)\n    );\n\n    if (module.hot) {\n        // Enable Webpack hot module replacement for reducers\n        module.hot.accept('../reducers', () => {\n            const nextRootReducer = require('../reducers/index').default;\n\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}